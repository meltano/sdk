# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
#
# Matrix syntax not correct:
# .parallel:python_version:
#   parallel:
#     matrix:
#       - PYTHON_VERSION: ["3.6", "3.7", "3.8"]

image: python:3.6

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V
  - pip install pipx
  # Force update PATH to include pipx executables
  - export PATH=$PATH:/root/.local/bin
  - pipx install poetry
  - pipx install tox
  - poetry install

test_and_deploy:
  script:
    - poetry run pytest
    - |
      echo "Publishing to PyPi..."
      if [[ "$BRANCH_NAME" == *main ]]
      then
        poetry version --short
      else
        poetry version $(poetry version --short)-dev.$CI_JOB_ID
        poetry version --short
      fi
      echo -e "\nPublishing to version ref '$(poetry version --short)'...\n\n"
      # poetry config pypi-token.pypi "$PYPI_PUBLISH_TOKEN"
      poetry publish --build
    - |
      echo "Waiting for PyPi availability..."
      pwd
      ls -la
      export VER=$(poetry version --short)
      export PIPERR=$(pip install tapdance==$VER 2>&1)
      echo "Checking for PyPi availability of version $VER"
      if [[ $PIPERR == *"$VER"* ]]; then { echo "Yes"; } else { echo "Not yet found..."; sleep 30; } fi;
      export PIPERR=$(pip install tapdance==$VER 2>&1)
      if [[ $PIPERR == *"$VER"* ]]; then { echo "Yes"; } else { echo "Not yet found..."; sleep 30; } fi;
      export PIPERR=$(pip install tapdance==$VER 2>&1)
      if [[ $PIPERR == *"$VER"* ]]; then { echo "Yes"; } else { echo "Not yet found..."; sleep 30; } fi;
      export PIPERR=$(pip install tapdance==$VER 2>&1)
      if [[ $PIPERR == *"$VER"* ]]; then { echo "Yes"; } else { echo "Not yet found..."; sleep 30; } fi;
      export PIPERR=$(pip install tapdance==$VER 2>&1)
      if [[ $PIPERR == *"$VER"* ]]; then { echo "Yes"; } else { echo "Not yet found..."; sleep 30; } fi;
      export PIPERR=$(pip install tapdance==$VER 2>&1)
      if [[ $PIPERR == *"$VER"* ]]; then { echo "Yes"; } else { echo "Not yet found..."; sleep 30; } fi;
      export PIPERR=$(pip install tapdance==$VER 2>&1)
      if [[ $PIPERR == *"$VER"* ]]; then { echo "Yes"; } else { echo "Not found. Giving up. Last message from PyPi was $PIPERR"; exit 1; } fi;
