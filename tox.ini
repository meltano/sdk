[tox]
envlist = test, lint  # By default, use current python for pytest and linting
passenv = TOXENV CI GITLAB_* CODECOV_* TAP_* TARGET_* SAMPLE_*
skipsdist=True
isolated_build = true

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[testenv]
passenv = TOXENV CI GITLAB_* CODECOV_* TAP_* TARGET_* SAMPLE_*
whitelist_externals = poetry
commands_pre =
    poetry install --no-root
commands =
    poetry run coverage run -m pytest -x -v
    poetry run coverage report --show-missing
    poetry run codecov -e TOXENV

[testenv:test]
# Use default py interpreter

[testenv:htmlcov]
# Launch local web browser with previously-captured pytest coverage results
whitelist_externals =
    echo
    poetry
    open
commands_pre =
    echo "Skipping install..."
commands =
    poetry run coverage html
    open ./htmlcov/index.html

[testenv:lint]
commands =
    poetry run black --check --diff singer_sdk/ tests/ samples/
    poetry run isort --check singer_sdk tests samples
    poetry run flake8 singer_sdk tests samples
    poetry run mypy singer_sdk --exclude='tests'

[flake8]
ignore = W503, C901, ANN101
max-line-length = 88
exclude = cookiecutter
per-file-ignores =
    # Don't require docstrings or type annotations in tests
    tests/*:D100,D102,D103,DAR,ANN
    # Don't require docstrings conventions or type annotations in SDK samples
    samples/*:ANN,DAR
    # Don't require docstrings conventions or type annotations in private modules
    singer_sdk/helpers/_*.py:ANN,DAR,D105
    # Don't require docstrings conventions in "meta" code
    singer_sdk/helpers/_classproperty.py:D105
max-complexity = 10
docstring-convention = google

[coverage:run]
source = singer_sdk
omit =
    tests/*
    samples/*
    singer_sdk/helpers/_compat.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\bProtocol\):
