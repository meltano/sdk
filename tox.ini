[tox]
envlist = test, combine_coverage, coverage_artifact, lint, docs, pre-commit # By default, use current python for pytest and linting
passenv = TOXENV CI GITLAB_* CODECOV_* TAP_* TARGET_* SAMPLE_*
skipsdist=True
isolated_build = true

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[testenv]
passenv = TOXENV CI GITLAB_* CODECOV_* TAP_* TARGET_* SAMPLE_*
whitelist_externals = poetry
commands_pre =
    poetry install --no-root
commands =
    poetry run coverage run --parallel -m pytest -x -v {posargs}

[testenv:test]
# Use default py interpreter

[testenv:doctest]
commands =
    poetry run pytest --doctest-modules {posargs:singer_sdk}

[testenv:htmlcov]
# Launch local web browser with previously-captured pytest coverage results
whitelist_externals =
    echo
    poetry
    open
commands_pre =
    echo "Skipping install..."
commands =
    poetry run coverage html
    open ./htmlcov/index.html

[testenv:mypy]
commands =
    poetry run mypy singer_sdk --exclude='tests'

[testenv:lint]
commands =
    poetry run black --check --diff singer_sdk/ tests/ samples/
    poetry run isort --check singer_sdk tests samples
    poetry run flake8 singer_sdk tests samples

[testenv:pre-commit]
whitelist_externals = pre-commit
commands_pre =
    pre-commit install
commands =
    pre-commit run --all

[testenv:docs]
commands_pre =
    poetry install --no-root -E docs
commands =
    poetry run sphinx-build docs build -W

[testenv:combine_coverage]
commands =
    poetry run coverage combine
    poetry run coverage report --show-missing

[testenv:coverage_artifact]
commands =
    poetry run coverage {posargs:xml}
