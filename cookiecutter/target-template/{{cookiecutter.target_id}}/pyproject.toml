[tool.poetry]
name = "{{cookiecutter.target_id}}"
version = "0.0.1"
description = "`{{cookiecutter.target_id}}` is a Singer target for {{cookiecutter.destination_name}}, built with the Meltano Singer SDK."
authors = ["{{ cookiecutter.admin_name }}"]
keywords = [
    "ELT",
    "{{cookiecutter.destination_name}}",
]
license = "Apache 2.0"

[tool.poetry.dependencies]
python = "<3.12,>=3.7.1"
singer-sdk = { version="^0.18.0"}
fs-s3fs = { version = "^1.1.1", optional = true}
{%- if cookiecutter.serialization_method != "SQL" %}
requests = "^2.28.1"
{%- endif %}

[tool.poetry.dev-dependencies]
pytest = "^7.2.1"
flake8 = "^5.0.4"
black = "^22.12.0"
pydocstyle = "^6.2.1"
mypy = "^0.991"
isort = "^5.11.4"
{%- if cookiecutter.serialization_method != "SQL" %}
types-requests = "^2.28.11.7"
{%- endif %}

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.isort]
profile = "black"
multi_line_output = 3 # Vertical Hanging Indent
src_paths = "{{cookiecutter.library_name}}"

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
{{cookiecutter.target_id}} = '{{cookiecutter.library_name}}.target:Target{{ cookiecutter.destination_name }}.cli'
