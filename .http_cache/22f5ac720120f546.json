{
  "cookies": {
    "_cfuvid": "0Cwz7NSatlEGil2R3h.Ts4ZuFAJgxnrtCh52xw.xpVo-1747940819454-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:06:59.349497+00:00",
  "elapsed": 0.658977,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e9806380d1f76-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:06:59 GMT",
    "ETag": "W/\"b27ec4fab4ee4c6231318eb411244a04\"",
    "Link": "<https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=2&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"prev\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=4&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"next\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=1&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"first\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=10&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=0Cwz7NSatlEGil2R3h.Ts4ZuFAJgxnrtCh52xw.xpVo-1747940819454-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-27-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-d",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"ddd6cdcf812675a30ad984a278fa0514\",\"version\":\"1\"}",
    "x-next-page": "4",
    "x-page": "3",
    "x-per-page": "20",
    "x-prev-page": "2",
    "x-request-id": "ddd6cdcf812675a30ad984a278fa0514",
    "x-runtime": "0.452954",
    "x-total": "200",
    "x-total-pages": "10"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&page=3&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&page=3&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z",
  "_decoded_content": [
    {
      "id": 107436828,
      "iid": 369,
      "project_id": 22672923,
      "title": "Release v0.4.8",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release v0.4.8`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [x] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [ ] Post-release announcement steps:\n    1. [ ] Post announcement to Meltano slack: `#announcements`\n    2. [ ] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [ ] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [ ] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-04-28T21:47:05.720Z",
      "updated_at": "2022-05-06T15:11:32.148Z",
      "closed_at": "2022-05-06T15:11:32.138Z",
      "closed_by": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "labels": [],
      "milestone": null,
      "assignees": [
        {
          "id": 4025463,
          "username": "cjohnhanson",
          "public_email": "",
          "name": "Cody Hanson",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
          "web_url": "https://gitlab.com/cjohnhanson"
        }
      ],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "user_notes_count": 0,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/369",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 17
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/369",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/369/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/369/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#369",
        "relative": "#369",
        "full": "meltano/sdk#369"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108280906,
      "iid": 381,
      "project_id": 22672923,
      "title": "Cross-instance leakage in `extra_url_params`",
      "description": "There is a bug in the references to `extra_url_params` - as mitigated in this commit: https://github.com/MeltanoLabs/tap-gitlab/commit/32e657481c72015170b0a54117b46434eea364fe\n\nThe reference to `self.extra_url_params` is not copied before being used as a local working variable, which causes updates to the dictionary to bleed across instances of the class and subclasses.",
      "state": "closed",
      "created_at": "2022-05-10T04:19:47.374Z",
      "updated_at": "2022-05-10T04:25:22.797Z",
      "closed_at": "2022-05-10T04:25:22.791Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/381",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/381",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/381/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/381/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#381",
        "relative": "#381",
        "full": "meltano/sdk#381"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 88230456,
      "iid": 137,
      "project_id": 22672923,
      "title": "Support for backoff retry codes customization",
      "description": "Related to #134 - we should allow developers to customize which error codes receive backoff-based retries.",
      "state": "closed",
      "created_at": "2021-06-04T16:41:05.928Z",
      "updated_at": "2022-05-11T15:05:27.701Z",
      "closed_at": "2022-05-11T15:03:04.549Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 1,
      "upvotes": 3,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/137",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/137",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/137/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/137/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#137",
        "relative": "#137",
        "full": "meltano/sdk#137"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 88411834,
      "iid": 140,
      "project_id": 22672923,
      "title": "Formal handling of API rate limits",
      "description": "SDK error handling could be extended to support an `APIRateLimitReached` exception type. The method for detecting rate limit errors would differ across implementations, but the shared benefit would be consistent error messaging to tap users.\n\nOrchestrators such as Meltano might also be able to detect the specific error code or error message related to rate limits, and smartly retry after a specified interval (for instance, after an hour has passed). Similarly, we could add settings-based config for SDK-based taps, causing the tap to (1) flush the latest state messages, (2) sleep for a configurable interval, (3) retry after the sleep interval has passed, (4) as long as rate limits are reached, loop - until either a max runtime duration is reached or the process is terminated by the orchestrator.",
      "state": "closed",
      "created_at": "2021-06-08T18:20:40.731Z",
      "updated_at": "2022-05-11T15:05:27.814Z",
      "closed_at": "2022-05-11T15:03:08.221Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "Extract",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 16,
      "merge_requests_count": 1,
      "upvotes": 6,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/140",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/140",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/140/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/140/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#140",
        "relative": "#140",
        "full": "meltano/sdk#140"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 106551659,
      "iid": 361,
      "project_id": 22672923,
      "title": "JSONPath expressions don't support extensions",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nJSONPath expressions for records and pagination tokens (see [source](https://gitlab.com/meltano/sdk/-/blob/241b38e8b6cdfa6f3397d9c70e7b9082b4594554/singer_sdk/streams/rest.py#L31-35)) don't support JSONPath extensions such as filters, sorting, etc.\n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\nTry using an expression with a filter, such as `$.link[?(@.relation=='next')].url` and the tap execution will fail.\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\nJSONPath extensions are not supported.\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nJSONPath extensions are a useful feature and should be supported.\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\nNA\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\n\nAccording to the [`jsonpath-ng` docs](https://github.com/h2non/jsonpath-ng#usage), extensions are supported using the _extended_ parser:\n\n```python\n>>> from jsonpath_ng.ext import parse\n\n# A robust parser, not just a regex. (Makes powerful extensions possible; see below)\n>>> jsonpath_expr = parse('foo[*].baz')\n```\n\nAs a first step, a test case should be added here: https://gitlab.com/meltano/sdk/-/blob/241b38e8b6cdfa6f3397d9c70e7b9082b4594554/tests/core/test_streams.py#L156-225",
      "state": "closed",
      "created_at": "2022-04-12T22:43:42.225Z",
      "updated_at": "2022-05-11T22:50:37.198Z",
      "closed_at": "2022-04-18T18:13:56.193Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "flow::Review",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351598,
        "iid": 208,
        "group_id": 2524164,
        "title": "April 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-11-29T21:38:06.797Z",
        "updated_at": "2022-05-02T14:53:27.097Z",
        "due_date": "2022-04-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/208"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/361",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/361",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/361/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/361/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#361",
        "relative": "#361",
        "full": "meltano/sdk#361"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108021447,
      "iid": 371,
      "project_id": 22672923,
      "title": "SQL Targets: varchar columns generally require maxlength",
      "description": "## Summary\nMost databases require a max length to be specified for varchar columns. Not all do (SQLite, Postgres, and Snowflake do not) but most do. The SDK currently creates varchar columns without a max length and thus table creation fails when the DB requires it. If the schema provided by the tap provides a max length it should be used.\n\n\n## Steps to reproduce\n1. Create a SQL target using the SDK for a database such as MySQL\n2. Feed the target data with a stream containing a string field where the schema record specifies a max length\n\n\n## What is the current bug behavior?\nCreation of the table in the destination DB will fail due to a lack of a length.\n\n\n## What is the expected correct behavior?\nIf the tap provides a max length in the schema record it should be used.\n\n\n## Possible fixes\nThe relevant code is in singer_sdk/typing.py. MR incoming too.",
      "state": "closed",
      "created_at": "2022-05-04T15:27:03.738Z",
      "updated_at": "2022-05-12T22:24:23.743Z",
      "closed_at": "2022-05-04T22:59:09.148Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2136620,
        "iid": 176,
        "group_id": 2524164,
        "title": "Staging",
        "description": "",
        "state": "active",
        "created_at": "2021-07-07T19:00:49.676Z",
        "updated_at": "2021-07-07T19:00:49.676Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/176"
      },
      "assignees": [],
      "author": {
        "id": 11028865,
        "username": "tbriggs2",
        "public_email": null,
        "name": "Thomas Briggs",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0333fed181cc72b244e53f28299a2fbd4c00d3e16ae323c6771a12d3d442917a?s=80&d=identicon",
        "web_url": "https://gitlab.com/tbriggs2"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/371",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/371",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/371/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/371/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#371",
        "relative": "#371",
        "full": "meltano/sdk#371"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108115029,
      "iid": 378,
      "project_id": 22672923,
      "title": "Release v0.4.9",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [x] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [x] Post-release announcement steps:\n    1. [x] Post announcement to Meltano slack: `#announcements`\n    2. [ ] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [ ] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [ ] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-05-05T22:46:34.182Z",
      "updated_at": "2022-05-13T20:58:27.980Z",
      "closed_at": "2022-05-13T20:58:27.960Z",
      "closed_by": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "labels": [
        "Release"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [
        {
          "id": 4025463,
          "username": "cjohnhanson",
          "public_email": "",
          "name": "Cody Hanson",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
          "web_url": "https://gitlab.com/cjohnhanson"
        }
      ],
      "author": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "user_notes_count": 0,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/378",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 19
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/378",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/378/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/378/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#378",
        "relative": "#378",
        "full": "meltano/sdk#378"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108023469,
      "iid": 372,
      "project_id": 22672923,
      "title": "SQL Targets: Processing of activate_version record fails if table does not yet exist",
      "description": "## Summary\nSQLSink.activate_version assumes that the destination table exists. The first time the pipeline is executed this may not be true, however, since the table will not be created until the first process_batch call.\n\n\n## Steps to reproduce\nCreate a pipeline where the tap produces activate_version records (I used tap-mysql) and the target relies on the SDK to handle activation version records. I discovered this while developing my own target but I was able to reproduce it using the [SDK-based version of the SQLite target](https://github.com/MeltanoLabs/target-sqlite/tree/port-to-sdk).\n\n\n## What is the current bug behavior?\nThe pipeline will fail with a 'table does not exist' error caused by the DELETE FROM that SQLSink.activate_version executes.\n\n\n## What is the expected correct behavior?\nSQLSink.activate_version should do nothing if the table doesn't exist.\n\n\n## Possible fixes\nMR incoming",
      "state": "closed",
      "created_at": "2022-05-04T16:08:04.953Z",
      "updated_at": "2022-05-16T15:13:21.245Z",
      "closed_at": "2022-05-16T15:13:21.204Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 11028865,
        "username": "tbriggs2",
        "public_email": null,
        "name": "Thomas Briggs",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0333fed181cc72b244e53f28299a2fbd4c00d3e16ae323c6771a12d3d442917a?s=80&d=identicon",
        "web_url": "https://gitlab.com/tbriggs2"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/372",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/372",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/372/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/372/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#372",
        "relative": "#372",
        "full": "meltano/sdk#372"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108401388,
      "iid": 382,
      "project_id": 22672923,
      "title": "extract_jsonpath give an error if filters are used in records_jsonpath",
      "description": "## Summary\n`extract_jsonpath` give an error if filters are used in `records_jsonpath`\n\n\n## Steps to reproduce\nAdd filter `records_jsonpath` in `RESTStream`, e.g. \n`records_jsonpath = '$.somenode[?(@.attribute==\"Value\")]'`\n\n\n## What is the current bug behavior?\n`JsonPathLexerError: Error on line 1, col 15: Unexpected character: ?`\n\n\n## What is the expected correct behavior?\nNo errors\n\n## Possible fixes\nThe fix is described over here: https://github.com/h2non/jsonpath-ng/issues/8\n\nHere is the `jsonpath.py` that would fix it:\n```\n\"\"\"JSONPath helpers.\"\"\"\n\nfrom typing import Any, Generator, Union\n\nimport jsonpath_ng\nimport memoization\nfrom jsonpath_ng.ext import parse\n\ndef extract_jsonpath(\n    expression: str, input: Union[dict, list]\n) -> Generator[Any, None, None]:\n    \"\"\"Extract records from an input based on a JSONPath expression.\n\n    Args:\n        expression: JSONPath expression to match against the input.\n        input: JSON object or array to extract records from.\n\n    Yields:\n        Records matched with JSONPath expression.\n    \"\"\"\n    compiled_jsonpath = _compile_jsonpath(expression)\n\n    match: jsonpath_ng.DatumInContext\n    for match in compiled_jsonpath.find(input):\n        yield match.value\n\n\n@memoization.cached\ndef _compile_jsonpath(expression: str) -> jsonpath_ng.JSONPath:\n    \"\"\"Parse a JSONPath expression and cache the result.\n\n    Args:\n        expression: A string representing a JSONPath expression.\n\n    Returns:\n        A compiled JSONPath object.\n    \"\"\"\n    return parse(expression)\n\n```",
      "state": "closed",
      "created_at": "2022-05-11T21:59:09.087Z",
      "updated_at": "2022-05-16T17:19:45.726Z",
      "closed_at": "2022-05-16T17:18:13.914Z",
      "closed_by": {
        "id": 3503423,
        "username": "andrey.shalitkin",
        "public_email": "",
        "name": "Andrey Shalitkin",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4b2b677970962fd6f22071633e749ad19fd4d5e8314fa86a5880929fe28a5ce6?s=80&d=identicon",
        "web_url": "https://gitlab.com/andrey.shalitkin"
      },
      "labels": [
        "User Support",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 3503423,
        "username": "andrey.shalitkin",
        "public_email": "",
        "name": "Andrey Shalitkin",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4b2b677970962fd6f22071633e749ad19fd4d5e8314fa86a5880929fe28a5ce6?s=80&d=identicon",
        "web_url": "https://gitlab.com/andrey.shalitkin"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/382",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/382",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/382/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/382/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#382",
        "relative": "#382",
        "full": "meltano/sdk#382"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": {
        "id": 56415,
        "iid": 55,
        "sequence": 2,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.838Z",
        "updated_at": "2022-05-23T00:05:02.513Z",
        "start_date": "2022-05-16",
        "due_date": "2022-05-22",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56415"
      },
      "health_status": null
    },
    {
      "id": 94298381,
      "iid": 225,
      "project_id": 22672923,
      "title": "Better failure message when type is sent to Property initializer",
      "description": "Sometimes we can accept classes in the `Property` type helper's constructor, and sometimes an initialized object is needed.\n\nThe error messaging on this is not clear and can be improved.",
      "state": "closed",
      "created_at": "2021-09-25T16:32:33.938Z",
      "updated_at": "2022-05-16T18:39:39.222Z",
      "closed_at": "2022-05-16T18:39:39.201Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "flow::Doing",
        "kind::Bug",
        "urgency::low",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/225",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/225",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/225/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/225/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#225",
        "relative": "#225",
        "full": "meltano/sdk#225"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 106466118,
      "iid": 360,
      "project_id": 22672923,
      "title": "Raise more descriptive exceptions when wrapped JSON typing classes needs to be instantiated",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nSome JSON typing helper classes need to be instantiated so they can be converted to a JSON type dictionary. For example, ` th.Property(\"parameters_schema\", th.ArrayType).to_dict()` will produce an error while ` th.Property(\"parameters_schema\", th.ArrayType(th.StringType)).to_dict()` will not but the exception raised is not very descriptive of the underlying error.\n\nSlack: https://meltano.slack.com/archives/C01PKLU5D1R/p1649694338239079\n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\n```python\nimport singer_sdk.typing as th\n\nth.Property(\"parameters_schema\", th.ArrayType).to_dict()\n```\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\nAn error is raised downstream when the `type_dict` is tried to be iterated assuming it's a dictionary, looking for specific keys, so the root cause gets lost.\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nA descriptive exception is raised. Something like\n\n```python\n>>> import singer_sdk.typing as th\n>>> th.Property(\"parameters_schema\", th.ArrayType).to_dict()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/edgarramirez/Code/sdk/singer_sdk/typing.py\", line 361, in to_dict\n    type_dict = self.type_dict\n  File \"/Users/edgarramirez/Code/sdk/singer_sdk/typing.py\", line 347, in type_dict\n    raise ValueError(\nValueError: Type dict for <class 'singer_sdk.typing.ArrayType'> is not defined. Try instantiating it with a nested type such as ArrayType(StringType).\n>>>\n```\n\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\n```python\ntap_workato/tests/test_core.py:7: in <module>\n    from tap_workato.tap import TapWorkato\ntap_workato/tap.py:8: in <module>\n    from tap_workato.streams import (\ntap_workato/streams.py:82: in <module>\n    class RecipesStream(WorkatoStream):\ntap_workato/streams.py:116: in RecipesStream\n    th.ArrayType\n../../../Library/Caches/pypoetry/virtualenvs/tap-workato-T66zip44-py3.7/lib/python3.7/site-packages/singer_sdk/typing.py:94: in to_dict\n    return cast(dict, self.type_dict)\n../../../Library/Caches/pypoetry/virtualenvs/tap-workato-T66zip44-py3.7/lib/python3.7/site-packages/singer_sdk/typing.py:374: in type_dict\n    merged_props.update(w.to_dict())\n../../../Library/Caches/pypoetry/virtualenvs/tap-workato-T66zip44-py3.7/lib/python3.7/site-packages/singer_sdk/typing.py:338: in to_dict\n    type_dict = append_type(type_dict, \"null\")\n../../../Library/Caches/pypoetry/virtualenvs/tap-workato-T66zip44-py3.7/lib/python3.7/site-packages/singer_sdk/helpers/_typing.py:38: in append_type\n    if \"anyOf\" in result:\nE   TypeError: argument of type 'property' is not iterable\n```\n\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\n\nAdd a check in `Property.type_dict` to see if the wrapped object actually has a `type_dict` of dict type.",
      "state": "closed",
      "created_at": "2022-04-11T18:59:44.286Z",
      "updated_at": "2022-05-16T18:39:39.242Z",
      "closed_at": "2022-04-18T14:58:35.384Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351598,
        "iid": 208,
        "group_id": 2524164,
        "title": "April 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-11-29T21:38:06.797Z",
        "updated_at": "2022-05-02T14:53:27.097Z",
        "due_date": "2022-04-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/208"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/360",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/360",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/360/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/360/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#360",
        "relative": "#360",
        "full": "meltano/sdk#360"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108159119,
      "iid": 379,
      "project_id": 22672923,
      "title": "About shouldnt fail if tap isnt configured",
      "description": "This might be an implementation problem but I saw it twice today that running `--about` without a configured tap causes it to fail. I wonder if theres a way for the SDK to print without actually executing the taps discovery. Or try to execute the tap discovery catch it and return nothing not streams if its not configured.\n\nMy use case is to check the taps capabilities and settings without actually configuring it.\n\nhttps://github.com/MeltanoLabs/tap-google-analytics/issues/34\n\nhttps://github.com/Widen/tap-rest-api-msdk/issues/20",
      "state": "closed",
      "created_at": "2022-05-06T17:22:57.606Z",
      "updated_at": "2022-05-17T00:46:29.814Z",
      "closed_at": "2022-05-17T00:46:29.652Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/379",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/379",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/379/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/379/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#379",
        "relative": "#379",
        "full": "meltano/sdk#379"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 98339165,
      "iid": 285,
      "project_id": 22672923,
      "title": "Catalog parsing for nested objects not working",
      "description": "Not sure the easiest way to setup a test case here\n\ntap is here https://github.com/AutoIDM/tap-googleads\n\n\n1. `meltano select --all tap-googleads` \n2. `meltano select --list tap-googleads`, response\n```\n        [selected ] geo_target_constant.geoTargetConstant\n        [selected ] geo_target_constant.geoTargetConstant.canonicalName\n        [selected ] geo_target_constant.geoTargetConstant.countryCode\n        [selected ] geo_target_constant.geoTargetConstant.id\n        [selected ] geo_target_constant.geoTargetConstant.name\n        [selected ] geo_target_constant.geoTargetConstant.resourceName\n        [selected ] geo_target_constant.geoTargetConstant.status\n        [selected ] geo_target_constant.geoTargetConstant.targetType\n```\n3. `meltano select --all --rm tap-googleads`\n4. `meltano select geo_target_constant.geoTargetConstant.name` \n5. Output will not have any records with this subObject listed instead the output looks like\n\n```{\"type\": \"RECORD\", \"stream\": \"geo_target_constant\", \"record\": {}, \"time_extracted\": \"2021-12-02T14:08:28.138997Z\"}```",
      "state": "closed",
      "created_at": "2021-12-02T14:16:39.606Z",
      "updated_at": "2022-05-18T16:01:06.249Z",
      "closed_at": "2022-01-12T01:18:30.936Z",
      "closed_by": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "labels": [
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2136620,
        "iid": 176,
        "group_id": 2524164,
        "title": "Staging",
        "description": "",
        "state": "active",
        "created_at": "2021-07-07T19:00:49.676Z",
        "updated_at": "2021-07-07T19:00:49.676Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/176"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/285",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/285",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/285/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/285/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#285",
        "relative": "#285",
        "full": "meltano/sdk#285"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108648327,
      "iid": 384,
      "project_id": 22672923,
      "title": "The `--config=ENV` option should consider environment variables from a dotenv (.env) file if present.",
      "description": "> When the `--config=ENV` option is provided, config values will be considered from env variables in the terminal context and also in a `.env` file, if present within the current working directory.\n\ncc @aaronsteers",
      "state": "closed",
      "created_at": "2022-05-17T02:03:06.031Z",
      "updated_at": "2022-05-19T19:14:59.287Z",
      "closed_at": "2022-05-19T19:14:59.238Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/384",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/384",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/384/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/384/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#384",
        "relative": "#384",
        "full": "meltano/sdk#384"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": {
        "id": 56415,
        "iid": 55,
        "sequence": 2,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.838Z",
        "updated_at": "2022-05-23T00:05:02.513Z",
        "start_date": "2022-05-16",
        "due_date": "2022-05-22",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56415"
      },
      "health_status": null
    },
    {
      "id": 105930814,
      "iid": 358,
      "project_id": 22672923,
      "title": "In cookiecutter templates, get setting values automatically from `.env`",
      "description": "The common convention and best practice today is to use `.env` files to store sensitive and nonsensitive env vars. The `python-dotenv` package makes parsing `.env` context trivial and we should consider adding this to the standard cookiecutter templates.",
      "state": "closed",
      "created_at": "2022-04-02T07:54:29.173Z",
      "updated_at": "2022-05-19T19:14:59.583Z",
      "closed_at": "2022-05-19T19:14:59.561Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 0,
      "merge_requests_count": 2,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/358",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/358",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/358/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/358/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#358",
        "relative": "#358",
        "full": "meltano/sdk#358"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108701752,
      "iid": 385,
      "project_id": 22672923,
      "title": "SQL Targets: Inserts fail if activate_version message has added _sdc columns",
      "description": "## Summary\nThe INSERT statement generated by SQLSink.bulk_insert_records does not specify target column names. This is fine when the incoming records contain all the columns in the table but fails when other columns exist in the table - for example the `_sdc*` columns created by the processing of an activate_version record. While I haven't tested it explicitly this would also be a problem if the stream's schema changed over time, e.g. a column was removed from the source table.\n\n\n## Steps to reproduce\nRun the unit test added for !287 ;) \n\n\n## What is the current bug behavior?\nThe INSERT fails because values are not specified for all columns.\n\n\n## What is the expected correct behavior?\nThe INSERT should succeed and populate the columns found in the incoming stream.\n\n\n## Possible fixes\nMR incoming",
      "state": "closed",
      "created_at": "2022-05-17T19:44:28.771Z",
      "updated_at": "2022-05-19T20:27:59.678Z",
      "closed_at": "2022-05-19T20:27:59.580Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 11028865,
        "username": "tbriggs2",
        "public_email": null,
        "name": "Thomas Briggs",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0333fed181cc72b244e53f28299a2fbd4c00d3e16ae323c6771a12d3d442917a?s=80&d=identicon",
        "web_url": "https://gitlab.com/tbriggs2"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/385",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/385",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/385/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/385/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#385",
        "relative": "#385",
        "full": "meltano/sdk#385"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108095754,
      "iid": 376,
      "project_id": 22672923,
      "title": "SQL Targets: Processing of activate_version message assumes particular parameter markers",
      "description": "## Summary\nSQLSink.activate_version uses question marks as parameter markers in the query to update the sdc_deleted_at column. That's ok for some DBs but not all. I'm working with PyMySQL, for example, where that does not work.\n\nAlso, the code does not ensure the existence of the sdc_table_version field. That has to be resolved before the parameter markers become an issue.\n\n## Steps to reproduce\nRun a pipeline where the tap produces an activate_version record, the target table already exists, and the DB driver doesn't use questions marks for parameter markers (e.g. MySQL).\n\n\n## What is the current bug behavior?\nThe UPDATE to set sdc_deleted_at fails.\n\n\n## What is the expected correct behavior?\nThe UPDATE to set sdc_deleted_at should succeed.\n\n\n## Possible fixes\nSQLAlchemy's \"text\" method appears to be the better approach here. That solves the parameter marker problem and eliminates the use of the deprecated form of execute() the code currently uses.\n\nMR incoming.",
      "state": "closed",
      "created_at": "2022-05-05T15:50:04.328Z",
      "updated_at": "2022-05-19T20:51:13.711Z",
      "closed_at": "2022-05-19T20:51:13.677Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 11028865,
        "username": "tbriggs2",
        "public_email": null,
        "name": "Thomas Briggs",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0333fed181cc72b244e53f28299a2fbd4c00d3e16ae323c6771a12d3d442917a?s=80&d=identicon",
        "web_url": "https://gitlab.com/tbriggs2"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/376",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/376",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/376/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/376/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#376",
        "relative": "#376",
        "full": "meltano/sdk#376"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108479267,
      "iid": 383,
      "project_id": 22672923,
      "title": "Release v0.5.0",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [x] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [x] Post-release announcement steps:\n    1. [x] Post announcement to Meltano slack: `#announcements`\n    2. [x] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [x] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [x] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-05-12T23:00:28.381Z",
      "updated_at": "2022-05-20T01:24:50.994Z",
      "closed_at": "2022-05-19T22:04:49.524Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Release"
      ],
      "milestone": null,
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 1,
      "merge_requests_count": 2,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/383",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 22
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/383",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/383/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/383/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#383",
        "relative": "#383",
        "full": "meltano/sdk#383"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": {
        "id": 56415,
        "iid": 55,
        "sequence": 2,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.838Z",
        "updated_at": "2022-05-23T00:05:02.513Z",
        "start_date": "2022-05-16",
        "due_date": "2022-05-22",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56415"
      },
      "health_status": null
    },
    {
      "id": 108888027,
      "iid": 392,
      "project_id": 22672923,
      "title": "Confusing/unhelpful message: 'Operator '__else__=None' was not found. Unmapped streams will be included in output.'",
      "description": "This message essentially means that stream maps are not being used or there's no 'ignore the rest' instruction. It should not be in the primary log output and can safely be removed, or at least sent to the 'debug' stream instead of 'info'.\n\nAs raised in slack https://meltano.slack.com/archives/C01PKLU5D1R/p1653068703577009:\n\n`2022-05-20T17:43:44.630129Z [info     ] time=2022-05-20 10:43:44 name=root level=INFO message=Operator '__else__=None' was not found. Unmapped streams will be included in output. cmd_type=extractor job_id=testbq name=tap-quickbase-json run_id=8e5d3feb-683c-4a6c-a146-20520fe083db stdio=stderr`",
      "state": "closed",
      "created_at": "2022-05-20T17:48:16.972Z",
      "updated_at": "2022-05-20T18:14:48.887Z",
      "closed_at": "2022-05-20T18:14:48.871Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/392",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/392",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/392/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/392/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#392",
        "relative": "#392",
        "full": "meltano/sdk#392"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108841099,
      "iid": 391,
      "project_id": 22672923,
      "title": "Document JSON Schema helpers",
      "description": "The SDK docs should have a page dedicated to the available JSON schema classes from `singer_sdk.typing`.",
      "state": "closed",
      "created_at": "2022-05-20T00:51:39.222Z",
      "updated_at": "2022-05-25T00:22:00.558Z",
      "closed_at": "2022-05-25T00:22:00.507Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "Documentation",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2136620,
        "iid": 176,
        "group_id": 2524164,
        "title": "Staging",
        "description": "",
        "state": "active",
        "created_at": "2021-07-07T19:00:49.676Z",
        "updated_at": "2021-07-07T19:00:49.676Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/176"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/391",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 1,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/391",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/391/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/391/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#391",
        "relative": "#391",
        "full": "meltano/sdk#391"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    }
  ]
}
