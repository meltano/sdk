{
  "cookies": {
    "_cfuvid": "KxQCHn0Kt9gmfYjq.B.3IhMn0HBzY.PJMjH5B5NlhQE-1747940874855-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:07:54.779032+00:00",
  "elapsed": 0.560876,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e996119975cc2-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:07:54 GMT",
    "ETag": "W/\"7cc97e548c8d201dfba8b60d4e6af116\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/121/issues?epic_iid=121&id=2524164&page=1&per_page=20>; rel=\"prev\", <https://gitlab.com/api/v4/groups/2524164/epics/121/issues?epic_iid=121&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/121/issues?epic_iid=121&id=2524164&page=2&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=KxQCHn0Kt9gmfYjq.B.3IhMn0HBzY.PJMjH5B5NlhQE-1747940874855-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-31-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-b",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"f028cd4730de04ee8702147660c5615f\",\"version\":\"1\"}",
    "x-next-page": "",
    "x-page": "2",
    "x-per-page": "20",
    "x-prev-page": "1",
    "x-request-id": "f028cd4730de04ee8702147660c5615f",
    "x-runtime": "0.354951",
    "x-total": "36",
    "x-total-pages": "2"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/121/issues?page=2"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/121/issues?page=2",
  "_decoded_content": [
    {
      "id": 95442336,
      "iid": 238,
      "project_id": 22672923,
      "title": "Use and recommend new pip and poetry versions with support for editable installs",
      "description": "During development, Meltano plugin's `pip_url` lets users pass arguments for an editable installation (`-e path/to/package`). This is useful for iterating on the tap/target while testing with Meltano.\n\nAt the moment, plugins built with the SDK have to [hack their way around to accomplish the same thing](https://gitlab.com/meltano/sdk/-/blob/main/cookiecutter/tap-template/%7B%7Bcookiecutter.tap_id%7D%7D/%7B%7Bcookiecutter.tap_id%7D%7D.sh) because pip was not able to install packages that use `pyproject.toml` instead of `setup.py`.\n\nHowever, recently released [`pip` 21.3](https://pip.pypa.io/en/stable/news/#v21-3) has support for [PEP 660](https://www.python.org/dev/peps/pep-0660/). The only blocker is that the [PEP 517](https://www.python.org/dev/peps/pep-0517/) build backend needs to implement the `build_editable` hook.\n\nThe `poetry-core` build backend is PEP 517 compliant and has recently pushed the hook to `master` (see PR: https://github.com/python-poetry/poetry-core/pull/182). Once this feature is released and indirectly included in the main `poetry` package, we'll be able to guide users into upgrading their `pip` and `poetry` version so they can install their SDK-based plugins in editable mode without hacks.\n\ncc @aaronsteers",
      "state": "closed",
      "created_at": "2021-10-14T16:43:36.572Z",
      "updated_at": "2022-04-27T23:46:24.453Z",
      "closed_at": "2022-01-11T21:57:27.713Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "flow::Blocked",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 10,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/238",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/238",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/238/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/238/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#238",
        "relative": "#238",
        "full": "meltano/sdk#238"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 884009,
      "relative_position": -4104
    },
    {
      "id": 95309797,
      "iid": 237,
      "project_id": 22672923,
      "title": "Cache requests with `requests-cache` to avoid hitting rate limits in dev and CI",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nFor HTTP (RESTful or otherwise) taps, it would be good to allow users to cache responses. A nice option to implement this behavior could be https://github.com/reclosedev/requests-cache.\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nThere's at least three use cases where users and developers of Singer taps would like to save a cache of requests made to the source API.\n\n### Tap Development\n\nDuring initial development of an HTTP tap, it would be good to have responses cached when testing and iterating on state, pagination and child streams. This would speed up development just by making the dev not wait for responses every time, and also save on API request limits.\n\n### CI\n\nArguably, CI pipelines should be lean and not overwhelm external services given and rate limits cause noisy CI failures. A tap repo would include a filesystem requests cache (https://requests-cache.readthedocs.io/en/stable/modules/requests_cache.backends.filesystem.html) and PRs that updates or adds requests parameters, should include the corresponding cache file update.\n\n### Integration with Meltano\n\nSimilar to tap development, users might be interested in not overwhelming external services or consuming request quotas during initial integration with Meltano and a target.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\n- Tap users and developers are able to set up request caching. We could use the default SQLite storage, let them choose, or be opinionated on YAML, etc.\n\n- A CLI option or environment variable can be used to activate request caching. Usage of said cache can look for the same or different flag.\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nI can imagine a scenario where users are unknowingly caching requests in a production setting. If we can't provide safeguards against that, we shouldn't build this feature.",
      "state": "closed",
      "created_at": "2021-10-12T19:27:52.560Z",
      "updated_at": "2022-05-29T23:56:43.393Z",
      "closed_at": "2022-05-29T23:56:43.378Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/237",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/237",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/237/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/237/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#237",
        "relative": "#237",
        "full": "meltano/sdk#237"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 877051,
      "relative_position": -3591
    },
    {
      "id": 95118846,
      "iid": 236,
      "project_id": 22672923,
      "title": "Allow users to select the license they want",
      "description": "Per @edgarrmondragon the default license is Apache 2.0. https://gitlab.com/meltano/sdk/-/blob/main/cookiecutter/tap-template/%7B%7Bcookiecutter.tap_id%7D%7D/pyproject.toml#L10\n\nIt'd be nice to let users select from a handful of licenses. Even nicer if there's an API we can hit to just get all available ones and we could then suggest a few.",
      "state": "closed",
      "created_at": "2021-10-08T15:30:35.930Z",
      "updated_at": "2022-05-29T23:56:35.671Z",
      "closed_at": "2022-05-29T23:56:35.638Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/236",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/236",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/236/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/236/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#236",
        "relative": "#236",
        "full": "meltano/sdk#236"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 871006,
      "relative_position": -3078
    },
    {
      "id": 94554388,
      "iid": 228,
      "project_id": 22672923,
      "title": "Tap Validate Option",
      "description": "## Summary\nValidate tap data schema, particularly useful during development as right now you have to add a target that does this validation ie `meltano elt tap-abc target-jsonl` jsonl will validate for you. Maybe it should stay like this? \n\n\n## Proposed benefits\n1. One less step while doing development, the issue I'm seeing is running production data through a tap I'm writing leads to a bunch of Data in a format that wasn't expected (String is sometimes an Int, or something it's an array of Strings, etc etc).\n1. Theoretically you could suggest a new schema for the stream that's causing issues. \n\n## Proposal details\n~~A --validate option~~\n\nStandard validate_json config \n\n\n## Best reasons not to build\n- You could offload this to a target\n- People may forget to turn this off in production which would have performance implications\n\n## Use Cases\n- https://meltano.slack.com/archives/C01TCRBBJD7/p1635203695035500\n- https://github.com/AutoIDM/tap-clickup/pull/46\n- https://meltano.slack.com/archives/C01PKLU5D1R/p1632880108194400",
      "state": "closed",
      "created_at": "2021-09-29T15:04:43.357Z",
      "updated_at": "2022-05-29T23:55:35.995Z",
      "closed_at": "2022-05-29T23:55:35.947Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/228",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/228",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/228/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/228/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#228",
        "relative": "#228",
        "full": "meltano/sdk#228"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 853295,
      "relative_position": -2565
    },
    {
      "id": 93421480,
      "iid": 216,
      "project_id": 22672923,
      "title": "Markdown output for `--about`",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nThe SDK for taps and targets currently can print package details in plain text and JSON format. The output includes package name and version, SDK version, capabilities and settings.\n\nIt'd be good, especially for package maintainers, to have a way to auto-generate package information in Markdown format that they can add to their READMEs so they're always up-to-date with the required settings, etc.\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\n- Automatic human-readable documentation that can be used by SDK-based package maintainers now, or Hub in the future.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\nThe current output format look like this\n\n```console\n$ my-tap --about\nName: my-tap\nDescription: A Singer Tap for my amazing source.\nVersion: [could not be detected]\nSdk_Version: 0.3.6\nCapabilities: ['sync', 'catalog', 'state', 'discover']\nSettings: {'type': 'object', 'properties': {'key': {'type': 'string', 'description': 'A secret key'}}}\n```\n\n```console\n$ my-tap --about --format=json\n{\n  \"name\": \"my-tap\",\n  \"description\": \"A Singer Tap for my amazing source.\",\n  \"version\": \"[could not be detected]\",\n  \"sdk_version\": \"0.3.6\",\n  \"capabilities\": [\n    \"sync\",\n    \"catalog\",\n    \"state\",\n    \"discover\"\n  ],\n  \"settings\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"key\": {\n        \"type\": \"string\",\n        \"description\": \"A secret key\"\n      }\n    },\n    \"required\": [\n      \"key\"\n    ]\n  }\n}\n```\n\nA markdown output may look like this\n\n```console\n$ my-tap --about --format=markdown\n# my-tap\n\nA Singer Tap for my amazing source.\n\n## Capabilities\n\n* Sync\n* Catalog\n* State\n* Discover\n\n## Settings\n\n| Setting | Required | Default | Description  |\n|:-------:|:--------:|:-------:|:------------:|\n| `key`   | True     |         | A secret key |\n```\n\nwhich would render into\n\n> # my-tap\n>\n> A Singer Tap for my amazing source.\n>\n> ## Capabilities\n>\n> * Sync\n> * Catalog\n> * State\n> * Discover\n>\n> ## Settings\n> \n> | Setting | Required | Default | Description  |\n> |:-------:|:--------:|:-------:|:------------:|\n> | `key`   | True     |         | A secret key |\n\n--------\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)",
      "state": "closed",
      "created_at": "2021-09-09T20:36:58.561Z",
      "updated_at": "2021-10-21T20:58:00.128Z",
      "closed_at": "2021-10-07T05:09:22.363Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "Community-Contributed MR",
        "Marketing::Blog Feature",
        "flow::Doing",
        "kind::Feature",
        "urgency::default",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2241593,
        "iid": 189,
        "group_id": 2524164,
        "title": "Fri: Oct 8, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-09-20T18:57:51.979Z",
        "updated_at": "2021-10-18T13:43:14.653Z",
        "due_date": "2021-10-08",
        "start_date": "2021-10-02",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/189"
      },
      "assignees": [
        {
          "id": 9740270,
          "username": "muellernick1994",
          "public_email": "",
          "name": "Nick M\u00fcller",
          "state": "active",
          "locked": false,
          "avatar_url": "https://secure.gravatar.com/avatar/8cee9d933f0ea46d8fa33d9c1456846424515bf34064c99ca19255def19cf8c8?s=80&d=identicon",
          "web_url": "https://gitlab.com/muellernick1994"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 9740270,
        "username": "muellernick1994",
        "public_email": "",
        "name": "Nick M\u00fcller",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/8cee9d933f0ea46d8fa33d9c1456846424515bf34064c99ca19255def19cf8c8?s=80&d=identicon",
        "web_url": "https://gitlab.com/muellernick1994"
      },
      "user_notes_count": 13,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/216",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/216",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/216/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/216/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#216",
        "relative": "#216",
        "full": "meltano/sdk#216"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 825392,
      "relative_position": -2052
    },
    {
      "id": 93276692,
      "iid": 214,
      "project_id": 22672923,
      "title": "Include expected environment variables in `--about`",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nInclude expected environment variables as part of the output of the `--about` CLI option.\n\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nPlugin developers developers and users can see the names of the environment variables their tap/target will look for when using `--config=ENV`.\n\nThis could later be used to by Meltano to set alternative names (aliases) for the plugin environment variables.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\nInclude the environment variable names of settings in the JSON Schema printed out by `--about`. Something like\n\n```console\n{\n  \"name\": \"my-tap\",\n  \"version\": \"0.0.1\",\n  \"sdk_version\": \"0.3.6\",\n  \"capabilities\": [\n    \"sync\",\n    \"catalog\",\n    \"state\",\n    \"discover\"\n  ],\n  \"settings\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"password\": {\n        \"type\": [\n          \"string\"\n        ],\n        \"environmentVariables\": [\n          \"MY_TAP_PASSWORD\"\n        ]\n      },\n      \"base_url\": {\n        \"type\": [\n          \"string\",\n          \"null\"\n        ],\n        \"default\": \"https://someapi.com\",\n        \"environmentVariables\": [\n          \"MY_TAP_BASE_URL\"\n        ]\n      }\n    }\n    \"required\": [\n      \"password\"\n    ]\n  }\n}\n```\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nSuch a field is not part of the JSON Schema spec.",
      "state": "closed",
      "created_at": "2021-09-07T16:47:46.644Z",
      "updated_at": "2022-05-29T23:53:47.430Z",
      "closed_at": "2022-05-29T23:53:47.410Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/214",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/214",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/214/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/214/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#214",
        "relative": "#214",
        "full": "meltano/sdk#214"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 825370,
      "relative_position": -1539
    },
    {
      "id": 93099956,
      "iid": 211,
      "project_id": 22672923,
      "title": "Support for other discoverable metadata",
      "description": "Give tap developers the ability to declare fields unsupported and fields selected by default, according to [the singer spec around metadata](https://github.com/singer-io/getting-started/blob/master/docs/DISCOVERY_MODE.md#metadata).\n\nRelates to #91\n\nThe documentation should also be updated:\n\n- [ ] `docs/implementation/catalog_metatadata.md`: https://sdk.meltano.com/en/latest/implementation/catalog_metadata.html\n\nLimited to:\n\n- `\"selected-by-default\": ...`\n- `\"inclusion\": \"unsupported\"`",
      "state": "closed",
      "created_at": "2021-09-03T20:03:45.884Z",
      "updated_at": "2022-05-29T23:53:24.830Z",
      "closed_at": "2022-05-29T23:53:24.815Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Office Hours::To Discuss",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 13,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/211",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 1,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/211",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/211/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/211/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#211",
        "relative": "#211",
        "full": "meltano/sdk#211"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 806095,
      "relative_position": -9234
    },
    {
      "id": 93088625,
      "iid": 209,
      "project_id": 22672923,
      "title": "Consider promoting the Singer classes added in !146 to a public module",
      "description": "We should consider moving the Singer helpers for catalog and metadata in `singer_sdk/helpers/_singer.py`, added in !146, to a public module (stable and officially supported), and gather feedback from the broader Singer community.",
      "state": "closed",
      "created_at": "2021-09-03T16:32:21.481Z",
      "updated_at": "2022-05-29T23:53:09.491Z",
      "closed_at": "2022-05-29T23:53:09.470Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/209",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/209",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/209/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/209/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#209",
        "relative": "#209",
        "full": "meltano/sdk#209"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 806091,
      "relative_position": -1026
    },
    {
      "id": 92461961,
      "iid": 198,
      "project_id": 22672923,
      "title": "Improve unit test capabilities for complex scenarios",
      "description": "Followed from https://gitlab.com/meltano/sdk/-/merge_requests/137#note_658270629",
      "state": "closed",
      "created_at": "2021-08-23T22:10:35.628Z",
      "updated_at": "2021-10-26T21:00:57.424Z",
      "closed_at": "2021-10-26T21:00:57.372Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "flow::Doing",
        "kind::Bug",
        "urgency::default",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2252673,
        "iid": 193,
        "group_id": 2524164,
        "title": "Internal WIP",
        "description": "",
        "state": "active",
        "created_at": "2021-09-27T19:02:31.281Z",
        "updated_at": "2021-09-28T18:29:26.781Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/193"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/198",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/198",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/198/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/198/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#198",
        "relative": "#198",
        "full": "meltano/sdk#198"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 891697,
      "relative_position": -5130
    },
    {
      "id": 90137925,
      "iid": 169,
      "project_id": 22672923,
      "title": "Improve \"Porting\" guidance for tap developers",
      "description": "The porting guide is not very good. Specifically, it does not describe the exact contract that the SDK expects, which methods or overrides must be overriden, how to migrate State-management code, etc.\n\nFor reference, here is the current doc: https://sdk.meltano.com/en/latest/porting.html\n\nWe should expand the available docs and collect feedback from one or more developers who have been through the process.",
      "state": "closed",
      "created_at": "2021-07-12T16:17:15.430Z",
      "updated_at": "2022-05-29T23:46:10.256Z",
      "closed_at": "2022-05-29T23:46:10.212Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/169",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/169",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/169/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/169/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#169",
        "relative": "#169",
        "full": "meltano/sdk#169"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 971462,
      "relative_position": -10773
    },
    {
      "id": 87879017,
      "iid": 136,
      "project_id": 22672923,
      "title": "Enable generation of the YAML file required for the Hub",
      "description": "It should be as simple as possible for people using the SDK to build a tap or target to connect it to the Hub. The metadata for a given connector should be stored with the connector itself where possible, including the logo. We can definitely iterate on this though!",
      "state": "closed",
      "created_at": "2021-05-28T14:43:05.629Z",
      "updated_at": "2022-05-29T23:41:18.877Z",
      "closed_at": "2022-05-29T23:41:18.860Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "flow::Triage",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/136",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/136",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/136/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/136/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#136",
        "relative": "#136",
        "full": "meltano/sdk#136"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 630599,
      "relative_position": -9747
    },
    {
      "id": 87767167,
      "iid": 133,
      "project_id": 22672923,
      "title": "Record flattening for targets",
      "description": "For targets which land data in a columnar format, 'data flattening' has become a common problem for these types of targets. We can implement a `Sink.flatten_record(record, max_level)` and `Sink.flatten_schema(schema, max_level)` method which would take a nested structure and output a columnar one.\n\nFor instance, `{ \"col_a\": { \"subcol_1\": 1, \"subcol_2\": 2 }` would become `{ \"col_a__subcol_1\": 1, \"col_a__subcol_2\": 2 }`.\n\n1. Tap developers should be able to leverage flattening behavior automatically unless they want to disable it.\n    - For example, a `target-jsonl` destination would have this disabled, whereas `target-snowflake` might have it on by default and configurable by the user. \n    - Unclear if this should be opt-in or opt-out on the developer's side.\n2. Assuming flattening is allowed by the target, the user should be able to disable or customize flattening with a config option like `max_flattening_level`, where `max_flattening_level = 0` disables the flattening behavior altogether.",
      "state": "closed",
      "created_at": "2021-05-26T17:32:02.676Z",
      "updated_at": "2022-02-09T05:57:54.739Z",
      "closed_at": "2022-02-09T05:57:54.726Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "Load",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/133",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/133",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/133/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/133/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#133",
        "relative": "#133",
        "full": "meltano/sdk#133"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 626374,
      "relative_position": -13851
    },
    {
      "id": 86618908,
      "iid": 124,
      "project_id": 22672923,
      "title": "Provide access to last-seen record in `get_next_page_token()`",
      "description": "As @rabidaudio points out [here](https://gitlab.com/meltano/singer-sdk/-/issues/115#note_563148595):\n\n> Another thing I was thinking was it might be convenient for `get_next_page_token` to receive the latest row, as in this case and other taps I've written the next query starts from the timestamp of the last returned value, as opposed to the number of records or fixed amounts of paging.\n\nAnd (after some hesitancy :sweat_smile:) I replied:\n\n> ... I think your intuition is good here. I have [another tap implementation](https://github.com/singer-io/tap-github/issues/111#issue-866772661-permalink) I was working on recently we have a `since` pagination method that takes the integer `id` of the last record... In both cases, we do need a value from the `previous_record` in order to orchestrate the pagination loop.\n\nI've thought about this more, and I think the approach of passing the last-seen record's data is preferable to requiring the developer to stash the latest pagination data on each record's parsing, as @rabidaudio's [implementation](https://github.com/fixdauto/tap-newrelic/blob/main/tap_newrelic/streams.py#L102) needed to do.\n\nWe could add `latest_record` or `last_seen_record` into `get_next_page_token`, with an implementation like:\n\n```\n    def get_next_page_token(self, response, previous_token, last_record: Optional[dict]):\n        if not last_record:\n            return None\n\n        return { \"since\": last_record[\"id\"] }\n```\n\nWith this implementation, we can optionally also auto-detect if zero records are returned within a page that there is no subsequent page. Otherwise, the developer needs to provide logic for when to stop looping.\n\nAlso, we probably want `last_record` to be `None` if there have been no records emitted since the last pagination.\n\n------------------------\n\n## Updates (Jun 7, 2021):\n\n- I'm inclined to include this in an upcoming release. It will be a breaking change so it should be ideally grouped with other major and/or breaking changes.\n- My preference would be for `last_seen_record` to be `None` in the case of a fully empty page (meaning no records at all returned in the page). However, this makes naming the argument more difficult, since that behavior would not be obvious from the existing naming ideas we've logged.",
      "state": "closed",
      "created_at": "2021-05-06T22:08:36.909Z",
      "updated_at": "2022-05-29T23:39:43.492Z",
      "closed_at": "2022-05-29T23:39:43.468Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Extract"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/124",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/124",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/124/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/124/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#124",
        "relative": "#124",
        "full": "meltano/sdk#124"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 593307,
      "relative_position": -17442
    },
    {
      "id": 82051961,
      "iid": 77,
      "project_id": 22672923,
      "title": "Handling secrets in config settings",
      "description": "The following discussion from !39 should be addressed:\n\n- [ ] @DouweM started a [discussion](https://gitlab.com/meltano/singer-sdk/-/merge_requests/39#note_541523129): \n\n    > If we're not doing anything with this yet, can we leave it out for the moment and move it to a WIP merge request?\n    > \n    > Once we officially introduce the concept of secrets, we'll also want to let config settings explicitly be marked as such.",
      "state": "closed",
      "created_at": "2021-03-31T20:28:20.090Z",
      "updated_at": "2022-05-29T23:33:45.656Z",
      "closed_at": "2022-05-29T23:33:45.632Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Extract",
        "flow::Triage",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/77",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 1,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/77",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/77/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/77/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#77",
        "relative": "#77",
        "full": "meltano/sdk#77"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 521362,
      "relative_position": -10260
    },
    {
      "id": 82044876,
      "iid": 74,
      "project_id": 22672923,
      "title": "SDK support for Database-type Streams",
      "description": "This feature would add formal support for Database type streams.\n\n## Background\n\n- We removed database-type streams from the initial 0.1.0 on the basis of being a lower priority versus API-type streams.\n- Unlike SaaS taps, for DB-type taps, we can assume:\n  1. Catalogs are less stable. We should expect cached catalogs will require explicit refreshing.\n  1. Catalog detection should be decoupled from Stream definition. We expect the catalog to be defined by querying the `information_schema` or similar - and it should be much more performant to query this at the DB-level or schema-level, versus individually for each stream/table.\n  1. Fewer `Stream` classes are needed. One Stream class per source or one per extraction type is probably sufficient.\n  1. Catalogs are more authoritative. If a catalog declares a table and column, the Tap should assume it exists as defined in the catalog.\n     1. Types need to be overridable. Moreso than other stream types, we know database-type sources have a history of type incompatibilities. When provided, we should take care that we apply custom type declarations as given in the input catalog.\n\n## Implementation Proposal\n\n### Decoupling Streams from Catalog Discovery\n\nInstead of streams objects reporting back their own schema, a `SQLCatalogDiscovery` class (or similar) will create a full catalog. Then, instances of the appropriate `Stream` class can be instantiated from the discovered catalog. This also means that the if an input catalog is provided, we can skip the discovery process entirely.\n\nDocs links:\n\n- https://docs.sqlalchemy.org/en/14/core/reflection.html#reflecting-all-tables-at-once\n\n### Entry-Level capabilities with `SQLAlchemy`\n\nThe SQLAlchemy tool (powered by `DB-API 2.0`) can provide out-of-box catalog discovery capabilities as well as entry-level select capabilities. This means that given a valid SQLAlchemy driver and connection URI, we can provide generic discovery and `get_records()` capabilities.\n\n* NOTE: We should probably develop a generic `tap-sqlalchemy` or `tap-dbapi` which purely leverage SQL Alchemy generic constructs. This would never be as performant as a custom-built tap but it would be good in general for interop purposes.\n\n### Developers Provide Performance improvements\n\nThere is probably little case for overriding discovery unless SQLAlchemy does not support Inspection for the database type in question. Since catalog discovery is generally not a performance bottleneck, and since it is likely to be cached anyway, a generic implementation should be \"good enough\" for 95% of DB types.\n\n### Provide developers with bulk-based performance boosts\n\nThe SQLAlchemy library will be good at generic selects but will not be able to take advantage of batching capabilities. I suggest we tap into the discussions around #9 (batch message type) to allow developers to define their batch capabilities.",
      "state": "closed",
      "created_at": "2021-03-31T18:16:33.915Z",
      "updated_at": "2022-01-20T06:39:27.520Z",
      "closed_at": "2022-01-20T06:39:27.457Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Extract",
        "Office Hours::Discussed",
        "flow::To Do",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363644,
        "iid": 215,
        "group_id": 2524164,
        "title": "Fri: Jan 21, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:19:07.836Z",
        "updated_at": "2022-01-24T17:49:13.611Z",
        "due_date": "2022-01-21",
        "start_date": "2022-01-15",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/215"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 1,
      "upvotes": 3,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/74",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/74",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/74/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/74/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#74",
        "relative": "#74",
        "full": "meltano/sdk#74"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 521138,
      "relative_position": 0
    },
    {
      "id": 76841334,
      "iid": 18,
      "project_id": 22672923,
      "title": "Add support for ACTIVATE_VERSION message types",
      "description": "From the [singer-python library](https://github.com/singer-io/singer-python/blob/master/singer/messages.py#L137):\n\n>     ACTIVATE_VERSION message (EXPERIMENTAL).\n>\n>     The ACTIVATE_VERSION messages has these fields:\n>       * stream - The name of the stream.\n>       * version - The version number to activate.\n>\n>     This is a signal to the Target that it should delete all previously\n>     seen data and replace it with all the RECORDs it has seen where the\n>     record's version matches this version number.\n>\n>     Note that this feature is experimental. Most Taps and Targets should\n>     not need to use the \"version\" field of \"RECORD\" messages or the\n>     \"ACTIVATE_VERSION\" message at all.\n>\n>     msg = singer.ActivateVersionMessage(\n>         stream='users',\n>         version=2)\n\n## Implementing for taps:\n\nI think we can safely implement for taps and send the message by default. For cases where targets cannot tolerate the unknown message types, we should support a `disable_activate_version_messages=True` option.\n\n### When `FULL_TABLE` replication is selected in the tap:\n\n1. Initialize a version number (likely an epoch-based integer): https://github.com/transferwise/pipelinewise-tap-snowflake/blob/aa89f2e4235999dbeafc7406a7f8b382542d8d5b/tap_snowflake/sync_strategies/common.py#L33\n1. Include `version` as property within emitted `RECORD` messages. https://github.com/transferwise/pipelinewise-tap-snowflake/blob/aa89f2e4235999dbeafc7406a7f8b382542d8d5b/tap_snowflake/sync_strategies/common.py#L200\n1. Emit `ACTIVATE_VERSION` at the beginning of the first `FULL_TABLE` sync operation: https://github.com/transferwise/pipelinewise-tap-snowflake/blob/aa89f2e4235999dbeafc7406a7f8b382542d8d5b/tap_snowflake/sync_strategies/full_table.py#L87-L95\n1. Emit `ACTIVATE_VERSION` after a successful `FULL_TABLE` sync: https://github.com/transferwise/pipelinewise-tap-snowflake/blob/aa89f2e4235999dbeafc7406a7f8b382542d8d5b/tap_snowflake/sync_strategies/full_table.py#L114",
      "state": "closed",
      "created_at": "2021-01-06T23:04:29.745Z",
      "updated_at": "2022-05-29T23:25:30.179Z",
      "closed_at": "2022-05-29T23:25:30.164Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Office Hours::Discussed",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 1,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/18",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/18",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/18/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/18/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#18",
        "relative": "#18",
        "full": "meltano/sdk#18"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 803435,
      "relative_position": -513
    }
  ]
}
