{
  "cookies": {
    "_cfuvid": "4XdE7iJ4V2IUjLSJ.fd5kXnOJHT.S95QFMxdjStmkyM-1747940896562-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:08:16.486921+00:00",
  "elapsed": 0.681196,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e99e8084aac44-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:08:16 GMT",
    "ETag": "W/\"f2e72c73628bf48a1cf2516c306e8165\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/123/issues?epic_iid=123&id=2524164&page=2&per_page=20>; rel=\"prev\", <https://gitlab.com/api/v4/groups/2524164/epics/123/issues?epic_iid=123&id=2524164&page=4&per_page=20>; rel=\"next\", <https://gitlab.com/api/v4/groups/2524164/epics/123/issues?epic_iid=123&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/123/issues?epic_iid=123&id=2524164&page=4&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=4XdE7iJ4V2IUjLSJ.fd5kXnOJHT.S95QFMxdjStmkyM-1747940896562-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-08-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-c",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"332d2bdfda8cf22b600d8cc937568fac\",\"version\":\"1\"}",
    "x-next-page": "4",
    "x-page": "3",
    "x-per-page": "20",
    "x-prev-page": "2",
    "x-request-id": "332d2bdfda8cf22b600d8cc937568fac",
    "x-runtime": "0.459759",
    "x-total": "62",
    "x-total-pages": "4"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/123/issues?page=3"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/123/issues?page=3",
  "_decoded_content": [
    {
      "id": 95055906,
      "iid": 2976,
      "project_id": 7603319,
      "title": "Support tab/shell completion of commands",
      "description": "It might just be a matter of trying if this works out of the box, getting docs updated, and potentially adding support for zsh but looks like click has support tab/shell completion of commands and args:\n\nhttps://click.palletsprojects.com/en/7.x/bashcomplete/ & https://github.com/click-contrib/click-completion",
      "state": "closed",
      "created_at": "2021-10-07T16:18:15.484Z",
      "updated_at": "2022-05-30T09:45:17.058Z",
      "closed_at": "2022-05-30T09:45:16.996Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2976",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2976",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2976/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2976/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2976",
        "relative": "#2976",
        "full": "meltano/meltano#2976"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 868690,
      "relative_position": -8208
    },
    {
      "id": 94201330,
      "iid": 2948,
      "project_id": 7603319,
      "title": "Job logs can be written to stdout to support 12-factor apps",
      "description": "### Problem to solve\nHeroku doesn't support mounting volumes in docker containers, so there's no way to get to the logs in the `.meltano` folder.\n\n### Target audience\nSmall businesses who run a simple ELT stack on Heroku Dynos (in our case Docker containers).\n\n### Further details\nHeroku applies the practices of The 12 Factor App.\n\n[According to 12factor.net](https://12factor.net/logs): \"A twelve-factor app never concerns itself with routing or storage of its output stream. It should not attempt to write to or manage logfiles. Instead, each running process writes its event stream, unbuffered, to stdout.\"\n\n### Proposal\nWe need to be able to configure Meltano to write ELT logs to `stdout`, so that users of 12-factor containers can connect up a logging service like [Papertrail](https://www.papertrail.com/) and view the logs.  I'd suggest enabling configuration and environment variables such as `log_to_stdout` and `LOG_TO_STDOUT`.\n\nEach log-line should include a unique job identifier, so that the log server can filter to show only the job that needs attention.\n\n### What does success look like, and how can we measure that?\n#### Success Metrics\n* An ELT engineer can debug a non-working Heroku container based ELT pipeline without having to run it locally\n\n#### Acceptance Criteria\n* When a job is triggered from either Meltano Web UI or Airflow scheduler\n  * every line that appears in the hash based log file created in `.meltano/logs/elt/{pipeline}/{hash}/elt.log` is also written to `stdout`\n* So that the lines of a particular job can be viewed separately on the logging server\n  * every line will be prefixed with `job:{job-id}`\n\n#### Nice to Have\nIdeally the log links provided to the Meltano Web UI and Airflow Scheduler UI could be configured with a template external server address that contains the job ID as a variable substitution.\n\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n* Asked by @tayloramurphy [on Slack](https://meltano.slack.com/archives/C01TCRBBJD7/p1632402247290500?thread_ts=1620054902.044500&cid=C01TCRBBJD7) to raise this issue.\n* May be a more flexible solution to #2107 \n* This proposal builds upon the progress made for 12-factor apps in #2081.",
      "state": "closed",
      "created_at": "2021-09-23T14:59:52.386Z",
      "updated_at": "2022-05-30T09:41:32.912Z",
      "closed_at": "2022-05-30T09:41:32.892Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1336534,
        "username": "fuzzkat",
        "public_email": "",
        "name": "Kat Crichton-Seager",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/31c8d92a5b5c1dd7264b14ec525213fd8424c3d17e35ebf5efe0b368b4caadab?s=80&d=identicon",
        "web_url": "https://gitlab.com/fuzzkat"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2948",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2948",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2948/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2948/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2948",
        "relative": "#2948",
        "full": "meltano/meltano#2948"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 843895,
      "relative_position": -6669
    },
    {
      "id": 94073707,
      "iid": 2947,
      "project_id": 7603319,
      "title": "Add CLI option to remove schedule: `meltano schedule remove ...`",
      "description": "I don't think we currently have a means to remove schedules from the CLI. Inquired about in slack here: https://meltano.slack.com/archives/CMN8HELB0/p1632275691145800",
      "state": "closed",
      "created_at": "2021-09-22T02:52:37.845Z",
      "updated_at": "2022-05-30T09:41:25.031Z",
      "closed_at": "2022-05-30T09:41:25.001Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Orchestrate",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2947",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2947",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2947/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2947/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2947",
        "relative": "#2947",
        "full": "meltano/meltano#2947"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 841108,
      "relative_position": -6156
    },
    {
      "id": 92955420,
      "iid": 2915,
      "project_id": 7603319,
      "title": "Provide an explicit means to purge a cached catalog",
      "description": "Currently cached catalogs are maintained for all taps unless they are non-pip or editable-mode installs.\n\n## Proposal\n\nTwo options:\n\n### Option A - explicit standalone refresh command:\n\nIntroduce a CLI means of explicitly refreshing a plugin's cached catalog:\n\n- `meltano invoke tap-mytap --discover`\n\n### Option B - explicit inline refresh along with sync:\n\nPer execution of `meltano elt` and/or `meltano invoke`, allow the forcing of catalog discovery with an explicit on/off value.\n\n\n- `meltano invoke tap-mytap` - lets meltano decide\n- `meltano invoke tap-mytap --with_discover=True` - forces a refresh before sync\n- `meltano invoke tap-mytap --with_discover=False` - forces skipping discovery (tap may fail if none is cached)\n\nAnd the same for `meltano elt`:\n\n- `meltano elt tap-mytap target-something` - lets meltano decide\n- `meltano elt --with_discover=True tap-mytap target-something` - forces a refresh before sync\n- `meltano elt --with_discover=False tap-mytap target-something` - forces skipping discovery (tap may fail if none is cached)\n\nNote: \n\n- For the inline use case where sync is also going to be run, I'm biasing towards something like `--with_discover` because in the singer world `--discover` by itself means _only_ discover and do not sync. \n\n## Related\n\nThis also relates to #2907 which proposes a means to always-refresh the catalog. For instance, adding a CLI flag into `meltano elt` (or meltano.yml) which would ignore cached file and allow a single-step execution with a freshly gotten catalog.",
      "state": "closed",
      "created_at": "2021-09-01T19:22:14.803Z",
      "updated_at": "2022-05-30T09:37:14.654Z",
      "closed_at": "2022-05-30T09:37:14.624Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2915",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2915",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2915/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2915/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2915",
        "relative": "#2915",
        "full": "meltano/meltano#2915"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805962,
      "relative_position": -5643
    },
    {
      "id": 90502481,
      "iid": 2861,
      "project_id": 7603319,
      "title": "Warning when Meltano select contains entries that do not match anything in the Catalog",
      "description": "I have a tap with thousands of streams. I'd like to know if Meltano.yml has a select set for a Stream, but the select doesn't match any of the streams. \n\nUse cases:\n1. Sometimes I fat finger things, it'd be nice if Meltano nudged me and said \"WARNING: Stream abc is selected but doesn't exist in the catalog file\n1. Catalogs can change and a select that matched a stream before may no longer match a stream, it'd be nice to know this when hoping through the logs\n1. Could go farther and fail when this happens for very touchy use cases",
      "state": "closed",
      "created_at": "2021-07-19T14:41:51.461Z",
      "updated_at": "2022-05-30T09:30:29.278Z",
      "closed_at": "2022-05-30T09:30:29.257Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2861",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2861",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2861/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2861/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2861",
        "relative": "#2861",
        "full": "meltano/meltano#2861"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 711892,
      "relative_position": -23598
    },
    {
      "id": 87771495,
      "iid": 2768,
      "project_id": 7603319,
      "title": "Change default behavior in `meltano config ... set` when `kind` is missing",
      "description": "We should considering altering how Meltano behaves when `kind` is missing from specific settings. The default behavior when `kind` is not know would be to treat the value as insensitive. We may instead want to prompt the user to specify the `kind` and/or the sensitivity level of an otherwise undeclared setting value.\n\nFor instance, prompting a user to specify it if configuring with `meltano config <plugin> set <setting> <value>. Especially for custom taps (including many taps discovered from the hub), the `kind` and therefor the sensitivity level is not known, and we should probably not automatically default to that value _not_ being a secret. \n\nThis could also serve as a catch for typos or accidentally-incorrect setting names: rather than going through the wizard's steps and storing under the provided setting name, the user may realize they've input an incorrect setting name and abort, then retry the process with the correct setting name.\n\nHere's an example invocation. The result of the below (using an unknown/incorrect setting name) is that the setting gets stored in yaml as clear text:\n\n```\n% poetry run meltano config target-jsonl set myset thisisnotasecret\nLoader 'target-jsonl' setting 'myset' was set in `meltano.yml`: 'thisisnotasecret'\n```\n\n\n## Proposal\n\n- We should at minimum warn the user that `kind` is missing.\n- If an interactive prompt is available, we can ask the user interactively what the proper `kind` value is _before_ serializing the new setting value.\n  - The setting's `kind` entry would be serialized to yaml as well.\n- We can add a `--quiet` flag optionally, to mute the new behavior and treat the setting as `kind: string` if not set. (Same as current status quo.)\n\n## Proposal (Updated 2022-04-16)\n\n- Combining with #3227+:\n  - If `--interactive` is used, we can _also_ prompt for setting config (including `kind`) at the same time as prompting for the new value.\n  - If `--interactive` is not set, we can fail with a prompt to use `--interactive` _or_ we can automatically switch to `--interactive` mode if `kind` is missing or the setting is not yet defined.",
      "state": "closed",
      "created_at": "2021-05-26T19:22:54.447Z",
      "updated_at": "2022-05-30T09:18:42.455Z",
      "closed_at": "2022-05-30T09:18:42.437Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Configuration",
        "Security",
        "flow::Triage",
        "kind::Tech Debt",
        "urgency::high",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2768",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2768",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2768/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2768/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2768",
        "relative": "#2768",
        "full": "meltano/meltano#2768"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 898523,
      "relative_position": -15390
    },
    {
      "id": 86167159,
      "iid": 2733,
      "project_id": 7603319,
      "title": "Make it clear in `meltano elt` output that incremental replication requires Job ID to be reused",
      "description": "User Story:  As a new user of Meltano, I want to do a test where I invoke a pipeline twice and observe that Meltano resumes where it left off.\n\nDiscussion:  job-id is not a required parameter to ELT and when not supplied, a one-time job id is generated and used.  There is no indication to the user what that job-id is or that you must supply one for state to be reused by future invocations.\n\nSuggested Solutions:\n* At least display the job id used in the output\n* Generate a job id based only on the tap/target so that future invocations will get the same default job id\n* Require a Job ID\n* Improve the docs the explain this nuance",
      "state": "closed",
      "created_at": "2021-04-28T21:00:44.823Z",
      "updated_at": "2022-05-30T07:13:22.791Z",
      "closed_at": "2022-05-30T07:13:22.775Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "Extract",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 8766158,
        "username": "ers81239",
        "public_email": "",
        "name": "Edward",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/443603765399f24dc6a1ce781ee4e0e5f861370ae8377cc0bf351e49aa94e5c1?s=80&d=identicon",
        "web_url": "https://gitlab.com/ers81239"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2733",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2733",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2733/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2733/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2733",
        "relative": "#2733",
        "full": "meltano/meltano#2733"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 944895,
      "relative_position": -13338
    },
    {
      "id": 85584822,
      "iid": 2716,
      "project_id": 7603319,
      "title": "Add `--help `docs for meltano CLI",
      "description": "Several of the CLI commands are not documented in `meltano --help`. Adding descriptions here could help streamline the new user experience.\n\n![image](/uploads/d91d5e25b2e7306ba9aa9e9515f3ef9b/image.png)\n\nAlso, many of the descriptions are trailing off in the screenshot above '...'.\n\nCLI documentation for reference: https://meltano.com/docs/command-line-interface.html\n\nReported in slack: https://meltano.slack.com/archives/C01TCRBBJD7/p1618932986365900?thread_ts=1618925301.362900&cid=C01TCRBBJD7\n\n## Update 2021-11-30\n\nThis is much better now but still has some missing hints.\n\n```console\n$ meltano --help\nUsage: meltano [OPTIONS] COMMAND [ARGS]...\n\n  Get help at https://www.meltano.com/docs/command-line-interface.html\n\nOptions:\n  --log-level [debug|info|warning|error|critical]\n  -v, --verbose\n  --environment TEXT              Meltano environment name\n  --version                       Show the version and exit.\n  --help                          Show this message and exit.\n\nCommands:\n  add          Add a plugin to your project.\n  config       Display Meltano or plugin configuration.\n  discover\n  elt          meltano elt EXTRACTOR_NAME LOADER_NAME extractor_name: Which...\n  environment  Manage Environments.\n  init         Creates a new Meltano project\n  install      Installs all the dependencies of your project based on the...\n  invoke       Invoke the plugin's executable with specified arguments.\n  remove       Remove a plugin from your project.\n  schedule     Manage Schedules.\n  schema\n  select       Execute the meltano select command.\n  ui\n  upgrade\n  user\n```",
      "state": "closed",
      "created_at": "2021-04-20T17:29:18.138Z",
      "updated_at": "2022-01-13T22:24:00.536Z",
      "closed_at": "2022-01-13T22:24:00.297Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "CLI",
        "Documentation",
        "flow::Doing",
        "kind::Bug",
        "urgency::low",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 10,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2716",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2716",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2716/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2716/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2716",
        "relative": "#2716",
        "full": "meltano/meltano#2716"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 971350,
      "relative_position": -15903
    },
    {
      "id": 85056180,
      "iid": 2701,
      "project_id": 7603319,
      "title": "Fail when plugin `pip_url` changed and installation is outdated (pip_url drift)",
      "description": "### Problem to solve\n\nI installed Meltano with tap-mysql and target-postgres. After creating some pipelines I realised that for a data set I needed to track deletions and this would require the transferwise variant. I switched the variant in the meltano.yml, but then spent a whilst trying to work out why it was not creating _sdc_deleted_at columns in postgres.\n\nThis is partially as I'm new, however the solution was to reinstall target-postgres with the transferwise variant. Everything then just worked, as you'd expect!\n\n\n### Proposal\n\nIt would really help (newer) users if the configuration validated the variant installed when it tried to run them.\n\n\n### What does success look like, and how can we measure that?\n\nIf the installed variant of a tap or a target does not match the variant in the meltano.yml then an error or warning should be shown.\n\n### Proposed spec (added 2022-03-03)\n\n1. During install we drop a marker file into the root of the venv with text of the `pip_url` used during installation. (Or a hash, if we think the pip_url is sensitive.)\n   - E.g. `.meltano/.../dbt/meltano_pip_url_marker.txt`\n2. During execution we check the marker file against the current `pip_url` value.\n3. If the comparison fails, we either warn or throw a hard failure before executing the plugin.",
      "state": "closed",
      "created_at": "2021-04-12T15:55:29.044Z",
      "updated_at": "2022-05-30T07:09:25.852Z",
      "closed_at": "2022-05-30T07:09:25.832Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Office Hours::Discussed",
        "Plugin Management",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [],
      "author": {
        "id": 8656907,
        "username": "ghorwitchsmith",
        "public_email": "",
        "name": "Giles Horwitch-Smith",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a75f6faec069f8d3e05a394b14a14771de210af19d09cb577f24e1d1129c4438?s=80&d=identicon",
        "web_url": "https://gitlab.com/ghorwitchsmith"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 11,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2701",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2701",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2701/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2701/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2701",
        "relative": "#2701",
        "full": "meltano/meltano#2701"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 971356,
      "relative_position": -16416
    },
    {
      "id": 85016516,
      "iid": 95,
      "project_id": 22672923,
      "title": "CLI improvements (autocomplete,  typed options)",
      "description": "As I was trying to add shell autocompletion for a tap built with the SDK, I was able to do so following [the click documentation][click-autocomplete]. However, it felt like an unnecessarily complicated process and something the SDK should offer to plugin developers for free. Then I came across [Typer], a library for building CLIs, built on top of `click` and extending it with a friendlier API and other perks. I was able to subclass `singer_sdk.tap_base.Tap` to use the library without any changes to the already working tap code (except for the super class).\n\nI found some immediate benefits by using Typer.\n\n### End user\n\n- Easy to install completion for common shells (Bash, Zsh, Fish, Powershell)\n- More descriptive `--help` command with typed options, including enums. For example `--format [plain|json]  [default: plain]`\n\n### Plugin developer:\n\n- Automatic markdown documentation for your plugin\n\n### SDK developer:\n\n- Use type annotations to declare option types\n- Less code repetition (e.g. CLI Option decorator for `--catalog` and a function argument `catalog`)\n\nAt the moment, the particular tap is not public but I plan to do the same to [tap-confluence], and I can also start a MR if this is something you think the SDK should have.\n\n[click-autocomplete]: https://click.palletsprojects.com/en/7.x/bashcomplete/\n[Typer]: https://typer.tiangolo.com\n[tap-confluence]: https://github.com/edgarrmondragon/tap-confluence/",
      "state": "closed",
      "created_at": "2021-04-12T06:34:44.584Z",
      "updated_at": "2022-05-29T23:36:11.417Z",
      "closed_at": "2022-05-29T23:36:11.400Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Extract",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/95",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/95",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/95/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/95/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#95",
        "relative": "#95",
        "full": "meltano/sdk#95"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 554234,
      "relative_position": -7182
    },
    {
      "id": 78840945,
      "iid": 2572,
      "project_id": 7603319,
      "title": "When `meltano install` was run outside of Docker, `meltano invoke` and `meltano elt` fail with `ExecutableNotFoundError` inside Docker",
      "description": "As reported [in Slack](https://meltano.slack.com/archives/CQUDGG7U2/p1612906795008100?thread_ts=1612903195.006900&cid=CQUDGG7U2) by Pankaj Saini.\n\nError:\n\n```\nmeltano.core.plugin_invoker.ExecutableNotFoundError: Executable 'airflow' could not be found. Orchestrator 'airflow' may not have been installed yet using `meltano install orchestrator airflow`, or the executable name may be incorrect.\n```\n\nCaused by:\n\n```\nFileNotFoundError: [Errno 2] No such file or directory: '/project/.meltano/orchestrators/airflow/venv/bin/airflow': '/project/.meltano/orchestrators/airflow/venv/bin/airflow'\n```\n\nUnlike the error suggests, the plugin's own executable actually does exist at the identified path (relative from the Docker container), but the `python` executable pointed at by plugin executable's hashbang doesn't, since it uses an absolute path that was determined when `meltano install` was run outside of the Docker container, which won't be valid inside the container's environment.\n\nThe solution is to always run `meltano install` and `meltano invoke`/`meltano elt` in the same environment, but we should:\n- [ ] make the error message less confusing\n- [ ] document this explicitly in https://meltano.com/docs/containerization.html#docker-compose / https://gitlab.com/meltano/files-docker-compose",
      "state": "closed",
      "created_at": "2021-02-10T17:43:36.103Z",
      "updated_at": "2022-05-30T06:53:39.779Z",
      "closed_at": "2022-05-30T06:53:39.738Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Docker",
        "flow::Triage",
        "kind::Bug"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2572",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2572",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2572/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2572/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2572",
        "relative": "#2572",
        "full": "meltano/meltano#2572"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1050327,
      "relative_position": -22572
    },
    {
      "id": 71701762,
      "iid": 2363,
      "project_id": 7603319,
      "title": "meltano config <plugin> init",
      "description": "### Problem to solve\n\nSome plugin configurations require nesting structures that may be too complex to set with `meltano config <plugin> set <name>` or to manually insert into `meltano.yml` by hand.\n\nAn option to initialize the skeleton config in `meltano.yml` could be a convenient way to reduce complexity of setting up complex plugin configurations.\n\n### Target audience\n(For whom are we doing this? Include a persona)\n\nThe target audience would be users who are setting up plugins with complex configurations.\n\n### Further details\n(Include use cases, benefits, and/or goals)\n\nAn example use case would be a user trying to setup the [tap-spreadsheets-anywhere](https://github.com/ets/tap-spreadsheets-anywhere) extractor, which has a complex `tables` array:\n\n```\n{\n    \"tables\": [\n        {\n            \"path\": \"s3://my-s3-bucket\",\n            \"name\": \"target_table_name\",\n            \"pattern\": \"subfolder/common_prefix.*\",\n            \"start_date\": \"2017-05-01T00:00:00Z\",\n            \"key_properties\": [],\n            \"format\": \"csv\",\n            \"delimiter\": \"|\",\n            \"quotechar\": '\"',\n            \"universal_newlines\": false,\n            \"sample_rate\": 10,\n            \"max_sampling_read\": 2000,\n            \"max_sampled_files\": 3,\n            \"prefer_number_vs_integer\": true,\n            \"selected\": true,\n\n            // for any field in the table, you can hardcode the json schema datatype to override\n            // the schema infered through discovery mode. \n            // *Note Meltano users* - the scheam override support delivered in Meltano v1.41.1 is more robust\n            //  and should be preferred to this tap-specific override functionality.  \n            \"schema_overrides\": {\n                \"id\": {\n                    \"type\": [\"null\", \"integer\"],\n                },\n                // if you want the tap to enforce that a field is not nullable, you can do it like so:\n                \"first_name\": {\n                    \"type\": \"string\",\n                }\n            }\n        },\n        {\n            \"path\": \"sftp://username:password@host//path/file\",\n            \"name\": \"another_table_name\",\n            \"pattern\": \"subdir/.*User.*\",\n            \"start_date\": \"2017-05-01T00:00:00Z\",\n            \"key_properties\": [\"id\"],\n            \"format\": \"excel\", \n            // you must specify the worksheet name to pull from in your xls(x) file.\n            \"worksheet_name\": \"Names\"\n        }\n    ]\n}\n```\n\nCurrently, as best I understand, a user would have to either construct that entire tables array in a single string passed to `meltano config tap-spreadsheets-anywhere set tables '{...}', or manually author that structure into their `meltano.yml` file.\n\n### Proposal\n(How are we going to solve the problem? Try to include the user journey)\n\nOne idea proposed here is to add a CLI option to initialize a blank default skeleton for a plugin's configuration (assuming this information is somehow associated with the plugin's discovery metadata?)\n\n`meltano config <plugin> init` or `meltano config <plugin> init <name>`\n\nRunning this command would insert the blank config skeleton into the appropriate location within the `meltano.yml` file, leaving the user with the much simpler task of filling in any necessary blanks.\n\n### What does success look like, and how can we measure that?\n(Define both the success metrics and acceptance criteria. Note that success metrics indicate the desired business outcomes, while acceptance criteria indicate when the solution is working correctly. If there is no way to measure success, link to an issue that will implement a way to measure this)\n\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_",
      "state": "closed",
      "created_at": "2020-09-25T17:55:39.036Z",
      "updated_at": "2022-05-30T06:28:13.071Z",
      "closed_at": "2022-05-30T06:28:13.046Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "Configuration",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 2613,
        "username": "andrewstewart",
        "public_email": "",
        "name": "Andrew Stewart",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/17f9b82fe5ac759b5e3a24e32815e645e09ef7a55e383fcecb2a2b2920e87098?s=80&d=identicon",
        "web_url": "https://gitlab.com/andrewstewart"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2363",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2363",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2363/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2363/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2363",
        "relative": "#2363",
        "full": "meltano/meltano#2363"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805815,
      "relative_position": 0
    },
    {
      "id": 63846865,
      "iid": 2177,
      "project_id": 7603319,
      "title": "Preserve comments and flow style when programmatically modifying `meltano.yml` (Ruamel)",
      "description": "PyYAML doesn't support this currently (https://github.com/yaml/pyyaml/issues/90), but https://pypi.org/project/ruamel.yaml does.\n\nNote:\n\nOur usage of the Canonical class may also be a factor we need to consider in our implementation. Noted by @kgpayne below: https://gitlab.com/meltano/meltano/-/issues/2177#note_708071594",
      "state": "closed",
      "created_at": "2020-07-17T16:23:10.920Z",
      "updated_at": "2022-05-30T06:05:02.929Z",
      "closed_at": "2022-05-30T06:05:02.913Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "Roadmap",
        "User Onboarding",
        "flow::To Do",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 5,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2177",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 20,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2177",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2177/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2177/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2177",
        "relative": "#2177",
        "full": "meltano/meltano#2177"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 891355,
      "relative_position": -9747
    },
    {
      "id": 53978845,
      "iid": 2133,
      "project_id": 7603319,
      "title": "Automatically `meltano install` missing tap and target when running `meltano elt`",
      "description": "`meltano elt tap-foo target-bar` will already add `tap-foo` and `target-bar` to the project (and `meltano.yml`) if they are not already present. \n\nHowever, if they've already been added to the project, but are not actually installed into the `.meltano` directory (such as after cloning a repo from version control without running `meltano install`), `meltano elt` fails with an ugly error message, as reported by @nehiljain:\n\n```\nELT could not complete, an error happened during the process: Cannot start tap or target: [Errno 2] No such file or directory: '/Users/nehiljain/snaptravel/universal-elt-pipeline/airflow-elt/.meltano/extractors/tap-github/venv/bin/tap-github': '/Users/nehiljain/snaptravel/universal-elt-pipeline/airflow-elt/.meltano/extractors/tap-github/venv/bin/tap-github'\n```\n\nWe can do much better, and automatically `meltano install` these missing taps and targets when running `meltano elt` as well.",
      "state": "closed",
      "created_at": "2020-07-06T15:50:24.466Z",
      "updated_at": "2022-05-30T05:59:33.288Z",
      "closed_at": "2022-05-30T05:59:33.261Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2133",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2133",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2133/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2133/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2133",
        "relative": "#2133",
        "full": "meltano/meltano#2133"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805827,
      "relative_position": -513
    },
    {
      "id": 28935758,
      "iid": 1505,
      "project_id": 7603319,
      "title": "Make it clear whether ELT is ignoring duplicates",
      "description": "## Problem\n\nUser has indicated that it's not clear if ELT is ignoring duplicates.",
      "state": "closed",
      "created_at": "2019-12-20T00:53:42.242Z",
      "updated_at": "2022-05-30T04:43:19.050Z",
      "closed_at": "2022-05-30T04:43:19.031Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Documentation",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 253119,
        "username": "bencodezen",
        "public_email": "",
        "name": "Ben Hong",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/253119/avatar.png",
        "web_url": "https://gitlab.com/bencodezen"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/1505",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/1505",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/1505/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/1505/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#1505",
        "relative": "#1505",
        "full": "meltano/meltano#1505"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805877,
      "relative_position": -1539
    },
    {
      "id": 27094249,
      "iid": 1306,
      "project_id": 7603319,
      "title": "Improve CLI command invocation performance",
      "description": "### Problem\n\nEach CLI command requires an unusual execution time to run even if running with trivial flags like `--help` or `--version`. For example, try running the following commands:\n\n1. `$ meltano`\n2. `$ meltano --help`\n3. `$ meltano --version`\n\n**Data:** Perceived execution time is `1` to `3` seconds. The actual execution time spans from `1.38` seconds to `1.64` seconds. You can see the system resource usage, like execution time and CPU usage, using the `time` command before each command.\n\n**Suggestion:** All these commands should run instantly and take less than 1 second if not less than 100 milliseconds.\n\n### Proposal\n\nTBD",
      "state": "closed",
      "created_at": "2019-11-15T12:39:30.735Z",
      "updated_at": "2022-05-30T04:19:25.539Z",
      "closed_at": "2022-05-30T04:19:25.485Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "UX",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1474048,
        "username": "gtsiolis",
        "public_email": "",
        "name": "George Tsiolis",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bfddd5b6e267deaa8cb1193e0638877338c3bee8df8cd187f8e6264b08d12703?s=80&d=identicon",
        "web_url": "https://gitlab.com/gtsiolis"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/1306",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/1306",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/1306/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/1306/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#1306",
        "relative": "#1306",
        "full": "meltano/meltano#1306"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805886,
      "relative_position": -2052
    },
    {
      "id": 27049574,
      "iid": 1302,
      "project_id": 7603319,
      "title": "Add task duration in the pipeline log",
      "description": "### Problem\n\nThe pipeline log output does not include any task duration information. This could help inform about the time needed for each task and more.\n\n### Proposal\n\nLet's add a small label that contains task duration in the pipeline log.\n\nAlternatively, an intermediate step would be to add timestamp information next to each line, when applicable. However, this could cause some confusion since the `dbt` log output already contains timestamp information.\n\n| Log (1) | Log (2) |\n| ------ | ------ |\n| ![log-1](/uploads/d46be76e1574b3596229345a8d2c1755/log-1.png) | ![log-2](/uploads/28293b3d5f2e128bb093b521b4fadf60/log-2.png) |\n\n### Design\n\nTBD",
      "state": "closed",
      "created_at": "2019-11-14T12:19:27.399Z",
      "updated_at": "2022-05-30T04:18:55.238Z",
      "closed_at": "2022-05-30T04:18:55.217Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "CLI",
        "Orchestrate",
        "UX",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1474048,
        "username": "gtsiolis",
        "public_email": "",
        "name": "George Tsiolis",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bfddd5b6e267deaa8cb1193e0638877338c3bee8df8cd187f8e6264b08d12703?s=80&d=identicon",
        "web_url": "https://gitlab.com/gtsiolis"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/1302",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/1302",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/1302/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/1302/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#1302",
        "relative": "#1302",
        "full": "meltano/meltano#1302"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805888,
      "relative_position": -2565
    },
    {
      "id": 26832273,
      "iid": 1281,
      "project_id": 7603319,
      "title": "Exploratory Sprint: Homebrew package `brew install meltano`",
      "description": "We need one!",
      "state": "closed",
      "created_at": "2019-11-07T22:18:29.942Z",
      "updated_at": "2022-05-30T04:16:20.727Z",
      "closed_at": "2022-05-30T04:16:20.706Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Exploration",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 3601799,
        "username": "dmor",
        "public_email": "",
        "name": "Danielle Morrill",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/3601799/avatar.png",
        "web_url": "https://gitlab.com/dmor"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/1281",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/1281",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/1281/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/1281/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#1281",
        "relative": "#1281",
        "full": "meltano/meltano#1281"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805925,
      "relative_position": -3078
    },
    {
      "id": 26521475,
      "iid": 1230,
      "project_id": 7603319,
      "title": "Update make bundle output",
      "description": "### Problem\n\nWhen you run `make bundle` per the [contributing instructions](https://meltano.com/docs/contributing.html) you get the following output at the end, which is coming from https://gitlab.com/meltano/meltano/commit/18aa7982707fa178b4f2b42f0e94a75451226eca#836efb6e25a091dcb4ff8e1dbb2f0be6a5cbf14c_134_132. This can create confusion to the user trying to contribute as it's not clear if this a required command on their side or just informing them of an action.\n\n```sh\n ...\n DONE  Build complete. The dist directory is ready to be deployed.\n INFO  Check out deployment instructions at https://cli.vuejs.org/guide/deployment.html\n                                  \n\u2728  Done in 22.28s.\nmkdir -p src/meltano/api/templates && \\\n\tcp src/webapp/dist/index.html src/meltano/api/templates/webapp.html && \\\n\tcp -r src/webapp/dist/static/. src/meltano/api/static\n```\n\n### Proposal\n\nLet's a) reorder the output if possible and move the `mkdir` command above the last done section or b) remove that part altogether.",
      "state": "closed",
      "created_at": "2019-10-31T13:06:41.213Z",
      "updated_at": "2022-05-30T04:09:57.839Z",
      "closed_at": "2022-05-30T04:09:57.820Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "UX",
        "kind::Tech Debt"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1474048,
        "username": "gtsiolis",
        "public_email": "",
        "name": "George Tsiolis",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bfddd5b6e267deaa8cb1193e0638877338c3bee8df8cd187f8e6264b08d12703?s=80&d=identicon",
        "web_url": "https://gitlab.com/gtsiolis"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/1230",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/1230",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/1230/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/1230/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#1230",
        "relative": "#1230",
        "full": "meltano/meltano#1230"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805938,
      "relative_position": -3591
    },
    {
      "id": 26288764,
      "iid": 1205,
      "project_id": 7603319,
      "title": "CLI did not provide confirmation that my project was created and next step instructions to go to localhost:5000",
      "description": "### Behavior That Occurred\n\nWhen I ran `meltano ui` I received the following output, which does not say my project was successfully created and to go to localhost:5000\n\nWhen I did go to localhost:5000 Meltano's UI had successfully loaded, but in the CLI it appeared to be hung (until I started to interact with the UI)\n\n```\n(Meltano) Danielles-MBP:carbon daniellemorrill$ meltano ui\n[MainThread][INFO][2019-10-24 12:57:59,561] Context impl SQLiteImpl.\n[MainThread][INFO][2019-10-24 12:57:59,561] Will assume non-transactional DDL.\nUpgrading database to 6ef30ab7b8e5\n[MainThread][INFO][2019-10-24 12:57:59,569] Context impl SQLiteImpl.\n[MainThread][INFO][2019-10-24 12:57:59,569] Will assume non-transactional DDL.\n[MainThread][INFO][2019-10-24 12:57:59,572] Running upgrade  -> b4c05e463b53, Create meltano.core base tables\n[MainThread][INFO][2019-10-24 12:57:59,586] Running upgrade b4c05e463b53 -> 6ef30ab7b8e5, Create meltano.api tables\n[MainThread][INFO][2019-10-24 12:57:59,788] Auto-compiling models in '/Users/daniellemorrill/Projects/dogfood-20191024/carbon/model'\n[MainThread][INFO][2019-10-24 12:57:59,790] All workers started.\n[2019-10-24 12:58:00 -0600] [13473] [INFO] Starting gunicorn 19.9.0\n[2019-10-24 12:58:00 -0600] [13473] [INFO] Listening at: http://0.0.0.0:5000 (13473)\n[2019-10-24 12:58:00 -0600] [13473] [INFO] Using worker: sync\n[2019-10-24 12:58:00 -0600] [13476] [INFO] Booting worker with pid: 13476\n[2019-10-24 12:58:00 -0600] [13477] [INFO] Booting worker with pid: 13477\n[2019-10-24 12:58:00 -0600] [13478] [INFO] Booting worker with pid: 13478\n[2019-10-24 12:58:00 -0600] [13479] [INFO] Booting worker with pid: 13479\n```\n\n### Expected Behavior\n\n* CLI gives the user confirmation that their actions were successful and generated the intended result\n* CLI gives the user clear next step",
      "state": "closed",
      "created_at": "2019-10-24T19:02:02.121Z",
      "updated_at": "2022-05-30T04:06:51.547Z",
      "closed_at": "2022-05-30T04:06:51.507Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Dogfooding",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 3601799,
        "username": "dmor",
        "public_email": "",
        "name": "Danielle Morrill",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/3601799/avatar.png",
        "web_url": "https://gitlab.com/dmor"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/1205",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/1205",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/1205/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/1205/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#1205",
        "relative": "#1205",
        "full": "meltano/meltano#1205"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805939,
      "relative_position": -4104
    }
  ]
}
