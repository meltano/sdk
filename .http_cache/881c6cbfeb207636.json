{
  "cookies": {
    "_cfuvid": "NyZK8nBHak5MWguoQ7BLcOp_b0HNMkjq_qV1Q69ktJ0-1747940878210-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:07:58.127940+00:00",
  "elapsed": 0.530541,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e99765b03dbd6-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:07:58 GMT",
    "ETag": "W/\"847450521e8aa868cbdc645957a68e24\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/108/issues?epic_iid=108&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/108/issues?epic_iid=108&id=2524164&page=1&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=NyZK8nBHak5MWguoQ7BLcOp_b0HNMkjq_qV1Q69ktJ0-1747940878210-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-13-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-b",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"28573ae20dccbcb259ce40d28d49ec68\",\"version\":\"1\"}",
    "x-next-page": "",
    "x-page": "1",
    "x-per-page": "20",
    "x-prev-page": "",
    "x-request-id": "28573ae20dccbcb259ce40d28d49ec68",
    "x-runtime": "0.232307",
    "x-total": "11",
    "x-total-pages": "1"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/108/issues"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/108/issues",
  "_decoded_content": [
    {
      "id": 108701752,
      "iid": 385,
      "project_id": 22672923,
      "title": "SQL Targets: Inserts fail if activate_version message has added _sdc columns",
      "description": "## Summary\nThe INSERT statement generated by SQLSink.bulk_insert_records does not specify target column names. This is fine when the incoming records contain all the columns in the table but fails when other columns exist in the table - for example the `_sdc*` columns created by the processing of an activate_version record. While I haven't tested it explicitly this would also be a problem if the stream's schema changed over time, e.g. a column was removed from the source table.\n\n\n## Steps to reproduce\nRun the unit test added for !287 ;) \n\n\n## What is the current bug behavior?\nThe INSERT fails because values are not specified for all columns.\n\n\n## What is the expected correct behavior?\nThe INSERT should succeed and populate the columns found in the incoming stream.\n\n\n## Possible fixes\nMR incoming",
      "state": "closed",
      "created_at": "2022-05-17T19:44:28.771Z",
      "updated_at": "2022-05-19T20:27:59.678Z",
      "closed_at": "2022-05-19T20:27:59.580Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 11028865,
        "username": "tbriggs2",
        "public_email": null,
        "name": "Thomas Briggs",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0333fed181cc72b244e53f28299a2fbd4c00d3e16ae323c6771a12d3d442917a?s=80&d=identicon",
        "web_url": "https://gitlab.com/tbriggs2"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/385",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/385",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/385/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/385/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#385",
        "relative": "#385",
        "full": "meltano/sdk#385"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1373673,
      "relative_position": -7182
    },
    {
      "id": 108095754,
      "iid": 376,
      "project_id": 22672923,
      "title": "SQL Targets: Processing of activate_version message assumes particular parameter markers",
      "description": "## Summary\nSQLSink.activate_version uses question marks as parameter markers in the query to update the sdc_deleted_at column. That's ok for some DBs but not all. I'm working with PyMySQL, for example, where that does not work.\n\nAlso, the code does not ensure the existence of the sdc_table_version field. That has to be resolved before the parameter markers become an issue.\n\n## Steps to reproduce\nRun a pipeline where the tap produces an activate_version record, the target table already exists, and the DB driver doesn't use questions marks for parameter markers (e.g. MySQL).\n\n\n## What is the current bug behavior?\nThe UPDATE to set sdc_deleted_at fails.\n\n\n## What is the expected correct behavior?\nThe UPDATE to set sdc_deleted_at should succeed.\n\n\n## Possible fixes\nSQLAlchemy's \"text\" method appears to be the better approach here. That solves the parameter marker problem and eliminates the use of the deprecated form of execute() the code currently uses.\n\nMR incoming.",
      "state": "closed",
      "created_at": "2022-05-05T15:50:04.328Z",
      "updated_at": "2022-05-19T20:51:13.711Z",
      "closed_at": "2022-05-19T20:51:13.677Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 11028865,
        "username": "tbriggs2",
        "public_email": null,
        "name": "Thomas Briggs",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0333fed181cc72b244e53f28299a2fbd4c00d3e16ae323c6771a12d3d442917a?s=80&d=identicon",
        "web_url": "https://gitlab.com/tbriggs2"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/376",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/376",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/376/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/376/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#376",
        "relative": "#376",
        "full": "meltano/sdk#376"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1343465,
      "relative_position": -6669
    },
    {
      "id": 108046420,
      "iid": 374,
      "project_id": 22672923,
      "title": "RestSink",
      "description": "Writing a REST API target, and it'd be really nice to be able to reuse a bunch of the functionality RestStream has\n\nSpecifically\n- Authentication\n- Request abstractions (prepare records, etc)",
      "state": "closed",
      "created_at": "2022-05-05T05:04:35.151Z",
      "updated_at": "2022-05-30T00:14:06.426Z",
      "closed_at": "2022-05-30T00:14:06.408Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/374",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/374",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/374/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/374/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#374",
        "relative": "#374",
        "full": "meltano/sdk#374"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1343204,
      "relative_position": -6156
    },
    {
      "id": 108040449,
      "iid": 373,
      "project_id": 22672923,
      "title": "Provide path for SQL target developers to \"max out\" varchar declarations in columnarly compressed datasets",
      "description": "~~\"urgency::low\" \n\nNow that https://gitlab.com/meltano/sdk/-/issues/371+ is resolved and merged, I want to open a quick stub issue to track the work to add a recommendation for those target developers who prefer a length-unlimited or length-maxed varchar declaration.\n\n- Columnar databases may not have any storage or performance differences based on length, for instance between `varchar(10)` and `varchar(max)`.\n- Some databases may also have a high cost of running `alter column` and/or have `alter column` disallowed.\n\n## Rough implementation\n\nOne path to implement:\n\n- Developer overrides `to_sql_type(jsonschema_type: dict) -> sqlalchemy.types.TypeEngine`, calling the base class and then converting any `varchar` instances with `varchar(max)`.\n- Depending upon the target implementation, and whether it makes sense to make this a user-configurable implementation choice, the developer could optionally tie this behavior to a setting like `prefer_varchar_max` or similar.\n\nThe above could be a simple docs update or an addition to code samples, or it could be an built-in option or implementation flag within the SDK's python code.",
      "state": "closed",
      "created_at": "2022-05-04T23:09:50.303Z",
      "updated_at": "2022-05-30T00:13:57.915Z",
      "closed_at": "2022-05-30T00:13:57.893Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "urgency::low",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/373",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/373",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/373/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/373/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#373",
        "relative": "#373",
        "full": "meltano/sdk#373"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1343202,
      "relative_position": -5643
    },
    {
      "id": 108023469,
      "iid": 372,
      "project_id": 22672923,
      "title": "SQL Targets: Processing of activate_version record fails if table does not yet exist",
      "description": "## Summary\nSQLSink.activate_version assumes that the destination table exists. The first time the pipeline is executed this may not be true, however, since the table will not be created until the first process_batch call.\n\n\n## Steps to reproduce\nCreate a pipeline where the tap produces activate_version records (I used tap-mysql) and the target relies on the SDK to handle activation version records. I discovered this while developing my own target but I was able to reproduce it using the [SDK-based version of the SQLite target](https://github.com/MeltanoLabs/target-sqlite/tree/port-to-sdk).\n\n\n## What is the current bug behavior?\nThe pipeline will fail with a 'table does not exist' error caused by the DELETE FROM that SQLSink.activate_version executes.\n\n\n## What is the expected correct behavior?\nSQLSink.activate_version should do nothing if the table doesn't exist.\n\n\n## Possible fixes\nMR incoming",
      "state": "closed",
      "created_at": "2022-05-04T16:08:04.953Z",
      "updated_at": "2022-05-16T15:13:21.245Z",
      "closed_at": "2022-05-16T15:13:21.204Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 11028865,
        "username": "tbriggs2",
        "public_email": null,
        "name": "Thomas Briggs",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0333fed181cc72b244e53f28299a2fbd4c00d3e16ae323c6771a12d3d442917a?s=80&d=identicon",
        "web_url": "https://gitlab.com/tbriggs2"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/372",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/372",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/372/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/372/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#372",
        "relative": "#372",
        "full": "meltano/sdk#372"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1339539,
      "relative_position": -4617
    },
    {
      "id": 108021447,
      "iid": 371,
      "project_id": 22672923,
      "title": "SQL Targets: varchar columns generally require maxlength",
      "description": "## Summary\nMost databases require a max length to be specified for varchar columns. Not all do (SQLite, Postgres, and Snowflake do not) but most do. The SDK currently creates varchar columns without a max length and thus table creation fails when the DB requires it. If the schema provided by the tap provides a max length it should be used.\n\n\n## Steps to reproduce\n1. Create a SQL target using the SDK for a database such as MySQL\n2. Feed the target data with a stream containing a string field where the schema record specifies a max length\n\n\n## What is the current bug behavior?\nCreation of the table in the destination DB will fail due to a lack of a length.\n\n\n## What is the expected correct behavior?\nIf the tap provides a max length in the schema record it should be used.\n\n\n## Possible fixes\nThe relevant code is in singer_sdk/typing.py. MR incoming too.",
      "state": "closed",
      "created_at": "2022-05-04T15:27:03.738Z",
      "updated_at": "2022-05-12T22:24:23.743Z",
      "closed_at": "2022-05-04T22:59:09.148Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2136620,
        "iid": 176,
        "group_id": 2524164,
        "title": "Staging",
        "description": "",
        "state": "active",
        "created_at": "2021-07-07T19:00:49.676Z",
        "updated_at": "2021-07-07T19:00:49.676Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/176"
      },
      "assignees": [],
      "author": {
        "id": 11028865,
        "username": "tbriggs2",
        "public_email": null,
        "name": "Thomas Briggs",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0333fed181cc72b244e53f28299a2fbd4c00d3e16ae323c6771a12d3d442917a?s=80&d=identicon",
        "web_url": "https://gitlab.com/tbriggs2"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/371",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/371",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/371/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/371/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#371",
        "relative": "#371",
        "full": "meltano/sdk#371"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1339540,
      "relative_position": -5130
    },
    {
      "id": 106604733,
      "iid": 362,
      "project_id": 22672923,
      "title": "target cookiecutter has no tox.ini",
      "description": "target cookiecutter has no tox.ini",
      "state": "closed",
      "created_at": "2022-04-13T20:02:34.773Z",
      "updated_at": "2022-05-30T00:12:41.449Z",
      "closed_at": "2022-05-30T00:12:41.431Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/362",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/362",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/362/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/362/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#362",
        "relative": "#362",
        "full": "meltano/sdk#362"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1295376,
      "relative_position": -4104
    },
    {
      "id": 104546762,
      "iid": 347,
      "project_id": 22672923,
      "title": "RESTStream: PreparedRequest - Be compatible with \"standard\" Session method behaviour",
      "description": "## Summary\nThe `requests` library allows usage of certain environment variables to control its behaviour.\n\nOne of these environment variables is `REQUESTS_CA_BUNDLE` that is used to override the default CA bundle that ships with the `requests` library. Which is a needed feature in order to work with SSL-inspection devices and other 'man-in-the-middle' proxy systems.\n\nAs per `requests` documentation, in order to provide the same behaviour in regards to environment variables when using the `PreparedRequest` class instead of the `Session` class, additional preparation is needed via the `merge_environment_settings` API method, which provides the compatible behaviour.\n\n[Link](https://docs.python-requests.org/en/latest/user/advanced/#prepared-requests)\n\n\n## Proposed benefits\nProvide the same behaviour to Meltano SDK users that is already afforded to users of the `requests` library.\n\n## Proposal details\nUse `merge_environment_settings` API before calling `send` on the `PreparedRequest` object.\n\n## Best reasons not to build\nExisting users who are relying on this unexpected behaviour (i.e. that Meltano RESTStream class is \"ignoring\" the otherwise respected `REQUESTS_CA_BUNDLE`, `CURL_CA_BUNDLE`, `HTTP_PROXY`, `HTTPS_PROXY` and `NO_PROXY` environment variables) might have their set ups broken by enabling this usually expected behaviour of the standard `requests` functionality.",
      "state": "closed",
      "created_at": "2022-03-10T12:23:07.894Z",
      "updated_at": "2022-05-30T00:10:45.767Z",
      "closed_at": "2022-05-30T00:10:45.731Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1928419,
        "username": "cwegener",
        "public_email": "",
        "name": "Christoph Wegener",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/1eab48f696eb1969a0ae24dba921db930f94a4f4949305cb65580716e6aff04a?s=80&d=identicon",
        "web_url": "https://gitlab.com/cwegener"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/347",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/347",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/347/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/347/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#347",
        "relative": "#347",
        "full": "meltano/sdk#347"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1176516,
      "relative_position": -3591
    },
    {
      "id": 104395057,
      "iid": 344,
      "project_id": 22672923,
      "title": "Hyphens Not Supported by SQL Targets",
      "description": "Related to a discussion in https://github.com/MeltanoLabs/target-athena/pull/42\n\nCommonly SQL targets need to coalesce the stream name into a name thats acceptable by the target database. @aaronsteers mentioned:\n\n>Historically, the dash has been used as a delimiter between table, scheme, and db name parts.\n\nWe should consider using an underscore instead, or just make sure that the SDK takes into account converting the stream name to an acceptable table name.\n\nExamples:\n- Athena https://docs.aws.amazon.com/athena/latest/ug/glue-best-practices.html#schema-names\n- Snowflake https://github.com/transferwise/pipelinewise-target-snowflake/blob/83761af19d57b09786114abab4b3afa6c15ef735/target_snowflake/db_sync.py#L362\n- Probably many others too",
      "state": "closed",
      "created_at": "2022-03-08T14:17:12.668Z",
      "updated_at": "2022-05-30T00:10:23.011Z",
      "closed_at": "2022-05-30T00:10:22.987Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/344",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/344",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/344/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/344/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#344",
        "relative": "#344",
        "full": "meltano/sdk#344"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1170438,
      "relative_position": -3078
    },
    {
      "id": 100877675,
      "iid": 306,
      "project_id": 22672923,
      "title": "Support `LOG_BASED` replication method",
      "description": "We don't currently have any examples of SDK-based taps which use `LOG_BASED` replication. After merging !44+, we can start exploring this method.\n\nCommunity contributions welcomed.",
      "state": "closed",
      "created_at": "2022-01-19T03:37:10.793Z",
      "updated_at": "2022-05-30T00:05:30.852Z",
      "closed_at": "2022-05-30T00:05:30.500Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Extract",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/306",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/306",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/306/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/306/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#306",
        "relative": "#306",
        "full": "meltano/sdk#306"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1059251,
      "relative_position": -2565
    },
    {
      "id": 87768033,
      "iid": 135,
      "project_id": 22672923,
      "title": "Target sink - optimization strategies for when to flush batches",
      "description": "While draining or flushing a collection of target sinks, priority could be given to a number of different values:\n\n1. Drain often for benefit of:\n    1. reduced memory pressure by flushing stored records\n    2. reduced latency, at least for earlier-emitted record(s)\n    3. more frequent checkpoints, aka increased frequency of STATE messages emitted\n2. Drain less often for benefit of:\n    1. Fewer overall batches\n    2. Efficiency of bulk loading records at high scale\n    3. Lower costs on destination platforms which may charged or metered per batch\n        - for instance Snowflake charges less when running 1 minute out of every 15 versus running intermittently for all 15 minutes.\n3. Other factors to consider:\n    1. defining 'full' for each sink\n        - Each sink should report when it is full, either by writing custom `is_full()` logic or else by specifying a max record count.\n    1. controlling max per-record latency\n        - We may want to provide a max per-record latency threshold - for instance, prioritizing a batch to be loaded if contains one ore more record in queue for over 120 minutes.\n    2. draining multiple sinks when one is triggered ('toppling')\n        - When one sink is being drained, we may want to opportunistically drain all others at the same time. This could have benefits for metering and platform costs.\n        - For instance, it is cheaper in the Snowflake case to flush all at once and have fewer minutes of each hour running batches.\n        - Draining all sinks also allows us to flush the stored state message(s).\n    3. memory pressure\n        - If memory pressure is detected, this might force the flush of one or more streams\n\nOur strategy for this (broadly) should probably be to have at least two layers:\n\n- The developer provides some default logic or prioritization strategy that is tuned to work well for the destination system.\n- The user may optionally have some ability to override at runtime using config options.",
      "state": "closed",
      "created_at": "2021-05-26T17:53:40.698Z",
      "updated_at": "2022-05-29T23:41:11.720Z",
      "closed_at": "2022-05-29T23:41:11.666Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Load",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/135",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/135",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/135/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/135/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#135",
        "relative": "#135",
        "full": "meltano/sdk#135"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2278</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 626416,
      "relative_position": -2052
    }
  ]
}
