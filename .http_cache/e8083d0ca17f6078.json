{
  "cookies": {
    "_cfuvid": "DYloF.O.q7Z9Q73Pgb3ML247.dC4ySuflLm9PJpiQnw-1747940895166-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:08:15.071570+00:00",
  "elapsed": 0.542047,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e99e02bbaac47-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:08:15 GMT",
    "ETag": "W/\"73cfbb4fefb6752ce6024777b53ffddc\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/123/issues?epic_iid=123&id=2524164&page=2&per_page=20>; rel=\"next\", <https://gitlab.com/api/v4/groups/2524164/epics/123/issues?epic_iid=123&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/123/issues?epic_iid=123&id=2524164&page=4&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=DYloF.O.q7Z9Q73Pgb3ML247.dC4ySuflLm9PJpiQnw-1747940895166-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-13-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-b",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"71a8f796e83633684ec3acabce09d706\",\"version\":\"1\"}",
    "x-next-page": "2",
    "x-page": "1",
    "x-per-page": "20",
    "x-prev-page": "",
    "x-request-id": "71a8f796e83633684ec3acabce09d706",
    "x-runtime": "0.342274",
    "x-total": "62",
    "x-total-pages": "4"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/123/issues"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/123/issues",
  "_decoded_content": [
    {
      "id": 108837194,
      "iid": 3514,
      "project_id": 7603319,
      "title": "Consider UX on meltano discover with Hub as SSOT",
      "description": "https://docs.meltano.com/reference/command-line-interface#discover is an okay experience when there are < 25 plugins available for a particular type. We're now going to have over 300 taps listed if a user does `meltano discover all` or `meltano discover extractors`.\n\nIs there something we can do that's quick for ~\"v2.0\" to make it better? I'm thinking:\n\n* Limit the number of results returned to ~30 and have a link to the Hub to learn more. \n* Update each plugin to actually link to the Hub, or at least display the link. \n\nI'm not sure of the long term utility of `meltano discover` in a world where we have the Hub, at least in its current state.\n\n@edgarrmondragon @aaronsteers",
      "state": "closed",
      "created_at": "2022-05-19T21:40:07.028Z",
      "updated_at": "2022-05-30T13:40:21.775Z",
      "closed_at": "2022-05-30T13:40:21.758Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3514",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3514",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3514/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3514/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3514",
        "relative": "#3514",
        "full": "meltano/meltano#3514"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1392897,
      "relative_position": -35397
    },
    {
      "id": 108400608,
      "iid": 3481,
      "project_id": 7603319,
      "title": "CLI tab-complete",
      "description": "Meltano uses the Python package Click for its CLI, which provides tab-complete/autocomplete as described here: https://click.palletsprojects.com/en/7.x/bashcomplete/\n\nIn particular, completion is provided for bash, zsh, and fish.\n\nFirst, generate the shell-specific `meltano-complete` script (using bash as an example):\n\n```sh\n_MELTANO_COMPLETE=source_bash meltano > meltano-complete.sh\n```\n\nThis script can be generated by us in CI, and included in the Meltano wheels or sdist. When Meltano is run, it should check if the completions have been installed by verifying that the completions file exists in the installation location. If they have not been installed, then it should install them (see below).\n\n### Installing shell completions\n\n#### fish\n\nThe Meltano completion script should be placed in `~/.config/fish/completions/`. From there it will be sourced automatically when a fish shell starts.\n\n#### bash\n\nThe situation around per-user tab-completion in bash is a bit messier. There are standard locations to add completion scripts for system-wide packages (installed as root), but we cannot use those without root permissions. [The bash-completion faq](https://github.com/scop/bash-completion/blob/master/README.md#faq) has this to say:\n\n> **Q. Where should I install my own local completions?**\n> \n> A. Put them in the `completions` subdir of `$BASH_COMPLETION_USER_DIR`\n   (defaults to `$XDG_DATA_HOME/bash-completion` or\n    `~/.local/share/bash-completion`\n   if `$XDG_DATA_HOME` is not set) to have them loaded automatically\n   on demand when the respective command is being completed.\n   See also the next question's answer for considerations for these\n   files' names, they apply here as well. Alternatively, you can write\n   them directly in `~/.bash_completion` which is loaded eagerly by\n   our main script.\n\n`$BASH_COMPLETION_USER_DIR` may not be defined. `$XDG_DATA_HOME` may also not be defined. The directory `~/.local/share/bash-completion` may not exist. I have confirmed that the following two commands results in the shell providing completions for the `meltano` command:\n\n```sh\nmkdir -p ${BASH_COMPLETION_USER_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/bash-completion}/completions\nmv meltano-complete.sh ${BASH_COMPLETION_USER_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/bash-completion}/completions/meltano\n```\n\nNow we more-or-less just need to translate the above two commands into Python.\n\n#### zsh\n\nI'm not yet sure how to handle this for zsh. We may have to put the file into `/usr/local/share/zsh-completions`, or some other directory listed in `$fpath`. I do have zsh available, but I do not have macOS running on any of my devices, so testing zsh completions in a realistic manner is a bit tricky. For instance, the default permissions of `/usr/local/share/zsh-completions` will be important for how we decide to handle this.\n\n### Upgrading shell completions\n\nThe shell completions provided by Click are dynamic, which is to say switching to different versions of Meltano requires no changes to the installed completions. As an example, if a new (sub-)command or flag is added, it'll automatically be picked up by the tab-completer.\n\nThis has obvious advantages, but is noticeably slow, and we may want to change how the completions work in the future e.g. if we switch from Click to something else.\n\nTo support changing how the completion script works, we can make it so that the installed completion script is a thin wrapper that locates the currently activate `meltano` installation (i.e. where the wheel was installed into), then sources a completion script from that location. Like that, one could upgrade Meltano, or switch virtual environments, and get all-new tab-completions.",
      "state": "closed",
      "created_at": "2022-05-11T21:26:31.991Z",
      "updated_at": "2022-05-30T13:37:15.593Z",
      "closed_at": "2022-05-30T13:37:15.563Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "Hack Day",
        "OKR: Improve New User Experience",
        "kind::Feature",
        "urgency::low",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [
        {
          "id": 1522656,
          "username": "WillDaSilva",
          "public_email": "will@willdasilva.xyz",
          "name": "Will Da Silva",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1522656/avatar.png",
          "web_url": "https://gitlab.com/WillDaSilva"
        }
      ],
      "author": {
        "id": 1522656,
        "username": "WillDaSilva",
        "public_email": "will@willdasilva.xyz",
        "name": "Will Da Silva",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1522656/avatar.png",
        "web_url": "https://gitlab.com/WillDaSilva"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1522656,
        "username": "WillDaSilva",
        "public_email": "will@willdasilva.xyz",
        "name": "Will Da Silva",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1522656/avatar.png",
        "web_url": "https://gitlab.com/WillDaSilva"
      },
      "user_notes_count": 6,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3481",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3481",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3481/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3481/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3481",
        "relative": "#3481",
        "full": "meltano/meltano#3481"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1361128,
      "relative_position": -34884
    },
    {
      "id": 108383105,
      "iid": 3477,
      "project_id": 7603319,
      "title": "Make logging profile selectable via meltano.yml",
      "description": "- The colors in logs sometimes are problematic.\n- Many users might want to customize logging but its not super easy or intuitive to know how to do so.\n\nAs discussed today in office hours.",
      "state": "closed",
      "created_at": "2022-05-11T16:14:54.952Z",
      "updated_at": "2022-05-30T13:36:49.357Z",
      "closed_at": "2022-05-30T13:36:49.323Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2136620,
        "iid": 176,
        "group_id": 2524164,
        "title": "Staging",
        "description": "",
        "state": "active",
        "created_at": "2021-07-07T19:00:49.676Z",
        "updated_at": "2021-07-07T19:00:49.676Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/176"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3477",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3477",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3477/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3477/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3477",
        "relative": "#3477",
        "full": "meltano/meltano#3477"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1356583,
      "relative_position": -34371
    },
    {
      "id": 107931623,
      "iid": 3459,
      "project_id": 7603319,
      "title": "Reconsider behavior when adding a custom plugin and utility of `--custom`",
      "description": "In https://gitlab.com/meltano/hub/-/issues/247+ @pnadolny13 and I were chatting about `--custom` for adding plugins. \n\nIn the new world where MeltanoHub is the SSOT for installable plugins, requiring a `--custom` flag may not be critical. \n\nWhen a user attempts to add a plugin that MeltanoHub isn't aware of, we could have two optional paths:\n\n* assume they're installing a custom plugin and prompt the user for relevant inputs\n* immediately fail and say something like \"plugin not found on MeltanoHub. Please check your inputs or re-run with `--custom` if this is a custom plugin\n\nI like the idea of the first option as it feels like a nicer experience. We could still keep the `--custom` flag for users which would essentially skip any network request to the Hub API and would just immediately drop them into the interactive setup.",
      "state": "closed",
      "created_at": "2022-05-03T14:56:12.155Z",
      "updated_at": "2022-05-30T13:35:06.881Z",
      "closed_at": "2022-05-30T13:35:06.862Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3459",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3459",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3459/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3459/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3459",
        "relative": "#3459",
        "full": "meltano/meltano#3459"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1335514,
      "relative_position": -33858
    },
    {
      "id": 106826307,
      "iid": 3415,
      "project_id": 7603319,
      "title": "Strip newlines from plugin pip urls on `meltano add`",
      "description": "As per #3393, adding a pip url with training newline characters (e.g. by using multi-line stings in YAML) causes formatting issues in `meltano.yml`. This can be solved in specific cases by removing multi-line strings from `discovery.yml` or in the general case by stripping leading and trailing newlines and whitespace from pip url strings during `meltano add`.",
      "state": "closed",
      "created_at": "2022-04-19T11:09:35.873Z",
      "updated_at": "2022-05-30T13:29:56.594Z",
      "closed_at": "2022-05-30T13:29:56.565Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3415",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3415",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3415/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3415/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3415",
        "relative": "#3415",
        "full": "meltano/meltano#3415"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1301613,
      "relative_position": -32319
    },
    {
      "id": 106802874,
      "iid": 3413,
      "project_id": 7603319,
      "title": "Consider other interactive CLI libraries",
      "description": "As raised by @kgpayne in https://gitlab.com/meltano/meltano/-/issues/3340#note_908510875.\n\n> Stumbled across [PyInquirer](https://github.com/CITGuru/PyInquirer) which would make developing interactive experiences in the CLI much easier. Seems to be looking for new maintainers, so we might not want to take a hard dependency on it, but it could definitely serve as inspiration for the kinds of things that are achievable.\n\n[PyInquirer](https://github.com/CITGuru/PyInquirer) may not be the ideal choice (it's not actively supported as of now) but it does appear to have a nice terminal-based UI, we could consider this or other similar libraries beyond the current `Click` interface.",
      "state": "closed",
      "created_at": "2022-04-19T01:03:22.070Z",
      "updated_at": "2022-05-30T13:29:43.742Z",
      "closed_at": "2022-05-30T13:29:43.723Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "urgency::low",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3413",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3413",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3413/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3413/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3413",
        "relative": "#3413",
        "full": "meltano/meltano#3413"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1301765,
      "relative_position": -33345
    },
    {
      "id": 105796183,
      "iid": 3365,
      "project_id": 7603319,
      "title": "Env variable : MELTANO_CLI_LOG_FORMATTER for switching between structured_plain or structured_color formatter.",
      "description": "### Problem to solve\n(Summarize the problem we are trying to solve in the form of we need to do [A], so that [B] can [C])\nSince with latest release, meltano supports structured_color logging by default. It is a nice feature but it creates issues when looking logs for example (aws cloudwatch) which doesn't support color formatting.\nAnd if we want to override the default setting we need to pass `logging.yaml` file\nSince we are already providing environment variable for log-level  `MELTANO_CLI_LOG_LEVEL` . Can we provide a variable in similar way for overriding the `structured_color` logging ? Like : `MELTANO_CLI_LOG_FORMATTER=structured_plain`\n\n### Target audience\n(For whom are we doing this? Include a persona)\nMany of us use meltano hosted on aws resources and for viewing logs we use cloudwatch and since cloudwatch doesn't support colour logging ,it introduces many garbage characters, which makes it very hard to understand the logs.\n\n### Further details\n(Include use cases, benefits, and/or goals)\nIt will help to set structured_plain by just passing a single variable .\n\n### Proposal\n(How are we going to solve the problem? Try to include the user journey)\n\nSince we are already providing environment variable for log-level  `MELTANO_CLI_LOG_LEVEL` . Can we provide a variable in similar way for overriding the `structured_color` logging ? Like : `MELTANO_CLI_LOG_FORMATTER=structured_plain`\n\n### What does success look like, and how can we measure that?\n(Define both the success metrics and acceptance criteria. Note that success metrics indicate the desired business outcomes, while acceptance criteria indicate when the solution is working correctly. If there is no way to measure success, link to an issue that will implement a way to measure this)\nIf the variable gives us functionality to switch between color and plain logging, this will be perfect.\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_",
      "state": "closed",
      "created_at": "2022-03-31T04:50:05.790Z",
      "updated_at": "2022-03-31T20:03:08.074Z",
      "closed_at": "2022-03-31T19:24:30.423Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "Awaiting Action::Author",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351603,
        "iid": 212,
        "group_id": 2524164,
        "title": "Q4-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:40:00.762Z",
        "updated_at": "2021-11-29T21:40:00.762Z",
        "due_date": "2022-12-31",
        "start_date": "2022-10-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/212"
      },
      "assignees": [],
      "author": {
        "id": 749696,
        "username": "Atif8Ted",
        "public_email": "",
        "name": "Atif Imam",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/dfe8b2b2688b10a71ede470b3d7958fb32cb72832150be0e51aa9c048b9ed983?s=80&d=identicon",
        "web_url": "https://gitlab.com/Atif8Ted"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3365",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3365",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3365/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3365/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3365",
        "relative": "#3365",
        "full": "meltano/meltano#3365"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1238903,
      "relative_position": -31293
    },
    {
      "id": 104916587,
      "iid": 3340,
      "project_id": 7603319,
      "title": "Add `--interactive` flag to `meltano add`",
      "description": "In reviewing internally in the team, a theoretical install script sample came up...\n\n```\n# Install\nmeltano add tap-gitlab\nmeltano add target-snowflake\nmeltano add superset\n\n...config...\n\n# Run\nmeltano run tap-gitlab target-snowflake superset\n```\n\nIn this above form, however, we haven't yet defined _how_ each plugin gets configured. If we build the feature in https://gitlab.com/meltano/meltano/-/issues/3227+, then we can use this form...\n\n```\n# Install\nmeltano add tap-gitlab\nmeltano add target-snowflake\nmeltano add superset\n\n# Config\nmeltano config tap-gitlab --interactive --all\nmeltano config target-snowflake --interactive --all\nmeltano config superset --interactive --all\n\n# Run\nmeltano run tap-gitlab target-snowflake superset\n```\n\nBut we could even take this one step further by adding an `--interactive` flag into the `add` command, so the entire installation and config can be handled interactively in one command per plugin.\n\n```\n# Install and config\nmeltano add tap-gitlab --interactive\nmeltano add target-snowflake --interactive\nmeltano add superset --interactive\n\n# Run\nmeltano run tap-gitlab target-snowflake superset\n```\n\nCc @tayloramurphy, @afolson, @DouweM\n\nThis is actually very analogous to the experience you get in Meltano UI: when adding a new extractor, Meltano installs the plugin and then immediately prompts the user for config information.",
      "state": "closed",
      "created_at": "2022-03-16T11:13:50.555Z",
      "updated_at": "2022-05-30T10:29:11.081Z",
      "closed_at": "2022-05-30T10:29:11.062Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3340",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3340",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3340/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3340/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3340",
        "relative": "#3340",
        "full": "meltano/meltano#3340"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1193613,
      "relative_position": -30780
    },
    {
      "id": 104868768,
      "iid": 3338,
      "project_id": 7603319,
      "title": "Just-in-time install during `meltano run`",
      "description": "### Problem to solve\n\nAs a user trying an existing Project locally, or a SaaS service receiving a copy of an established Meltano Project, it is time and resource consuming to run `meltano install` to install _all_ configured plugins to run a subset. To resolve this, it would be good to provide a mechanism whereby `meltano run` checks that the run plugins are installed before executing.\n\nThis may be used in conjunction with a 'lock' artefact to install pinned plugin versions (#3031) and detect upgrades (i.e. an incremented plugin version requiring install just-in-time, rather than needing to re-run `meltano install` either across the entire Project or with a plugin type or name arguments).\n\n### Target audience\n\n- New users to an existing Meltano Project\n- SaaS services executing `meltano run` from a copy (or shallow git checkout) of an existing Meltano Project in order to execute a specified run command.\n\n\n### Proposal\n\nToday, to run a single tap/target pair from an existing Project, a new user might:\n\n```sh\n# clone existing project\ngit clone https://gitlab.com/meltano/squared.git\n\n# install the desired extractor only\nmeltano install extractor tap-gitlab\n\n# install the desired loader only\nmeltano install loader target-snowflake\n\n# execute run command\nmeltano run --environment=prod tap-gitlab target-snowflake\n```\n\nThis would be reduced to simply:\n\n```sh\n# clone existing project\ngit clone https://gitlab.com/meltano/squared.git\n\n# execute run command _without_ previously installing\nmeltano run --environment=prod tap-gitlab target-snowflake\n```\n\nThe above would check to see if `tap-gitlab` and `target-snowflake` had been installed, discover that it hasn't and install it before executing the command.\n\n\n### What does success look like, and how can we measure that?\n\n- All plugins need not be installed to run a single pipeline/command.\n- The time-to-first pipeline execution is reduced for new users.\n- SaaS projects receiving Project files can execute commands without the computational and time penalties of a full install.\n\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_",
      "state": "closed",
      "created_at": "2022-03-15T17:45:41.925Z",
      "updated_at": "2022-05-30T10:28:56.207Z",
      "closed_at": "2022-05-30T10:28:56.190Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3338",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3338",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3338/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3338/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3338",
        "relative": "#3338",
        "full": "meltano/meltano#3338"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1242481,
      "relative_position": -31806
    },
    {
      "id": 104495633,
      "iid": 3324,
      "project_id": 7603319,
      "title": "When installing a custom extractor / loader, git repository URL points to Meltano gitlab namespace",
      "description": "This is a confusing user experience because users may try to install from a URL that does not exist. https://gitlab.com/meltano/meltano/-/blob/master/src/meltano/cli/utils.py#L119 is where this is getting printed. As a short-term fix we should make this much more generic.\n\n![Screen_Shot_2022-03-09_at_10.51.35_AM](/uploads/579f2f6eb1e74b2d519f5fdb0fc23733/Screen_Shot_2022-03-09_at_10.51.35_AM.png)",
      "state": "closed",
      "created_at": "2022-03-09T16:53:21.991Z",
      "updated_at": "2022-04-14T17:26:48.220Z",
      "closed_at": "2022-04-08T15:18:29.714Z",
      "closed_by": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "labels": [
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351598,
        "iid": 208,
        "group_id": 2524164,
        "title": "April 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-11-29T21:38:06.797Z",
        "updated_at": "2022-05-02T14:53:27.097Z",
        "due_date": "2022-04-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/208"
      },
      "assignees": [
        {
          "id": 4025463,
          "username": "cjohnhanson",
          "public_email": "",
          "name": "Cody Hanson",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
          "web_url": "https://gitlab.com/cjohnhanson"
        }
      ],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "user_notes_count": 2,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3324",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 1,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3324",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3324/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3324/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3324",
        "relative": "#3324",
        "full": "meltano/meltano#3324"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1174050,
      "relative_position": -30267
    },
    {
      "id": 104342102,
      "iid": 3318,
      "project_id": 7603319,
      "title": "Request a project name when none is passed to `meltano init`",
      "description": "",
      "state": "closed",
      "created_at": "2022-03-07T22:27:57.866Z",
      "updated_at": "2022-03-29T21:28:51.633Z",
      "closed_at": "2022-03-29T21:28:51.577Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "CLI",
        "flow::Review",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286179,
        "iid": 205,
        "group_id": 2524164,
        "title": "March 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:51.307Z",
        "updated_at": "2022-04-01T16:51:00.402Z",
        "due_date": "2022-03-31",
        "start_date": "2022-03-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/205"
      },
      "assignees": [
        {
          "id": 1942272,
          "username": "tayloramurphy",
          "public_email": "",
          "name": "Taylor A Murphy",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
          "web_url": "https://gitlab.com/tayloramurphy"
        }
      ],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3318",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3318",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3318/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3318/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3318",
        "relative": "#3318",
        "full": "meltano/meltano#3318"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1168529,
      "relative_position": -29754
    },
    {
      "id": 104126879,
      "iid": 3314,
      "project_id": 7603319,
      "title": "Invoke error message hard to follow when `env` key set to integer",
      "description": "<!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"regression\" or \"bug\" label and verify the issue you're about to submit isn't a duplicate.\n\nIf you are submitting an issue with a tap, please include:\n\n- account details\n- target details\n- entities selected  with meltano select (if you have selected any entities), as the bug may be related to a specific entity\n- the full elt command you are running\n- full output of the meltano elt command. Logs can get pretty long, so you can add the full log as a snippet in the Meltano project and add a link in the issue.\n--->\n\n### What is the current *bug* behavior?\n_What is happening now?_\n\nI set `PG_PORT` as an environment level `env` in my meltano.yml and forgot to quote the integer. I assume we'd say that they should always be quoted but the error logs were really hard to decrypt what the issue was. It just says `expected str, bytes or os.PathLike object, not int`.\n\n\n### What is the expected *correct* behavior?\n_What should be happening?_\n\nIt should either validate for this or catch the exception and try to give a better log message so I can fix it without having to read through the stack trace.\n\n### Steps to reproduce\n_How one can reproduce the issue?_\n\n```yaml\nplugins:\n  extractors:\n  - name: tap-gitlab\n    variant: meltanolabs\n    pip_url: git+https://github.com/MeltanoLabs/tap-gitlab.git\n    select:\n    - commits.id\n    - commits.project_id\n    - commits.created_at\n    - commits.author_name\n    - commits.message\n    - tags.*\n    - '!*.*_url'\n  loaders:\n  - name: target-postgres\n    variant: transferwise\n    pip_url: pipelinewise-target-postgres\n  orchestrators:\n  - name: airflow\n    pip_url: apache-airflow==2.1.2 --constraint https://raw.githubusercontent.com/apache/airflow/constraints-2.1.2/constraints-${MELTANO__PYTHON_VERSION}.txt\n  transformers:\n  - name: dbt\n    pip_url: 'dbt-core~=1.0.0 dbt-postgres~=1.0.0 dbt-redshift~=1.0.0 dbt-snowflake~=1.0.0\n      dbt-bigquery~=1.0.0\n\n      '\n  files:\n  - name: dbt\n    pip_url: git+https://gitlab.com/meltano/files-dbt.git@config-version-2\n  - name: airflow\n    pip_url: git+https://gitlab.com/meltano/files-airflow.git\nenvironments:\n- name: dev\n  config:\n    plugins:\n      extractors:\n      - name: tap-gitlab\n        config:\n          projects: meltano/meltano meltano/tap-gitlab\n          start_date: '2021-03-01T00:00:00Z'\n      loaders:\n      - name: target-postgres\n        config:\n          user: meltano\n          dbname: warehouse\n          default_target_schema: public\n      transformers:\n      - name: dbt\n        config:\n          target: postgres\n          source_schema: public\n  env:\n    PG_ADDRESS: localhost\n    PG_PORT: 5432\n    PG_USERNAME: meltano\n    PG_DATABASE: warehouse\n```\n\nThen I ran\n\n`meltano --log-level=debug --environment=dev invoke dbt:compile`\n\n\n### Relevant logs and/or screenshots\n_Please use code blocks (\\`\\`\\`) to format console output_\n\n```\n2022-03-04T17:13:08.705829Z [debug    ] expected str, bytes or os.PathLike object, not int \nTraceback (most recent call last):\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/meltano/cli/__init__.py\", line 47, in main\n    cli(obj={\"project\": None})\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/click/core.py\", line 829, in __call__\n    return self.main(*args, **kwargs)\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/click/core.py\", line 782, in main\n    rv = self.invoke(ctx)\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/click/core.py\", line 1259, in invoke\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/click/core.py\", line 1066, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/click/core.py\", line 610, in invoke\n    return callback(*args, **kwargs)\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/meltano/cli/params.py\", line 23, in decorate\n    return func(*args, **kwargs)\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/meltano/cli/params.py\", line 56, in decorate\n    func(project, *args, **kwargs)\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/meltano/cli/invoke.py\", line 88, in invoke\n    exit_code = run_async(\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/meltano/core/utils/__init__.py\", line 50, in run_async\n    loop.run_until_complete(future)\n  File \"/Users/pnadolny/.pyenv/versions/3.8.12/lib/python3.8/asyncio/base_events.py\", line 616, in run_until_complete\n    return future.result()\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/meltano/cli/invoke.py\", line 131, in _invoke\n    handle = await invoker.invoke_async(*plugin_args, command=command_name)\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/meltano/core/plugin_invoker.py\", line 393, in invoke_async\n    return await asyncio.create_subprocess_exec(\n  File \"/Users/pnadolny/.pyenv/versions/3.8.12/lib/python3.8/asyncio/subprocess.py\", line 236, in create_subprocess_exec\n    transport, protocol = await loop.subprocess_exec(\n  File \"/Users/pnadolny/.pyenv/versions/3.8.12/lib/python3.8/asyncio/base_events.py\", line 1630, in subprocess_exec\n    transport = await self._make_subprocess_transport(\n  File \"/Users/pnadolny/.pyenv/versions/3.8.12/lib/python3.8/asyncio/unix_events.py\", line 197, in _make_subprocess_transport\n    transp = _UnixSubprocessTransport(self, protocol, args, shell,\n  File \"/Users/pnadolny/.pyenv/versions/3.8.12/lib/python3.8/asyncio/base_subprocess.py\", line 36, in __init__\n    self._start(args=args, shell=shell, stdin=stdin, stdout=stdout,\n  File \"/Users/pnadolny/.pyenv/versions/3.8.12/lib/python3.8/asyncio/unix_events.py\", line 789, in _start\n    self._proc = subprocess.Popen(\n  File \"/Users/pnadolny/.pyenv/versions/3.8.12/lib/python3.8/subprocess.py\", line 858, in __init__\n    self._execute_child(args, executable, preexec_fn, close_fds,\n  File \"/Users/pnadolny/.pyenv/versions/3.8.12/lib/python3.8/subprocess.py\", line 1628, in _execute_child\n    env_list.append(k + b'=' + os.fsencode(v))\n  File \"/Users/pnadolny/.pyenv/versions/3.8.12/lib/python3.8/os.py\", line 806, in fsencode\n    filename = fspath(filename)  # Does type-checking of `filename`.\nTypeError: expected str, bytes or os.PathLike object, not int\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/pnadolny/.virtualenvs/meltano_project/lib/python3.8/site-packages/meltano/cli/__init__.py\", line 55, in main\n    raise CliError(str(err)) from err\nmeltano.cli.utils.CliError: expected str, bytes or os.PathLike object, not int\nexpected str, bytes or os.PathLike object, not int\n```\n\n\n### Possible fixes\n_If you can, link to the line of code that might be responsible for the problem or suggest a fix_\n\n\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team",
      "state": "closed",
      "created_at": "2022-03-04T17:32:22.317Z",
      "updated_at": "2022-05-30T10:25:57.184Z",
      "closed_at": "2022-05-30T10:25:57.157Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3314",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3314",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3314/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3314/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3314",
        "relative": "#3314",
        "full": "meltano/meltano#3314"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1164454,
      "relative_position": -29241
    },
    {
      "id": 102950448,
      "iid": 3282,
      "project_id": 7603319,
      "title": "--debug-level=True help function didn't help a new Meltano user",
      "description": "Was just debugging meltano with a new Meltano user. They hit an exception with tap-csv, had the standard \"failed while in discovery\" which pointing to logs (which they found), and then they tried to run with --log-level=DEBUG but it wasn't clear where to put --log-level=DEBUG so they did something like this\n\n`meltano elt tap-csv target-jsonl --job-id=abc --log-level=DEBUG`\n\nEasy fix is to probably just extend the message a bit to give an example of where to put --log-level? Easy MR to make but not sure if you'll agree!",
      "state": "closed",
      "created_at": "2022-02-23T19:07:44.114Z",
      "updated_at": "2022-03-03T22:01:59.217Z",
      "closed_at": "2022-03-03T22:01:59.160Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "Community-Contributed MR",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286179,
        "iid": 205,
        "group_id": 2524164,
        "title": "March 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:51.307Z",
        "updated_at": "2022-04-01T16:51:00.402Z",
        "due_date": "2022-03-31",
        "start_date": "2022-03-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/205"
      },
      "assignees": [
        {
          "id": 5562019,
          "username": "vischous",
          "public_email": "",
          "name": "Derek Visch",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
          "web_url": "https://gitlab.com/vischous"
        }
      ],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "user_notes_count": 10,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3282",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 1,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3282",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3282/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3282/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3282",
        "relative": "#3282",
        "full": "meltano/meltano#3282"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1143540,
      "relative_position": -28215
    },
    {
      "id": 102943431,
      "iid": 3281,
      "project_id": 7603319,
      "title": "When testing/debugging a tap in Meltano, difficult to see \"just\" the tap logs",
      "description": "As raised by Aaron in Office Hours...",
      "state": "closed",
      "created_at": "2022-02-23T17:15:40.179Z",
      "updated_at": "2022-05-30T10:22:02.975Z",
      "closed_at": "2022-05-30T10:22:02.956Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "UX",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3281",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3281",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3281/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3281/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3281",
        "relative": "#3281",
        "full": "meltano/meltano#3281"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1143664,
      "relative_position": -28728
    },
    {
      "id": 102881124,
      "iid": 3271,
      "project_id": 7603319,
      "title": "Set image for containers at plugin level with command specific overrides if necessary",
      "description": "",
      "state": "closed",
      "created_at": "2022-02-22T18:00:28.300Z",
      "updated_at": "2022-05-30T10:20:47.810Z",
      "closed_at": "2022-05-30T10:20:47.790Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3271",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3271",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3271/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3271/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3271",
        "relative": "#3271",
        "full": "meltano/meltano#3271"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1140188,
      "relative_position": -27702
    },
    {
      "id": 102292357,
      "iid": 3242,
      "project_id": 7603319,
      "title": "Improve plugin command error message to clarify usage syntax",
      "description": "Related to https://gitlab.com/meltano/meltano/-/issues/3237#note_840251651 where @kgpayne said:\n\n>Due to our custom syntax for commands, using the executable name is going to be equally jarring when users get to executing `meltano invoke great_expectations:checkpoint`, which is not functionality of the `great_expectations` executable.\n\nI had a recent experience that I could see tripping people up. I wanted to use `dbt docs generate` and `dbt docs serve` which are not supported as `dbt:x` syntax because its not listed in the [discovery.yml](https://gitlab.com/meltano/meltano/-/blob/master/src/meltano/core/bundle/discovery.yml#L3073). This does not work:\n\n```\nmeltano invoke dbt:docs generate\n```\nSo I was thinking about adding an extra command to the plugin config like `docs_generate` that runs `docs generate` under the hood but then I realized that this works:\n\n```\nmeltano invoke dbt docs generate\n```\n\nI'm not sure this is a problem but with such a minor difference in syntax I could see it becoming confusing whether your running a meltano command or raw command directly to the package. On one hand its great to allow commands to pass through so all the functionality is preserved but on the other its not clear in what context the command is being run. Maybe just having a warning that a \"pass through\" command is being used would be helpful, idk but wanted to call it out.",
      "state": "closed",
      "created_at": "2022-02-11T19:38:48.785Z",
      "updated_at": "2022-05-30T10:17:14.599Z",
      "closed_at": "2022-05-30T10:17:14.581Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 15,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3242",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3242",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3242/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3242/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3242",
        "relative": "#3242",
        "full": "meltano/meltano#3242"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1115968,
      "relative_position": -27189
    },
    {
      "id": 102170275,
      "iid": 3227,
      "project_id": 7603319,
      "title": "Add `--interactive --all` CLI flags in `meltano config set`",
      "description": "Based on recent discussions around the difficulties in knowing _which_ settings to configure when adding a new plugin, we should add an interactive mode for setting all setting for a plugin, or any specific settings value.\n\nSomething like...\n\n```console\n> meltano config dbt-snowflake set --interactive --all\n\nYou are now configuring the \"dbt-snowflake\" transformer plugin.\nFor help, please refer to plugin documentation: https://...\n\nWe will now step through each setting. Leave any entry blank to skip, \nor enter a new value. Password values will automatically be hidden \nfrom display for any settings of type 'password'.\n\nPress Ctrl+C to cancel at any time.\n\nSetting #1: project_dir\nDescription: The root dbt path.\nType: string\nDefault value: $MELTANO_PROJECT_ROOT/transform\nCurrent value: (none)\nNew Value: _ \n\n(skipped)\n\n....\n\nSetting #7: snowflake_user\nDescription: The username to use in Snowflake authentication.\nType: string\nDefault value: (none)\nCurrent value: (none)\nNew Value: snowflake_prod_user\n\nValue saved successfully to meltano.yml!\n\nSetting #8: snowflake_password\nDescription: The password to use in Snowflake authentication.\nType: password\nDefault value: $MELTANO_PROJECT_ROOT/transform\nCurrent value: (none)\nNew Value: ********** \n\nValue saved successfully to Meltano System DB!\n\n```\n\n## Spec Details\n\n- Interactive behavior is triggered bia the `--interactive` flag in `meltano config ... set`.\n- Interactive behavior can be triggered for a single setting or with `--all` to set all settings associated with the given plugin.\n- The `--all` option _requires_ the `--interactive` flag. If `--all` is specified without `--interactive`, Meltano should fail.\n- After each setting is set, Meltano should respond with `Value saved successfully to _<store>_!`\n  - The store could be `.env`, the SystemDB, or to Meltano.yml.\n  - Confirming and saving after each setting is set gives real-time feedback to the user about changes they have applied, and allows the remaining operation to be canceled without loss of any setting values already saved.\n- Individual settings should be skippable.\n- Password fields should either print asterisks or simply not echo anything while users are typing.\n- The new setting value should not be provided inline at the command line if `--interactive` is set. So, passing the setting value and also passing `--interactive` should cause Meltano to fail.\n\n## Ability to \"skip\" settings\n\nSkipping a setting may not be intuitive if done inline with the setting value input.\n\n```\nSetting #1: project_dir\nDescription: The root dbt path.\nType: string\nDefault value: $MELTANO_PROJECT_ROOT/transform\nCurrent value: (none)\nWould you like to set a new value? [Y/n]: n\n\nSkipped.\n\nSetting #2: snowflake_user\nDescription: The username to use in Snowflake authentication.\nType: string\nDefault value: (none)\nCurrent value: (none)\nWould you like to set a new value? [Y/n]: Y\nNew Value? []: snowflake_prod_user\n\nValue saved successfully to meltano.yml!\n\n...\n```\n\nWithout a separate prompt to skip or set the value, the user would generally have to type something like an empty string or `s` for skip, or similar. However, those are potentially valid answers to the new value prompt.\n\n## Phases\n\n- The initial merge should at minimum provide `--all --interactive` support.\n- Optionally, setting only one value (`--interactive` without `--all`) can be included in initial scope or added in a subsequent iteration.\n  - When setting only a single value, presumably we do not need to allow the \"skip\" option described above, since the user can simply abort (`ctrl+c`) to cancel if they do not want the value set.\n- Not required in this first iteration, but a future iteration should require users to first define a setting's type if the type is not yet set. Would be a path for resolving #2768+. For example, if the user runs `meltano config tap-snowflake set --interactive snowflake_password`, that should require the user to _first_ define the setting `kind` (kind is `password` in this case), which then drives correct parsing and storage of the provided value.",
      "state": "closed",
      "created_at": "2022-02-09T21:01:33.149Z",
      "updated_at": "2022-05-30T10:15:26.269Z",
      "closed_at": "2022-05-30T10:15:26.247Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Configuration",
        "OKR: Improve New User Experience",
        "Office Hours::Discussed",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 26,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3227",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3227",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3227/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3227/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3227",
        "relative": "#3227",
        "full": "meltano/meltano#3227"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": {
        "id": 56419,
        "iid": 59,
        "sequence": 6,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.849Z",
        "updated_at": "2022-06-20T00:05:02.366Z",
        "start_date": "2022-06-13",
        "due_date": "2022-06-19",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56419"
      },
      "health_status": null,
      "epic_issue_id": 1110148,
      "relative_position": -26676
    },
    {
      "id": 102024482,
      "iid": 3223,
      "project_id": 7603319,
      "title": "Consider a Meltano VS Code extension",
      "description": "As a more robust version of https://gitlab.com/meltano/meltano/-/issues/1151+, and as a VS Code native alternative to #3201+, we could create a VS Code extension for Meltano.\n\nSome functions this extension could perform:\n\n1. Provide a graphical editor for `Meltano.yml`.\n2. Provide a clickable UI for `meltano elt`.\n3. Provide a graphical \"add extractor\" interface, including search results from `hub.meltano.com` if the plugin is not yet in `discovery.yml.\n4. ....",
      "state": "closed",
      "created_at": "2022-02-07T22:00:19.417Z",
      "updated_at": "2022-05-30T10:14:55.685Z",
      "closed_at": "2022-05-30T10:14:55.667Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3223",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3223",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3223/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3223/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3223",
        "relative": "#3223",
        "full": "meltano/meltano#3223"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1103416,
      "relative_position": -26163
    },
    {
      "id": 102010276,
      "iid": 3221,
      "project_id": 7603319,
      "title": "Add namespacing to Meltano test CLI to avoid plugin name clashes",
      "description": "As per [this discussion](https://gitlab.com/meltano/meltano/-/issues/3190#note_834195417) it is possible that `meltano test <plugin name>` might find two plugins of different types with the same name.\n\nTo remove this risk, we could support invocations via an unambiguous/fully-qualified form `meltano test <plugin type>.<plugin name>`",
      "state": "closed",
      "created_at": "2022-02-07T16:30:01.631Z",
      "updated_at": "2022-05-30T10:14:41.155Z",
      "closed_at": "2022-05-30T10:14:41.117Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3221",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3221",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3221/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3221/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3221",
        "relative": "#3221",
        "full": "meltano/meltano#3221"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1102673,
      "relative_position": -25137
    },
    {
      "id": 102008616,
      "iid": 3219,
      "project_id": 7603319,
      "title": "Meltano should know plugin type based on its name for discoverable plugins",
      "description": "If users are adding discoverable plugins, they shouldn't have to specify the plugin type:\n\n```\nmeltano add tap-gitlab\nmeltano add target-snowflake\nmeltano add dbt\nmeltano add airflow\nmeltano add great_expectations\nmeltano add superset\n```\n\nis a much better experience than\n\n```\nmeltano add extractor tap-gitlab\nmeltano add loader target-snowflake\nmeltano add transformer dbt\nmeltano add orchestrator airflow\nmeltano add utility great_expectations # or whatever the plugin type is\nmeltano add utility superset # or whatever the plugin type is\n```\n\nFor plugins that have a name collision we could prompt to specify the type.",
      "state": "closed",
      "created_at": "2022-02-07T16:07:27.577Z",
      "updated_at": "2022-05-30T10:14:26.703Z",
      "closed_at": "2022-05-30T10:14:26.650Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3219",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3219",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3219/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3219/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3219",
        "relative": "#3219",
        "full": "meltano/meltano#3219"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 123,
      "epic": {
        "id": 338495,
        "iid": 123,
        "title": "Improve CLI User Experience",
        "url": "/groups/meltano/-/epics/123",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1102213,
      "relative_position": -24624
    }
  ]
}
