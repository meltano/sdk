{
  "cookies": {
    "_cfuvid": "GO6cIHILHl5kmiVDHd4GGGqeX83uAosOpr86Mvmd3wE-1747940864436-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:07:44.357829+00:00",
  "elapsed": 0.557158,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e99200dbaa0a0-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:07:44 GMT",
    "ETag": "W/\"a1ad608cffa188d6f337502385459e74\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/139/issues?epic_iid=139&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/139/issues?epic_iid=139&id=2524164&page=1&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=GO6cIHILHl5kmiVDHd4GGGqeX83uAosOpr86Mvmd3wE-1747940864436-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-09-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-d",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"cafbe077674efb49b0a53cfea32367e7\",\"version\":\"1\"}",
    "x-next-page": "",
    "x-page": "1",
    "x-per-page": "20",
    "x-prev-page": "",
    "x-request-id": "cafbe077674efb49b0a53cfea32367e7",
    "x-runtime": "0.336906",
    "x-total": "16",
    "x-total-pages": "1"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/139/issues"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/139/issues",
  "_decoded_content": [
    {
      "id": 106973175,
      "iid": 242,
      "project_id": 25921808,
      "title": "hub.meltano.com availability",
      "description": "Pingdom has been reporting issues with availability of https://hub.meltano.com intermittently but somewhat frequently (once or twice a day, every few days). I don't think this is just an issue with Pingdom being \"noisy\" as I actually also ran into a very short/transient issue this morning around the same time as Pingdom (timeout).\n\nThe events (going by pingdom notifications in slack and my experience this morning) are very short-lived, so might be worth checking if we can just decrease the pingdom sensitivity (e.g. only alert if unavailable for more than a few minutes), its not ideal but in the short term would help prevent us from becoming to desensitized from hub alerts. So that if a real outage occurs we respond to the alert and investigate it in a timely manner rather than missing it thinking \"oh its just pingdom complaining about hub again\".\n\nIt's probably too soon and the issues infrequent enough to deal with a migration off-of Pages, but is it worth poking Gitlab about these events?",
      "state": "closed",
      "created_at": "2022-04-21T13:53:05.555Z",
      "updated_at": "2022-05-31T18:53:20.735Z",
      "closed_at": "2022-05-31T18:53:20.710Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Risk",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": true,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/242",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/242",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/242/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/242/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#242",
        "relative": "#242",
        "full": "meltano/hub#242"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1309699,
      "relative_position": -47709
    },
    {
      "id": 106935051,
      "iid": 241,
      "project_id": 25921808,
      "title": "Render 'stats' REST API data in Hub web pages",
      "description": "",
      "state": "closed",
      "created_at": "2022-04-20T21:24:51.924Z",
      "updated_at": "2022-05-29T21:32:36.989Z",
      "closed_at": "2022-05-29T21:32:36.969Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/241",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/241",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/241/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/241/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#241",
        "relative": "#241",
        "full": "meltano/hub#241"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1309689,
      "relative_position": -47196
    },
    {
      "id": 106043887,
      "iid": 226,
      "project_id": 25921808,
      "title": "Hub SSOT - File Bundle Versioning",
      "description": "Currently file bundles are installed based on matching naming conventions. Moving forward we'd like it to be more explicit and handle compatible versions better. As outlined by @aaronsteers in https://gitlab.com/meltano/hub/-/merge_requests/226#note_898114534.\n\n\n> Currently:\n> \n> * Any file bundle that matches a plugin name exactly gets installed automatically along with that plugin.\n> * File bundles can also be installed manually/explicitly.\n> \n> In the future:\n> \n> 1. Probably we should create a direct link between the plugin definition and optionally one or more files bundles that it should be installed with.\n> 1. In the case of dbt, for example, this probably is declared using one of the following:\n>    1. the main `dbt` plugin declares a dependency on the files-dbt *repo*. Perhaps not ideal because there's no 'plugin definition' in this case.\n>    1. the main `dbt` plugin lists plugin dependencies (including files bundles) using their keys: `{ 'type': 'files', 'name': 'dbt', 'variant': 'meltano'}`. Basically this is a list of the primary keys needed to find the `ref` in the index.\n>    1. then main `dbt` plugin has something like `{'dependencies': 'files': ['name': 'dbt', 'variant': 'meltano']}`. This is parallel to how we define plugins in discovery.yml today, only more sparse. The plugin type is 'files' in this example but in theory it could be any plugin type(s).\n> 1. The declaration method doesn't have to dictate how this is exposed in the API. The API might render the above info simply as: `{'dependencies': ['ref': 'https://'], ['ref': 'https://']}` and point to one or more detail API endpoints.",
      "state": "closed",
      "created_at": "2022-04-04T15:17:10.734Z",
      "updated_at": "2022-05-29T21:31:07.615Z",
      "closed_at": "2022-05-29T21:31:07.598Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/226",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/226",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/226/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/226/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#226",
        "relative": "#226",
        "full": "meltano/hub#226"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1267902,
      "relative_position": -46683
    },
    {
      "id": 105779416,
      "iid": 224,
      "project_id": 25921808,
      "title": "Implement Meltano Plugin Discovery API",
      "description": "- Index: All plugins without details i.e. `/meltano/api/v1/plugins`\n- Details: A variant level detail endpoint i.e. `/meltano/api/v1/plugins/extractors/tap-google-analytics--meltanolabs`",
      "state": "closed",
      "created_at": "2022-03-30T18:48:07.809Z",
      "updated_at": "2022-04-07T20:35:19.043Z",
      "closed_at": "2022-04-06T21:00:45.073Z",
      "closed_by": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "labels": [
        "OKR: Be the DataOps OS",
        "Office Hours::Up Next",
        "Roadmap",
        "flow::Review",
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2351598,
        "iid": 208,
        "group_id": 2524164,
        "title": "April 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-11-29T21:38:06.797Z",
        "updated_at": "2022-05-02T14:53:27.097Z",
        "due_date": "2022-04-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/208"
      },
      "assignees": [
        {
          "id": 8668050,
          "username": "pnadolny13",
          "public_email": "",
          "name": "Pat Nadolny",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
          "web_url": "https://gitlab.com/pnadolny13"
        }
      ],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "user_notes_count": 1,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/224",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/224",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/224/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/224/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#224",
        "relative": "#224",
        "full": "meltano/hub#224"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1240267,
      "relative_position": -46170
    },
    {
      "id": 105434666,
      "iid": 223,
      "project_id": 25921808,
      "title": "Hub SSOT - Do we want to support package + metadata versioning?",
      "description": "First proposed in https://gitlab.com/meltano/hub/-/issues/180.\n\nIf we allow users to pin a version of their package, they need to be able to pin the metadata at that point in time too as metadata changes with the code. If a user has a 0.9.0 package version installed and a breaking change (say a new required setting was added) was introduced to the 1.0.0 (latest) version along with metadata updates, they cant just pull the latest metadata or their pipeline will break.\n\nThis may be resolved by the lock mechanism https://gitlab.com/meltano/meltano/-/issues/3031 but we should decide if we only want to the hub to represent the \"latest\" or \"current\" metadata.\n\nThis decision affects the way we implement the V2 API and the organization of the files in the hub.",
      "state": "closed",
      "created_at": "2022-03-24T14:17:25.538Z",
      "updated_at": "2022-05-29T21:30:50.254Z",
      "closed_at": "2022-05-29T21:30:50.243Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 10,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/223",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/223",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/223/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/223/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#223",
        "relative": "#223",
        "full": "meltano/hub#223"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1225815,
      "relative_position": -43605
    },
    {
      "id": 105433139,
      "iid": 222,
      "project_id": 25921808,
      "title": "Hub SSOT - How we blend the current discovery.yml and the current singer spec yaml files",
      "description": "We want to the V2 hub API to serve both the current discovery contents and the Singer definitions, to do that we need to blend the two schemas into a generic shared schema for all plugins.\n\nThings to consider:\n- Extra Singer metadata `meltano_sdk`, `maintenance_status`, etc.\n- Singer definitions are missing settings and group validations in many cases\n- Singer definitions dont have a schema version like the discovery does",
      "state": "closed",
      "created_at": "2022-03-24T13:54:43.176Z",
      "updated_at": "2022-05-29T21:30:44.149Z",
      "closed_at": "2022-05-29T21:30:44.141Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/222",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/222",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/222/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/222/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#222",
        "relative": "#222",
        "full": "meltano/hub#222"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1225816,
      "relative_position": -44118
    },
    {
      "id": 105432375,
      "iid": 221,
      "project_id": 25921808,
      "title": "Hub SSOT - How MeltanoHub stores vs renders the API payloads",
      "description": "The current V1 hub API just basically serializes the raw taps and target metadata files as 1 large json and serves it up.\n\nFor the V2 endpoint depending on our implementation strategy we might find it better to decouple the file format and organization of the plugin definitions from the way that we serve the data. The hub files serve multiple purposes that might conflict: API data source, static site data source, organized for easy community maintenance and contribution.\n\n\nFor example (just for illustrating my point) we might find that for easier maintenance and contribution we want to split the files into directories and maybe theres a top level definition that is shared by all variants and each variant definition is its own file, later compiled by the API file generator to meet the API payload schema we want.\n\n```\nextractors/\n    tap-csv/\n        base.yml\n        meltanolabs/\n            variant.yml\n        meltano/\n            variant.yml\n    tap-postgres/\n        ...\n```\n\nThe point is that we have the option to decouple the files from the API payload, and each have different goals (maintenance/contribution vs serving the front end static site vs API for serving an application efficiently).",
      "state": "closed",
      "created_at": "2022-03-24T13:45:23.033Z",
      "updated_at": "2022-05-29T21:30:37.515Z",
      "closed_at": "2022-05-29T21:30:37.503Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/221",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/221",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/221/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/221/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#221",
        "relative": "#221",
        "full": "meltano/hub#221"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1225817,
      "relative_position": -44631
    },
    {
      "id": 105431411,
      "iid": 220,
      "project_id": 25921808,
      "title": "Hub SSOT - How Meltano consumes the V2 MeltanoHub API",
      "description": "If Meltano is to use the hub's API for retrieving plugin metatdata, we need to flesh out the consumption patterns so we can customize the API to serve the right data in the right format.",
      "state": "closed",
      "created_at": "2022-03-24T13:33:09.332Z",
      "updated_at": "2022-05-29T21:30:31.502Z",
      "closed_at": "2022-05-29T21:30:31.491Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/220",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/220",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/220/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/220/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#220",
        "relative": "#220",
        "full": "meltano/hub#220"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1225818,
      "relative_position": -45144
    },
    {
      "id": 105431236,
      "iid": 219,
      "project_id": 25921808,
      "title": "Hub SSOT - Implementation Strategy",
      "description": "There are lots of moving parts for getting the Hub to act as the SSOT for Meltano. We need to decide on an implementation strategy so the timing works out and we have a smooth migration.\n\nThings like:\n- a new API endpoint for serving discovery data\n- transitioning Meltano to consume from the hub vs a discovery data\n- a new plugin schema that all plugins can conform to plugin.yml\n- updating the hub Singer metadata files to conform to a new plugin.yml\n- updating the hub front end when the file format and organization changes\n- probably a lot more too..\n\n@aaronsteers wdyt?",
      "state": "closed",
      "created_at": "2022-03-24T13:31:16.877Z",
      "updated_at": "2022-05-29T21:30:25.844Z",
      "closed_at": "2022-05-29T21:30:25.821Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 21,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/219",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/219",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/219/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/219/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#219",
        "relative": "#219",
        "full": "meltano/hub#219"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1225819,
      "relative_position": -45657
    },
    {
      "id": 104765603,
      "iid": 214,
      "project_id": 25921808,
      "title": "Ability to register modular, fully-working Meltano projects/subprojects on the Hub",
      "description": "We'd like community members to be able to submit Meltano data. This is analogous with \"Data-Stack-in-a-Box\", whcih users could download as their \"starter project\" or they could be added as subprojects within a larger data project.\n\nUnlike dbt Hub packages and unlike Meltano's existing `transform` packages:\n\n- The project contains a full `meltano.yml`.\n- EL is included, paired with a working extractor, and filtered for the data that is needed.\n- dbt transforms are included.\n- Basic analytics and validations are built into the project.\n\nExample use cases:\n\n- Strava-based project for anyone to analyze their fitness history.\n- Salesforce-based project for anyone to get up-and-running quickly with Salesforce analytics.\n- Spotify-based project for anyone to understand their music history.",
      "state": "closed",
      "created_at": "2022-03-14T11:55:36.760Z",
      "updated_at": "2022-05-29T21:29:55.115Z",
      "closed_at": "2022-05-29T21:29:55.093Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "OKR: Improve New User Experience",
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2590665,
        "iid": 218,
        "group_id": 2524164,
        "title": "July 2022",
        "description": "",
        "state": "active",
        "created_at": "2022-05-02T14:52:41.200Z",
        "updated_at": "2022-05-02T14:52:41.200Z",
        "due_date": "2022-07-31",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/218"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 10,
      "merge_requests_count": 0,
      "upvotes": 3,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/214",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/214",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/214/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/214/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#214",
        "relative": "#214",
        "full": "meltano/hub#214"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1188320,
      "relative_position": -43092
    },
    {
      "id": 104632688,
      "iid": 213,
      "project_id": 25921808,
      "title": "Can a single org have more than one represented variant",
      "description": "Wanted to log this question as related to the new tap-gitlab port. I created the new port as a fresh branch under the MeltanoLabs GitHub project. I'm not sure if I'll be able to 100% match the prior behavior and at the same time, the tap can be \"working\" well for newer user cases.\n\nThe ideal delivery mechanism is probably to get _reasonable_ amount of backwards compatibility but not 100%, and then publish as a variant name like `meltanolabs-2` or similar. This would be a break from our current naming though, since the variant names today are expected to be exactly the same as the org name in GitHub or GitLab.\n\n@tayloramurphy - Thoughts on this?",
      "state": "closed",
      "created_at": "2022-03-11T17:28:32.391Z",
      "updated_at": "2022-05-29T21:29:49.165Z",
      "closed_at": "2022-05-29T21:29:49.150Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "Office Hours::To Discuss",
        "kind::Feature",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/213",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/213",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/213/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/213/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#213",
        "relative": "#213",
        "full": "meltano/hub#213"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1179673,
      "relative_position": -42579
    },
    {
      "id": 104076430,
      "iid": 207,
      "project_id": 25921808,
      "title": "Discrepancy between SDK-native `capabilities`  and those defined in SDK-based taps/targets `.yml` files",
      "description": "## Summary\nSome SDK-based taps/targets have defined `capabilites` that do not include those supported by the SDK version they were created with at a minimum.\n\nCurrently, it is up to the contributor to specify the `capabilities` their tap or target supports. This is necessary for non-SDK based taps/targets, but not for SDK-based taps/targets since the SDK supports a number of `capabilities` out of the box.\n\n## Fix for current taps/targets\nCreate a script to find all SDK-based taps/targets and append any missing `capabilities` the SDK version it was created with supports.\n\n### Basic script draft\n*(start from `_data/taps` and `_data/targets`)*\n\nFor each SDK-based tap/target (`meltano_sdk: true`):\n  1. Get `type` (`tap` or `target`)\n  1. Get `pip_url`\n  1. Get current `capabilities`\n  1. Create virtual environment\n  1. Install tap/target from `pip_url`\n  1. Run Python script `sdk_capabilities_as_csv.py`\n  1. Update tap/target existing `capabilities` with those from script CSV output\n\n```py\n# sdk_capabilities_as_csv.py\n# Usage: python3 sdk_capabilities_as_csv.py <plugin-type>\n\nimport sys\nimport singer_sdk\n\n\ndef get_plugin_type_class(plugin_type: str) -> singer_sdk.PluginBase:\n    try:\n        if plugin_type == \"tap\":\n            return singer_sdk.Tap\n\n        elif plugin_type == \"target\":\n            return singer_sdk.Target\n\n        print(f\"'{plugin_type}' is not a supported plugin type\", file=sys.stderr)\n\n    except AttributeError:\n        print(f\"'{plugin_type}' is not supported in this SDK version\", file=sys.stderr)\n\n    print(\"Falling back to base plugin capabilities\", file=sys.stderr)\n    return singer_sdk.PluginBase\n\ndef as_csv(values: list) -> str:\n    return \",\".join([str(v) for v in values])\n\nif __name__ == \"__main__\":\n    try:\n        plugin_type = sys.argv[1]\n    except IndexError:\n        exit(\"Plugin type argument required\")\n\n    plugin_type_class = get_plugin_type_class(plugin_type)\n    print(as_csv(plugin_type_class.capabilities))\n\n```\n\n## Fix for future taps/targets\nCreate some kind of pre-commit hook or CI step to automatically infer a tap/target's `capabilites`. This could be achieved using [`--about`](https://sdk.meltano.com/en/latest/cli_commands.html#package-information) and might apply to other fields, such as `name` and `settings`:\n\n```\npoetry run sdk-tap-countries-sample --about --format json\n```\n```json\n{\n  \"name\": \"sample-tap-countries\",\n  \"version\": \"[could not be detected]\",\n  \"sdk_version\": \"0.3.5\",\n  \"capabilities\": [\n    \"sync\",\n    \"catalog\",\n    \"state\",\n    \"discover\"\n  ],\n  \"settings\": {\n    \"type\": \"object\",\n    \"properties\": {}\n  }\n}\n```\n\nThis would only be available to taps/targets created using SDK version [`0.3.11`](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) or later, however.",
      "state": "closed",
      "created_at": "2022-03-03T23:42:37.418Z",
      "updated_at": "2022-05-29T21:29:13.362Z",
      "closed_at": "2022-05-29T21:29:13.341Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Bug",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 8647943,
        "username": "ReubenFrankel",
        "public_email": "",
        "name": "ReubenFrankel",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/5f4b411a2c37f2176752600b5d2e3f64627c23a48d0cd13cf25ae1d188956a18?s=80&d=identicon",
        "web_url": "https://gitlab.com/ReubenFrankel"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/207",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/207",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/207/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/207/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#207",
        "relative": "#207",
        "full": "meltano/hub#207"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1163900,
      "relative_position": -42066
    },
    {
      "id": 102960850,
      "iid": 203,
      "project_id": 25921808,
      "title": "Translate all tap and target yaml files on the Hub to meltano discovery.yml format",
      "description": "<details><summary>Click to expand (prior description)</summary>\n\nFollowing on the ideas in #196+ and towards the goal of #192+, we will move to a single yaml format and deprecate one of the two formats.\n\n~~If there's anything Meltano specific that doesn't make sense in a generic definition:~~\n\n1. ~~First of all: why? Seems like we should just have a single definition that services the entire community. Special use cases and plugs should probably be avoided, or they should be written in a generic way that works for another orchestrator solving the same problems.~~\n2. ~~If there are any \"special Meltano hooks\" that we just can't let go of, can they go into something like `extras:` or `meta:` collection that has vendor-specific implementation details? (Similar to dbt.)~~\n\nNotes:\n\n- Having just a single file layout streamlines the process of adding new plugins and gives us a path forward for the Meltano installation process.\n- In this scenario, the Meltano yaml parser will need to support parsing the new standard file formats but this is basically needed anyway.\n\n</details>\n\nConsidering Utility plugins as a priority in Q2 and Q3, we likely wouldn't be able to fit everything in the new Singer-specific format. We're pausing any new investments into the Singer-specific format for now and sticking instead with an iteration of the `meltano.yml`/`discovery.yml` syntax. We probably do need to make some alterations/deprecations/improvements on that format, but that format is most compatible with our current definitions, and it is the smoothest path to being able to add plugins directly from the hub.\n\n~~Blocks https://gitlab.com/meltano/meltano/-/issues/3283+.~~ Does not block. Endpoints exist.\n\nDeeper analysis/comparison of fields in: #196+ (needs to be reversed in directionality, since we're not leaning to using the discovery as primary).\n\n## Action Plan\n\nWe may need to promote this issue to epic status. Here's a rough estimate of the steps we'll need to perform:\n\n- [ ] Consider adding `version` spec to all `plugin.yml` files in the same way that `discovery.yml` does, or version constraints.\n- [ ] Create and publish JSON Schema for `plugin.yml` format.\n- [ ] Refactor `discovery.yml` to reference the `plugin.yml` JSON schema (more DRY).\n- [ ] Migrate existing files in `_data/meltano/` to use a single-variant-per-file format, for instance https://gitlab.com/meltano/hub/-/blob/main/_data/meltano/extractors/facebook.yml would be two files: `.../tap-facebook--singer-io.yml` and `.../tap-facebook--meltano.yml`\n- [ ] Translate existing files in `_data/taps` and `_data/targets` over to the `plugin.yml` format.\n- [ ] Create follow-on tasks to collect `settings` data for the top most-used tap and target variants.",
      "state": "closed",
      "created_at": "2022-02-24T00:09:48.021Z",
      "updated_at": "2022-05-23T13:52:48.664Z",
      "closed_at": "2022-05-23T13:52:48.517Z",
      "closed_by": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "labels": [
        "OKR: Be the DataOps OS",
        "Roadmap",
        "kind::Feature",
        "v2.0",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [
        {
          "id": 8668050,
          "username": "pnadolny13",
          "public_email": "",
          "name": "Pat Nadolny",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
          "web_url": "https://gitlab.com/pnadolny13"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "user_notes_count": 17,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/203",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 6,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/203",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/203/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/203/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#203",
        "relative": "#203",
        "full": "meltano/hub#203"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": {
        "id": 56415,
        "iid": 55,
        "sequence": 2,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.838Z",
        "updated_at": "2022-05-23T00:05:02.513Z",
        "start_date": "2022-05-16",
        "due_date": "2022-05-22",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56415"
      },
      "health_status": null,
      "epic_issue_id": 1144011,
      "relative_position": -41040
    },
    {
      "id": 102959619,
      "iid": 3283,
      "project_id": 7603319,
      "title": "Support `meltano add` directly from Hub",
      "description": "(Probably) blocked by #3031. \n\nWe'd like users to be able to add MeltanoHub plugins directly from the `meltano add` command.\n\nOnce this is working, the Hub can be updated with the install instructions on each detail page.\n\nFor instance, similar to the `choco install ...` CLI guidance on Chocolatey detail pages:\n\n<details><summary>Click to expand</summary>\n\n![image](/uploads/90016121dc45b9a0d726c8124a7e78ed/image.png)\n\n</details>\n\n... we'd have the text:\n\n> Install with Meltano:\n>\n> ```console\n> meltano add extractor tap-gitlab --variant=MeltanoLabs\n> ```\n\n... or with an http ref:\n\n> Install with Meltano:\n>\n> ```console\n> meltano add extractor tap-gitlab --from_ref=https://hub.meltano.com/singer/taps/tap-gitlab--meltanolabs.yml\n> ```\n\nWe'll likely need to first build #3031+, since this is the issue which decouples us from `discovery.yml`. We could go in another order, but then the inference is that the entire plugin definition would need to live in their `meltano.yml` file, which is parity with `--custom` but doesn't give a similar experience versus `discovery.yml`.",
      "state": "closed",
      "created_at": "2022-02-23T23:01:08.045Z",
      "updated_at": "2022-05-30T10:22:17.861Z",
      "closed_at": "2022-05-30T10:22:17.841Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "OKR: Be the DataOps OS",
        "Office Hours::Discussed",
        "Roadmap",
        "kind::Feature",
        "v2.0",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 20,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3283",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3283",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3283/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3283/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3283",
        "relative": "#3283",
        "full": "meltano/meltano#3283"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": {
        "id": 56416,
        "iid": 56,
        "sequence": 3,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.839Z",
        "updated_at": "2022-05-30T00:05:02.370Z",
        "start_date": "2022-05-23",
        "due_date": "2022-05-29",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56416"
      },
      "health_status": null,
      "epic_issue_id": 1143978,
      "relative_position": -40014
    },
    {
      "id": 102959191,
      "iid": 202,
      "project_id": 25921808,
      "title": "Add support for hosting 'utilities' and 'files' plugins on the Hub",
      "description": "As discussed in https://gitlab.com/meltano/meltano/-/issues/2605#note_852917503.\n\nThe `discovery.yml` paradigm requires stability that is not available for bleeding-edge releases and more volatile or \"beta stage\" plugin integrations. The way we mitigate this presently is to give the users instructions on how to do a `--custom` install, but having these in the Hub would give a nice middle ground. Furthermore, as the \"lock\" behavior becomes default in `meltano add`, we will be free to make what today be \"breaking changes\" here in the hub, but without actually breaking any users (since definitions will be frozen).\n\n1. Let's add support for hosting 'utilities' and 'files' plugins here in the Hub. (This issue.)\n2. Let's build the mechanism for `meltano add` to install references directly from the Hub. (https://gitlab.com/meltano/meltano/-/issues/3283+)",
      "state": "closed",
      "created_at": "2022-02-23T22:48:21.976Z",
      "updated_at": "2022-05-27T20:13:05.462Z",
      "closed_at": "2022-05-25T23:34:09.821Z",
      "closed_by": {
        "id": 10324033,
        "username": "alex1126",
        "public_email": "",
        "name": "Alex Marple",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/94805cd4424fc8f74008c0a1b1f61a18da4a41ab04ae95064f7a28fa8dedc858?s=80&d=identicon",
        "web_url": "https://gitlab.com/alex1126"
      },
      "labels": [
        "OKR: Be the DataOps OS",
        "Roadmap",
        "flow::Doing",
        "kind::Feature",
        "v2.0",
        "valuestream::Hub"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/202",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/202",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/202/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/202/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#202",
        "relative": "#202",
        "full": "meltano/hub#202"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": {
        "id": 56416,
        "iid": 56,
        "sequence": 3,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.839Z",
        "updated_at": "2022-05-30T00:05:02.370Z",
        "start_date": "2022-05-23",
        "due_date": "2022-05-29",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56416"
      },
      "health_status": null,
      "epic_issue_id": 1143979,
      "relative_position": -40527
    },
    {
      "id": 98971330,
      "iid": 180,
      "project_id": 25921808,
      "title": "Singer Metadata API - Proposal",
      "description": "The gap the singer community has right now is that theres no reliable way for an application to access tap/target metadata. Its much easier for SDK based connectors but we need a short term solution since the majority are not SDK based and its not worth it to come up with standard settings and get them installed in every legacy tap/target.\n\nWe compiled a ton of useful info for the hub docs but its not useful for applications yet, although we're very close. We expose the tap/target json endpoints but without versioning individual taps, its not very useful for building applications on (including Meltano). The hub has current state of settings which is good for docs and new installers but not for stability of existing pipelines.\n\nI propose that we create a singer metadata API. Once this exists Meltano will have a much easier time interacting with community/legacy connectors.\n\nA solution I've been thinking of is:\n\n* we add a new `version` key to all the hub yamls\n* pypi installable packages or git repos that have release tags get pinned with those\n* for raw git urls we pin a commit hash and we assign it a 3rd party semantic version. For these we can manage bumping the commit hash and determining if its a small/med/large version via a hub MR. This unlocks Meltano features to know when a tap/target has a breaking change.\n* every change to these hub yamls is sent to the singer metadata service API (probably in CI)\n\nSinger Metadata API:\n\n* receives changes from the hub of yaml files which are snapshotted and stored in S3 or dyanmo by plugin/variant/version\n* a GET endpoint which returns the settings given a plugin/variant/version (and we can return defaults too)\n* eventually we can incorporate more automation here to keep things up to date\n\nThis would also give the Singer community the missing piece that it needs for applications to easily be built on top of it (i.e. hotglue, Matatika dont need to manage metadata anymore).\n\nOpen Questions and thoughts:\n- we need to decide what happens when a metadata definition is found to be incorrect in the hub but the package version is the same. Is it alright to overwrite the existing metadata definition in the API?\n- git url versioning with commit hashes we need to decided on how the yaml definitions track this. Maybe like the below example or just include the hash in the pip_url.\n```yaml\nlabel: Sample\nname: sample\nsinger_name: tap-sample\ntype: tap\nvariants:\n- default: true\n  name: foo_user\n  pip_url: tap-sample\n  version: 1.0.1\n  ...\n- default: false\n  name: bar_user\n  pip_url: git+https://github.com/bar_user/tap-sample.git\n  git_hash: 9eabf5b536662000f79978c4d1b6e4eff5c8d785\n  3P_version: 0.0.1\n```\n- Should we track the setup.py version? Many times its not reliable because people commit right to the main branch without bumping versions.\n- for git url versioning we need to append a namespace or something in the case that a package was unversioned then ended up being versioned, so we dont have future conflicts.",
      "state": "closed",
      "created_at": "2021-12-13T21:40:52.476Z",
      "updated_at": "2022-05-29T21:26:43.708Z",
      "closed_at": "2022-05-29T21:26:43.618Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Office Hours::Discussed",
        "kind::Feature",
        "valuestream::Ecosystem"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [
        {
          "id": 8668050,
          "username": "pnadolny13",
          "public_email": "",
          "name": "Pat Nadolny",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
          "web_url": "https://gitlab.com/pnadolny13"
        }
      ],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/180",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/180",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/180/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/180/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#180",
        "relative": "#180",
        "full": "meltano/hub#180"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 139,
      "epic": {
        "id": 450531,
        "iid": 139,
        "title": "Hub as Plugin Installation Source",
        "url": "/groups/meltano/-/epics/139",
        "group_id": 2524164,
        "human_readable_end_date": "May 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 999469,
      "relative_position": -41553
    }
  ]
}
