{
  "cookies": {
    "_cfuvid": "77_Kd.CYEZrCp1x5JkF_znG5kRV3YBJiei5jRQqZ500-1747940875882-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:07:55.786717+00:00",
  "elapsed": 0.510625,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e9967df331f76-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:07:55 GMT",
    "ETag": "W/\"1371af751c849a6f64829c1899a4d1f9\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/116/issues?epic_iid=116&id=2524164&page=2&per_page=20>; rel=\"next\", <https://gitlab.com/api/v4/groups/2524164/epics/116/issues?epic_iid=116&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/116/issues?epic_iid=116&id=2524164&page=2&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=77_Kd.CYEZrCp1x5JkF_znG5kRV3YBJiei5jRQqZ500-1747940875882-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-02-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-c",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"a282d000cb83d714091c5561b681d466\",\"version\":\"1\"}",
    "x-next-page": "2",
    "x-page": "1",
    "x-per-page": "20",
    "x-prev-page": "",
    "x-request-id": "a282d000cb83d714091c5561b681d466",
    "x-runtime": "0.297705",
    "x-total": "26",
    "x-total-pages": "2"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/116/issues"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/116/issues",
  "_decoded_content": [
    {
      "id": 108687290,
      "iid": 3499,
      "project_id": 7603319,
      "title": "Support a set operation on meltano job for updating tasks",
      "description": "It was determined to be out of scope to add a `set` operation in https://gitlab.com/meltano/meltano/-/issues/2924\n\nWe should review the UX and the data we get on this new command to see the utility of adding an update type command for `meltano job`.",
      "state": "closed",
      "created_at": "2022-05-17T14:16:41.037Z",
      "updated_at": "2022-05-23T14:51:53.437Z",
      "closed_at": "2022-05-23T14:51:53.390Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "flow::Review",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3499",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3499",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3499/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3499/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3499",
        "relative": "#3499",
        "full": "meltano/meltano#3499"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": {
        "id": 56415,
        "iid": 55,
        "sequence": 2,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.838Z",
        "updated_at": "2022-05-23T00:05:02.513Z",
        "start_date": "2022-05-16",
        "due_date": "2022-05-22",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56415"
      },
      "health_status": null,
      "epic_issue_id": 1370986,
      "relative_position": -14877
    },
    {
      "id": 102882130,
      "iid": 3273,
      "project_id": 7603319,
      "title": "Follow-on issue for Mapper implementation",
      "description": "",
      "state": "closed",
      "created_at": "2022-02-22T18:25:32.517Z",
      "updated_at": "2022-03-01T22:59:23.022Z",
      "closed_at": "2022-03-01T22:59:23.010Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "Discussion"
      ],
      "milestone": {
        "id": 2286179,
        "iid": 205,
        "group_id": 2524164,
        "title": "March 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:51.307Z",
        "updated_at": "2022-04-01T16:51:00.402Z",
        "due_date": "2022-03-31",
        "start_date": "2022-03-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/205"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 9,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3273",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3273",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3273/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3273/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3273",
        "relative": "#3273",
        "full": "meltano/meltano#3273"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1140227,
      "relative_position": -12825
    },
    {
      "id": 102871426,
      "iid": 3270,
      "project_id": 7603319,
      "title": "meltano cli config support for mappings",
      "description": "During one of the early review cycles for the stream maps MR we realized we'd forgotten to spec `meltano config` for mappers. So wanted to circle back and talk about that /cc @aaronsteers @tayloramurphy \n\n### List/set/reset/unset\n\nAt the moment configuring mappers is totally manual, but we should consider supporting manipulating mapping's config opts via:\n\n1. `meltano config <mapper name>`\n2. `meltano config <mapping name>` \n\nThere's some issues with either path.\n\nFor the first, it's probably the route folks would expect to take when first installing a mapper - but also a bit weird as when invoking it, you'll be instead using the `mapping name`. Things like listing's might also work a bit unexpected. Do we list the config opts of the mapper itself, the config for all the existing mappings, or both? \n\nThe second makes a lot of sense but seems problematic and addresses some of the issues of th first. Its biggest drawback would be around adding a new mapping. How would we know what mapper is being referenced when dealing with a not yet defined mapping? \n\n\n### Test\n\n@aaronsteers @tayloramurphy not how we want to handle config tests for mappers/mappings - is there any special handling that would be useful? Or is parity good enough?",
      "state": "closed",
      "created_at": "2022-02-22T15:07:16.600Z",
      "updated_at": "2022-05-30T10:20:40.137Z",
      "closed_at": "2022-05-30T10:20:40.118Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Needs Refinement",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3270",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3270",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3270/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3270/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3270",
        "relative": "#3270",
        "full": "meltano/meltano#3270"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1139479,
      "relative_position": -12312
    },
    {
      "id": 101689169,
      "iid": 3205,
      "project_id": 7603319,
      "title": "Define spec for auto-generated job IDs in `meltano run`",
      "description": "Blocks #3130+. Discussion has mostly occurred within #3130 and #2301 already but I'm opening this to confirm the spec so development is fully unblocked.\n\nAs discussed here: https://gitlab.com/meltano/meltano/-/issues/2301#note_752299931\n\n1. If no environment is provided: job ID is not generated and STATE is not supported.\n1. If environment is provided: job ID is automatically generated with a format such as `{environment_name}:{tap_name}-to-{target_name}`.\n\nThere's no plan as of now to support individual block-level arg passing - and this will prevent passing arbitrary job IDs within CLI args.\n\n### Default naming convention\n\nA reasonable default convention would be: `{environment_name}:{tap_name}-to-{target_name}`.\n\nFor example:\n- `prod:tap-gitlab-to-target-snowflake` (prod `gitlab` EL job)\n- `prod:tap-slack-to-target-snowflake` (prod `slack` EL job)\n- `devtest:tap-slack-to-target-snowflake` (dev `gitlab` EL job)\n- `devtest:tap-slack-to-target-snowflake` (dev `slack` EL job)\n- `prod:tap-snowflake-to-target-yaml` (reverse ETL)\n\n### Configuration and overrides\n\n~~Optional extension: each environment may have a `job_id_pattern` - or a similar setting to override the default convention. Assuming the capabilities described in #2754+ are available, this should be a fairly low priority and may be prioritized in the first iteration for #3130+.~~\n\nConfig levers TBD in later iteration.\n\n### Mappers and Mappings\n\nMappings are not considered in the job ID creation. Only the tap, target, and environment names are considered.\n\nMeaning, for example, if a job is running in production and stable for 6 months, and in the 7th month a `has-email-addresses` inline mapping is added to the production pipeline, the job ID will not be affected by this addition, and automatic state tracking will continue working without further changes or alterations to job state. \n\n\n\n### RE state alterations and renames and imports:\n\n- Renaming/importing state from `elt`-managed pipelines would be added here: #2754+",
      "state": "closed",
      "created_at": "2022-02-01T21:57:49.035Z",
      "updated_at": "2022-02-03T23:11:29.529Z",
      "closed_at": "2022-02-03T22:27:21.654Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Discussion",
        "Office Hours::Discussed",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286177,
        "iid": 204,
        "group_id": 2524164,
        "title": "February 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:35.408Z",
        "updated_at": "2022-03-01T20:28:25.106Z",
        "due_date": "2022-02-28",
        "start_date": "2022-02-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/204"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3205",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3205",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3205/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3205/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3205",
        "relative": "#3205",
        "full": "meltano/meltano#3205"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1089554,
      "relative_position": -11799
    },
    {
      "id": 99203043,
      "iid": 3128,
      "project_id": 7603319,
      "title": "Pipeline environment variables are empty for `meltano run`",
      "description": "<!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"regression\" or \"bug\" label and verify the issue you're about to submit isn't a duplicate.\n\nIf you are submitting an issue with a tap, please include:\n\n- account details\n- target details\n- entities selected  with meltano select (if you have selected any entities), as the bug may be related to a specific entity\n- the full elt command you are running\n- full output of the meltano elt command. Logs can get pretty long, so you can add the full log as a snippet in the Meltano project and add a link in the issue.\n--->\n\n### What is the current *bug* behavior?\n_What is happening now?_\n\nRuntime environment variables are not populated in `meltano run`.\n\nMay be addressed by https://gitlab.com/meltano/meltano/-/issues/3098.\n\nDocs: https://meltano.com/docs/integration.html#pipeline-specific-configuration\n\n### What is the expected *correct* behavior?\n_What should be happening?_\n\nRuntime pipeline variables and/or context are populated.\n\n### Steps to reproduce\n_How one can reproduce the issue?_\n\n**Note that running `dbt` without a command causes an error**\n\n```console\n$ meltano run <tap> <target> dbt\n...\nRun invocation could not be completed as block failed: No command to run\n```\n\nThe bug behavior is actually present in\n\n```console\n$ meltano run <tap> <target> dbt:run\n```\n\nwhere `MELTANO_EXTRACTOR_NAMESPACE` is empty.\n\n### Relevant logs and/or screenshots\n_Please use code blocks (\\`\\`\\`) to format console output_\n\n```\n2021-12-16T21:49:59.961983Z [info     ] Block run completed.           block_type=ExtractLoadBlocks err=None set_number=0 success=True\n2021-12-16T21:50:02.696759Z [info     ] 21:50:02  Running with dbt=1.0.0 cmd_type=command name=dbt stdio=stderr\n2021-12-16T21:50:02.791862Z [info     ] 21:50:02  Found 2 models, 15 tests, 0 snapshots, 0 analyses, 165 macros, 0 operations, 0 seed files, 4 sources, 0 exposures, 0 metrics cmd_type=command name=dbt stdio=stderr\n2021-12-16T21:50:02.793169Z [info     ] 21:50:02  The selection criterion '+' does not match any nodes cmd_type=command name=dbt stdio=stderr\n2021-12-16T21:50:02.794045Z [info     ] 21:50:02  The selection criterion 'None' does not match any nodes cmd_type=command name=dbt stdio=stderr\n2021-12-16T21:50:02.795899Z [info     ] 21:50:02                       cmd_type=command name=dbt stdio=stderr\n2021-12-16T21:50:02.796626Z [info     ] 21:50:02  [WARNING]: Nothing to do. Try checking your model configs and model specification args cmd_type=command name=dbt stdio=stderr\n2021-12-16T21:50:02.935869Z [info     ] Block run completed.           block_type=InvokerCommand err=None set_number=1 success=True\n```\n\n### Possible fixes\n_If you can, link to the line of code that might be responsible for the problem or suggest a fix_\n\n\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\nTested against https://gitlab.com/meltano/meltano/-/merge_requests/2471",
      "state": "closed",
      "created_at": "2021-12-16T21:58:26.427Z",
      "updated_at": "2022-05-30T10:02:55.322Z",
      "closed_at": "2022-05-30T10:02:55.305Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Needs Refinement",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3128",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3128",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3128/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3128/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3128",
        "relative": "#3128",
        "full": "meltano/meltano#3128"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1007993,
      "relative_position": -9747
    },
    {
      "id": 99202322,
      "iid": 3127,
      "project_id": 7603319,
      "title": "Tap Singer messages are shown even at \"INFO\" logging level",
      "description": "<!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"regression\" or \"bug\" label and verify the issue you're about to submit isn't a duplicate.\n\nIf you are submitting an issue with a tap, please include:\n\n- account details\n- target details\n- entities selected  with meltano select (if you have selected any entities), as the bug may be related to a specific entity\n- the full elt command you are running\n- full output of the meltano elt command. Logs can get pretty long, so you can add the full log as a snippet in the Meltano project and add a link in the issue.\n--->\n\n### What is the current *bug* behavior?\n_What is happening now?_\n\nWith `meltano elt`, the singer messages emitted were only shown at the `DEBUG` log level and lower.\n\nWith `meltano run`, the singer messages are shown at the `INFO` level, so they're displayed with the default logging configuration.\n\n### What is the expected *correct* behavior?\n_What should be happening?_\n\nTap singer messages are only displayed when the user explicitly lowers the logging level to show debug information.\n\n### Steps to reproduce\n_How one can reproduce the issue?_\n\n```console\n$ meltano run tap-gitlab target-postgres\n```\n\n### Relevant logs and/or screenshots\n_Please use code blocks (\\`\\`\\`) to format console output_\n\n![Screen_Shot_2021-12-16_at_15.44.29](/uploads/0cbcde9517442c72e97b83ee48948613/Screen_Shot_2021-12-16_at_15.44.29.png)\n\n### Possible fixes\n_If you can, link to the line of code that might be responsible for the problem or suggest a fix_\n\n\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\nTested against https://gitlab.com/meltano/meltano/-/merge_requests/2471\n\ncc @pandemicsyn",
      "state": "closed",
      "created_at": "2021-12-16T21:47:47.093Z",
      "updated_at": "2022-05-30T10:02:48.597Z",
      "closed_at": "2022-05-30T10:02:48.578Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3127",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3127",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3127/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3127/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3127",
        "relative": "#3127",
        "full": "meltano/meltano#3127"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1007990,
      "relative_position": -10260
    },
    {
      "id": 99179624,
      "iid": 3124,
      "project_id": 7603319,
      "title": "Inadvertent ELBContextBuilder use in meltano run, results in exception when tap run_discover is called",
      "description": "When running a tap that performs discovery with debug mode enabled, an exception is triggered because discovery mode in the plugin is looking for a debug logger but the base_output_logger isn't accessible:\n\n```\nTraceback (most recent call last):\n  File \"/Users/fhines/projects/meltano/src/meltano/core/block/singer.py\", line 261, in start\n    self.process_handle = await self.invoker.invoke_async(\n  File \"/Users/fhines/projects/meltano/src/meltano/core/plugin_invoker.py\", line 277, in invoke_async\n    async with self._invoke(*args, **kwargs) as (\n  File \"/Users/fhines/.pyenv/versions/3.8.12/envs/melty-3.8.12/lib/python3.8/site-packages/async_generator/_util.py\", line 34, in __aenter__\n    return await self._agen.asend(None)\n  File \"/Users/fhines/projects/meltano/src/meltano/core/plugin_invoker.py\", line 262, in _invoke\n    async with self.plugin.trigger_hooks(\"invoke\", self, args):\n  File \"/Users/fhines/.pyenv/versions/3.8.12/envs/melty-3.8.12/lib/python3.8/site-packages/async_generator/_util.py\", line 34, in __aenter__\n    return await self._agen.asend(None)\n  File \"/Users/fhines/projects/meltano/src/meltano/core/behavior/hookable.py\", line 87, in trigger_hooks\n    await self.__class__.trigger(self, f\"before_{hook_name}\", *args, **kwargs)\n  File \"/Users/fhines/projects/meltano/src/meltano/core/behavior/hookable.py\", line 115, in trigger\n    raise err\n  File \"/Users/fhines/projects/meltano/src/meltano/core/behavior/hookable.py\", line 107, in trigger\n    await hook_func(target, *args, **kwargs)\n  File \"/Users/fhines/projects/meltano/src/meltano/core/plugin/singer/tap.py\", line 270, in discover_catalog_hook\n    await self.discover_catalog(plugin_invoker)\n  File \"/Users/fhines/projects/meltano/src/meltano/core/plugin/singer/tap.py\", line 315, in discover_catalog\n    await self.run_discovery(plugin_invoker, catalog_path)\n  File \"/Users/fhines/projects/meltano/src/meltano/core/plugin/singer/tap.py\", line 363, in run_discovery\n    _debug_logging_handler(self.name, plugin_invoker, handle.stderr)\n  File \"/Users/fhines/projects/meltano/src/meltano/core/plugin/singer/tap.py\", line 52, in _debug_logging_handler\n    if not plugin_invoker.context or not plugin_invoker.context.base_output_logger:\nAttributeError: 'ELBContextBuilder' object has no attribute 'base_output_logger'\n```",
      "state": "closed",
      "created_at": "2021-12-16T16:33:33.922Z",
      "updated_at": "2021-12-16T22:23:27.040Z",
      "closed_at": "2021-12-16T22:23:26.992Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286172,
        "iid": 200,
        "group_id": 2524164,
        "title": "Fri: Dec 17, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:20:21.743Z",
        "updated_at": "2022-01-04T16:10:50.410Z",
        "due_date": "2021-12-17",
        "start_date": "2021-12-11",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/200"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3124",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3124",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3124/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3124/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3124",
        "relative": "#3124",
        "full": "meltano/meltano#3124"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1007477,
      "relative_position": -8721
    },
    {
      "id": 99111820,
      "iid": 3123,
      "project_id": 7603319,
      "title": "Discuss: what to call \"inline transformers\" aka \"stream maps\" aka \"map transforms\"",
      "description": "In preparation for #2299 (and/or the similar #2300), we should discuss what to call these things. We especially should consider how the naming decisions will impact (1) the new user experience and (2) possibly overlap or confusion regarding other existing plugins and interactions.\n\n## Background Context\n\n### History of \"Stream Maps\" naming within the SDK\n\nWhen developing the Stream Maps feature in the SDK, one very important paradigm which allowed that effort to move forward was the concept of the \"Map\" process of a \"Map-Reduce\" paradigm. While the word \"tranformation\" can mean anything in the set of operations {Map/Reduce/Lookup/Filter/etc.}, we are limited in an inline capacity to basically these two: Map and Filter. (Lookups are possible in an inline capacity but they are very different than lookups which occur in SQL, and as such they are extremely expensive and require a robust caching strategy that is far beyond our scope.)\n\nSo, \"Stream Maps\" naming or \"Map Transforms\" naming was intended to highlight the focus on operations which can be performed scalably in an _inline_ capacity. **Unlike \"true\" transform tools like dbt, we do not have all of the data available before we execute; we have only one record at a time and we must be able to treat each record in isolation before passing it downstream (or not).**\n\nLegacy ETL tools tried to do any and all type of \"big T\" transform functions `{Map/Reduce/Lookup/Filter/etc.}` before passing data downstream to the target, which although more rare now is still a problem in the industry using existing tools like Informatica, SSIS, Alteryx, Azure Data Factory, etc. This \"traditional/legacy ETL\" approach is an anti-pattern for very good reason and we should be very clear we are _not_ supporting it.\n\n### Why not just call them \"transformations\" or \"transforms\"\n\nIf applying a little \"m\" for a lightweight inline map transform, `ELT` becomes `EmLT`. Note the little `m` and the big `T` are entirely different capabilities, with different performance constraints and resource availability. We _do not_ want to confuse users by saying this is okay: `ETLT` - this would be a huge step backwards in terms of DataOps best practices, and would cause detrimental confusion to end users if they think there's no difference between \"transform\" in the middle of EL and the \"transform\" in the SQL/dbt layer.\n\nWhen we speak of these conversationally, we use the word \"transformations\" often. However, the name collision with dbt (the *true* \"T\" in \"ELT\" pipeline, is extremely problematic - the `m` and `T` perform very different functions, with different physics constraints, latency expectations, and host server hardware profiles. They also have very different risk profiles for data loss in case of code errors or other unexpected failure.\n\n## Option A: `mappers` are a new plugin type, with associated `mappings` entries in `meltano.yml`\n\nSimilar to as written up in #2299:\n\n```shell\nmeltano add mapper meltano-map-transform\nmeltano add mapper pipelinewise-transform-field\n```\n\n```yml\n# meltano.yml\nmappers:\n- name: meltano-map-transform\n  pip_url: meltano-map-transform\n  config:                         # Optionally, a default config.\n    # ...\n- name: pipelinewise-transform-field\n  pip_url: pipelinewise-transform-field\nextractors:\n- name: tap-gitlab\n  # ...\n  mappings:\n  - name: pii-hasher               # The name of the map transform to apply.\n    mapper: meltano-map-transform  # The mapper plugin to use.\n    config:                        # What will be sent to the transformer in a config.json file.\n      stream_maps:\n        customers:\n          id_hashed: md5(record['id'])\n          id: None\n```\n\nOption B: Transformers are of a `type`: `streaming` or `build`\n\nAnother (admittedly less preferred) option would be to allow `mappers` into the family of `transformer` utilities but with the addition of a new `type` attribute which specifically distinguishes them from other transformation types.\n\nThe `dbt` transformer would be something to indicate it has all data landed in the target upfront, such as `build` or `post-load`.\n\nThe `mapper` transformers would have some `type` value indicating their place as map-transforms and not full fledge data build/transform/aggregation tools. Possible values for `type` could be: `streaming`, `inline`, `mapper`, or `stream_map`.\n\ncc @tayloramurphy, @edgarrmondragon, @pandemicsyn, @kgpayne",
      "state": "closed",
      "created_at": "2021-12-15T21:27:47.594Z",
      "updated_at": "2022-02-22T23:07:53.973Z",
      "closed_at": "2021-12-16T22:44:15.398Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Discussion",
        "Plugin Management",
        "flow::Review",
        "kind::Non-Product"
      ],
      "milestone": {
        "id": 2286172,
        "iid": 200,
        "group_id": 2524164,
        "title": "Fri: Dec 17, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:20:21.743Z",
        "updated_at": "2022-01-04T16:10:50.410Z",
        "due_date": "2021-12-17",
        "start_date": "2021-12-11",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/200"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3123",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3123",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3123/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3123/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3123",
        "relative": "#3123",
        "full": "meltano/meltano#3123"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1005449,
      "relative_position": -8208
    },
    {
      "id": 98479511,
      "iid": 3099,
      "project_id": 7603319,
      "title": "meltano run ci/cd pipeline project",
      "description": "Something similar to the `meltano/demo-project` running as part of our CI/CD suite but using `meltano run` would be handy. I think initially, it would probably be wise to make it an optional stage (i.e. `allow_failure: true`) - so that failures on that stage don't block our entire pipeline. Another option might be to initially have this be a scheduled pipeline - https://docs.gitlab.com/ee/ci/pipelines/schedules.html",
      "state": "closed",
      "created_at": "2021-12-05T18:03:20.565Z",
      "updated_at": "2022-05-30T09:59:14.989Z",
      "closed_at": "2022-05-30T09:59:14.967Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Dogfooding",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2252673,
        "iid": 193,
        "group_id": 2524164,
        "title": "Internal WIP",
        "description": "",
        "state": "active",
        "created_at": "2021-09-27T19:02:31.281Z",
        "updated_at": "2021-09-28T18:29:26.781Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/193"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3099",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3099",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3099/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3099/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3099",
        "relative": "#3099",
        "full": "meltano/meltano#3099"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 983722,
      "relative_position": -7695
    },
    {
      "id": 98375509,
      "iid": 3094,
      "project_id": 7603319,
      "title": "meltano run improvements for closer elt parity",
      "description": "For `meltano run` to be a full replacement of `meltano elt` there's a few small additions that we'll probably need to consider. This originally pop'd up in https://gitlab.com/meltano/meltano/-/issues/2301#note_750941505 during the initial `meltano run` build.\n\n1. ~~Support for incremental jobs~~ (now logged as #3130):\n    1. Job ID support via Job ID prefix sourced from a CLI flag or based on the activated meltano env. (https://gitlab.com/meltano/meltano/-/issues/2301#note_750941505)\n    1. Top-level `--full-refresh` to ignore saved state and do a full refresh. (https://gitlab.com/meltano/meltano/-/merge_requests/2432#note_757893658)\n    1. Top-level `--no-state-update` to not save state. (https://gitlab.com/meltano/meltano/-/merge_requests/2432#note_757893658)\n1. Top-level `--force` to ignore locks or indications of already-running jobs. (https://gitlab.com/meltano/meltano/-/merge_requests/2432#note_757893658)\n1. A \"dry run\" option ala `meltano run --dry-run ...` (https://gitlab.com/meltano/meltano/-/issues/2301#note_750941505)\n\nNote: Behind the scenes - cleaning up the ELBContext -> ELTContext relationship and what singer plugins expect probably needs to be part of the Job support work.",
      "state": "closed",
      "created_at": "2021-12-02T20:58:36.452Z",
      "updated_at": "2022-01-06T20:36:16.021Z",
      "closed_at": "2022-01-06T20:36:15.861Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "CLI",
        "Configuration",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [
        {
          "id": 1942272,
          "username": "tayloramurphy",
          "public_email": "",
          "name": "Taylor A Murphy",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
          "web_url": "https://gitlab.com/tayloramurphy"
        }
      ],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3094",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 12,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3094",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3094/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3094/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3094",
        "relative": "#3094",
        "full": "meltano/meltano#3094"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 979828,
      "relative_position": -7182
    },
    {
      "id": 97448309,
      "iid": 3067,
      "project_id": 7603319,
      "title": "Tutorial showing how contributors could implement new blocks for use in `meltano run`",
      "description": "With our block architecture stuff and `meltano run` rolling out I think it would be neat if we had a small tutorial/how-to on how easy it would be for contributors to implement and contribute new utility block types for use in `meltano run` invocations. \n\nI was thinking a tutorial on how to build a `FireWebhook` block might be good/quick one. Firing a webhook at the end of a `meltano run` might not be the most useful thing, but firing webhooks is a pattern a lot of folks understand - and if we don't end up using abstract base classes too heavily, it would be *really* approachable task and easily implemented with a basic python class.",
      "state": "closed",
      "created_at": "2021-11-16T22:33:24.913Z",
      "updated_at": "2022-05-30T09:55:45.593Z",
      "closed_at": "2022-05-30T09:55:45.553Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Documentation",
        "Tutorials",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3067",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3067",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3067/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3067/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3067",
        "relative": "#3067",
        "full": "meltano/meltano#3067"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 944883,
      "relative_position": -6669
    },
    {
      "id": 96807828,
      "iid": 3043,
      "project_id": 7603319,
      "title": "Block interface tests and mvp implementation",
      "description": "Issue to discuss and track our first block implementation. \n\n\n**Draft/placeholder - actively editing ~Florian**\n\n----\n\n#### Mergeable/deliverables:\n\n- [x] ExtractLoadBlocks\n- [x] PluginCommandBlock\n- [x] IOBlock - which is parent of:\n  - [ ] PublisherBlock\n  - [ ] ConsumerBlock\n  - [ ] TranslatorBlock\n- [x] sample unit tests demonstrating construciton of and use of the ExtractLoadBlocks",
      "state": "closed",
      "created_at": "2021-11-05T15:46:54.033Z",
      "updated_at": "2021-12-15T23:22:29.133Z",
      "closed_at": "2021-12-15T23:22:29.112Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "Discussion",
        "flow::Review",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286172,
        "iid": 200,
        "group_id": 2524164,
        "title": "Fri: Dec 17, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:20:21.743Z",
        "updated_at": "2022-01-04T16:10:50.410Z",
        "due_date": "2021-12-17",
        "start_date": "2021-12-11",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/200"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3043",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 7,
        "completed_count": 4
      },
      "weight": 12,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3043",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3043/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3043/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3043",
        "relative": "#3043",
        "full": "meltano/meltano#3043"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 924712,
      "relative_position": -6156
    },
    {
      "id": 96805816,
      "iid": 266,
      "project_id": 22672923,
      "title": "Block interface tests and mvp implementation",
      "description": "Draft/placeholder - actively editing ~Florian",
      "state": "closed",
      "created_at": "2021-11-05T15:14:46.032Z",
      "updated_at": "2021-11-05T15:46:16.530Z",
      "closed_at": "2021-11-05T15:46:16.508Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/266",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/266",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/266/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/266/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#266",
        "relative": "#266",
        "full": "meltano/sdk#266"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 924589,
      "relative_position": -5643
    },
    {
      "id": 96099462,
      "iid": 257,
      "project_id": 22672923,
      "title": "Create a stream map connector for use in composable pipeline",
      "description": "@aaronsteers this is a follow-up to our conversation about stream maps.\n\nBased on dicussions with @aaronsteers and @edgarrmondragon, the scope of this issue is:\n\n* creating all the necessary classes, CLI and cookiecutter to create SDK-based stream-map packages\n* creating a stream map package that implements a hash",
      "state": "closed",
      "created_at": "2021-10-25T16:25:36.600Z",
      "updated_at": "2022-01-13T22:35:01.651Z",
      "closed_at": "2022-01-13T22:35:01.608Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "flow::Review",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 6,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/257",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/257",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/257/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/257/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#257",
        "relative": "#257",
        "full": "meltano/sdk#257"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 901338,
      "relative_position": -11286
    },
    {
      "id": 94065247,
      "iid": 2945,
      "project_id": 7603319,
      "title": "Add controls/capabilities around plugins and tests (`depends_on`, `runs_after`, etc.)",
      "description": "As part of https://gitlab.com/meltano/meltano/-/issues/2838#note_683527553 we identified the need to add some sort of definitions around how plugins can be composed together. \n\n> an invalid `meltano run` would be `meltano run tap-gitlab dbt:test target-snowflake`. A good user experience for that is that it would fail to compile and warn the user that putting `dbt:test` there isn't appropriate.\n\nOne proposal was to have capabilities for each validator:\n\n* singer - means it can do a validation on a stream of data\n* config/compile - can run prior to a plugin to check configs\n* landed/post-transform - only runs on materialized data (post loader, post transformer, etc.)\n\nThese are yet to be defined but could indicate the kind/location of data they're able to validate. \n\nAJ also proposed the following: This could be done by declaring in potentially three ways I can imagine:\n\n1. the pipeline steps in question refer to the tests which run after or before them (\"`dbt:run` is validated by `dbt:test`\")\n1. (reversed direction) the tests refer to the steps/plugins they validate (\"`dbt:test` validates `dbt:run`\")\n1. the tests *are* steps in the pipeline (\"`dbt:test` is the step that comes after `dbt:run`\")",
      "state": "closed",
      "created_at": "2021-09-21T20:38:38.943Z",
      "updated_at": "2022-01-07T22:53:18.689Z",
      "closed_at": "2022-01-07T22:53:18.675Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "Needs Refinement",
        "flow::Triage",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2363642,
        "iid": 213,
        "group_id": 2524164,
        "title": "Fri: Jan 7, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:26.130Z",
        "updated_at": "2022-01-10T15:56:47.863Z",
        "due_date": "2022-01-07",
        "start_date": "2022-01-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/213"
      },
      "assignees": [
        {
          "id": 1942272,
          "username": "tayloramurphy",
          "public_email": "",
          "name": "Taylor A Murphy",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
          "web_url": "https://gitlab.com/tayloramurphy"
        }
      ],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2945",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2945",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2945/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2945/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2945",
        "relative": "#2945",
        "full": "meltano/meltano#2945"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 839224,
      "relative_position": -2805
    },
    {
      "id": 93276548,
      "iid": 2924,
      "project_id": 7603319,
      "title": "(Meta) Add top-level \"job\" with \"tasks\" in Meltano.yml, refactored from just Schedules to Jobs+Schedules",
      "description": "#### Update 2022-05-26\n\n* Job support added in https://gitlab.com/meltano/meltano/-/merge_requests/2629 - no related issue as MR was scoped down.\n* Support for schedules tracked in https://gitlab.com/meltano/meltano/-/issues/3479\n\n----\n\n\nCurrently a \"Schedule\" in `meltano.yml` is called a \"Pipeline\" in the UI. (#1673) \n\nThe proposed change is to add `jobs` construct, with one or more steps - similar to the proposal of a multi-step `meltano run` but stored in the yaml file and able to be scheduled.\n\nThis is essentially the translation of `meltano run` and `meltano invoke` statements into a DAG definition. Importantly, though, we need to be mindful of how much complexity we want to introduce.\n\nInstead of what we have now that is restricted to just EL pairs:\n\n- A schedule has a tap and target and transform spec (only/skip/etc.).\n\nWe'd have:\n\n- A named `job` has one or more `tasks`\n- A `schedule` points to a named `job` _or_ the `job` contains a `schedule` description\n- Optionally, we can choose to support parallel groups of tasks, such as invoking multiple taps together.\n  - Parallel groups might run serially if invoked locally via the CLI, but they'd generate a parallel structure when passed to an external orchestrator such as Airflow.\n\nThe assumption is that these would all run using `meltano run`.\n\nFor example:\n\n```yaml\njobs:\n- name: daily-eltp\n  tasks:\n  # EL pipelines can run in parallel:\n  - - tap-shopify target-snowflake\n    - tap-github target-snowflake\n  # These dbt build steps run in sequence:\n  - dbt:run --full-refresh\n  - dbt:test\n  # Last mile steps can run in parallel:\n  - - superset:build             # BI build\n    - tap-snowflake target-yaml  # reverse ETL can run in parallel with BI build\n- name: hourly-refresh\n  tasks:\n  - tap-slack target-snowflake\n  - dbt:run\n\n# schedules are separate and can reference jobs\nschedules:\n# ...\n```\n\n## Defining steps with rich metadata (out of scope for iteration 1)\n\nWe should plan for future support of rich task definitions (could have `name`, `type`, 'needs', etc.) instead of simple strings. \n\nThe shorthand of simple string representation is easy to understand, read, and maintain. However, this cannot handle advanced dag dependency representations. Supporting both smartly will likely be needed in future for advanced use cases:\n\n```yaml\njobs:\n- name: daily-eltp\n  tasks:\n  # A complex task object could be inlined with string-based tasks\n  - type: invoke\n    command: dbt:run\n    config: ... # perhaps overrides here or perhaps some other future syntax options\n  - dbt:test\n  - - superset:build             # BI build\n    - tap-snowflake target-yaml  # reverse ETL can run in parallel with BI build\n```\n\nFor each item in the tasks array, if the type is `string`, pass along basically as a `meltano run` arg. If the type is object (dict in python), then parse as a complex task.\n\n## Jobs' relationship to schedules\n\nSchedules likely should be environment specific, but perhaps this should be held until a future iteration.\n\n```yaml\nschedules:\n- name: daily-eltp-schedule\n  job: daily-eltp\n  interval: daily\n  environments:\n  - prod\n- name: hourly-refresh-schedule\n  job: hourly-refresh\n  interval: hourly\n  environments:\n  - prod\n  - dev\n#...\n```\n\n\n## Referencing a job from `meltano run`\n\nWe would expand `meltano run` to accept job names as well as plugin names.\n\nSo assuming 2 jobs are defined, `dbt-daily-refresh` and `daily-el-sync`, these invocations could be valid:\n\n_Possibly out of scope for first iteration_\n\n### Example A: EL steps followed by a named job.\n\nRuns one EL task and then all the tasks in the 'dbt-daily-refresh' job.\n\n```bash\nmeltano run tap-slack target-snowflake dbt-daily-refresh\n```\n\n### Example B: A job followed by a list of commands.\n\nRuns all the EL tasks in the `daily-el-sync` job and then run dbt.\n\n```bash\nmeltano run daily-el-sync dbt:run dbt:test\n```\n\n### Example C: Two sequential jobs.\n\nRuns all the tasks in the `daily-el-sync` job and then all the tasks in the 'dbt-daily-refresh' job.\n\n```bash\nmeltano run daily-el-sync dbt:run dbt:test\n```\n\n## Regarding name collisions\n\nIn order for jobs to be referenced in `meltano run`, there cannot be collisions between plugin names and job names.\n\n## CLI Interface\n\n#### jobs\n\n`meltano job <job_name>` add a job\n\n`meltano job <job_name> add schedule <interval>` Schedule the job\n\n`meltano job <job_name> add schedule '[<interval>, ...]' ` Add more schedules\n\n`meltano job <job_name> tasks <run commands>` # should this be set?\n\n`meltano job <job_name> tasks '[<run command>, ...]' `\n\n#### schedules\n\n`meltano schedule <schedule_name> set <job_name> <interval> <environment>` \n\n`meltano schedule <schedule_name> set <job_name>`\n\n`meltano schedule <schedule_name> set <interval>`\n\n`meltano schedule <schedule_name> set <environment>`\n\n`meltano schedule list [--format=json]`  Does this work with jobs that are scheduled via the job definition?\n\n`meltano schedule run <schedule_name>` Similar to current behavior this would pass any CLI args to `meltano run`\n\n### meltano run syntax\n\n\"Run\" would accept a job name in place of a command or plugin name.\n\n```\nmeltano run <job_name>\n```\n\nAnd job names and command/plugin names can be sequenced:\n\n```\nmeltano run <job_name> dbt:run dbt:build\n```\n\nIn this scenario, everything runs sequentially but the user doesn't have to type as much.\n\n## Relation to `meltano invoke`\n\nJobs are not comatible with this syntax: `meltano invoke <job_name>`.\n\nInstead users should use `meltano run <job_name>` or `meltano schedule run <schedule_name` syntax.",
      "state": "closed",
      "created_at": "2021-09-07T16:43:33.852Z",
      "updated_at": "2022-05-30T09:38:24.483Z",
      "closed_at": "2022-05-30T09:38:24.460Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "Needs Refinement",
        "OKR: Managed Meltano Beta",
        "Office Hours::Discussed",
        "Roadmap",
        "kind::Feature",
        "v2.0",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 55,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2924",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2924",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2924/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2924/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2924",
        "relative": "#2924",
        "full": "meltano/meltano#2924"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": {
        "id": 56416,
        "iid": 56,
        "sequence": 3,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.839Z",
        "updated_at": "2022-05-30T00:05:02.370Z",
        "start_date": "2022-05-23",
        "due_date": "2022-05-29",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56416"
      },
      "health_status": null,
      "epic_issue_id": 825363,
      "relative_position": -1539
    },
    {
      "id": 93106389,
      "iid": 2920,
      "project_id": 7603319,
      "title": "Should Meltano output a DAG-like data structure with individual pipeline components?",
      "description": "### Problem to solve\n\nGiven the plugin and schedules definitions in `meltano.yml`, Meltano should be able to output a JSON object that is agnostic to the orchestrator. Meltano is already halfway of this with `meltano schedule list --format=json`, but a revamped version could include steps other than EL(T), like validation or publishing to a SaaS as separate steps that the orchestrator can use to create tasks that can be separately monitored.\n\n### Target audience\n\nPeople using Meltano and integrating it with an orchestrator.\n\n### Update (2022-03-25)\n\nAs per the new proposal in #2924+: \n\n* `jobs` will be able to sequence tasks, basically anything that can be run in `meltano run` or `meltano elt` EL pairs, commands, and other plugin invocations.\n* `jobs` will likely be able to leverage custom flags (as is possible in `meltano invoke` but not `meltano run`).\n* `jobs` will be invoked relative to an environment.\n* `jobs` may have steps defined in parallel and/or with `depends` relationships.\n\nDAG output may be implemented then with a parallel construct of `meltano schedule list --format=json`:\n\n`meltano job list --format=json`\n\n### Further details\n\nMeltano already outputs some form of DAG,\n\n```console\n$ meltano schedule list --format=json\n[\n  {\n    \"name\": \"csv-postgres\",\n    \"extractor\": \"tap-csv\",\n    \"loader\": \"target-postgres\",\n    \"transform\": \"skip\",\n    \"interval\": \"@daily\",\n    \"start_date\": \"2021-09-01\",\n    \"env\": {},\n    \"cron_interval\": \"0 0 * * *\",\n    \"last_successful_run_ended_at\": null,\n    \"elt_args\": [\n      \"tap-bitso\",\n      \"target-postgres\",\n      \"--transform=skip\",\n      \"--job_id=csv-postgres\"\n    ]\n  }\n]\n```\n\nbut there's only top level tasks for EL(T). When validators and other types of plugins are implemented, it'd be good if they could be taken as individual steps to build a DAG in any orchestrator.\n\n### Proposal\n\nAn initial iteration was shared in https://gitlab.com/meltano/meltano/-/issues/2838#note_643426030, and could look like\n\n```json\n{\n  \"steps\": [\n    {\n      \"id\": \"elt\"\n      \"cli\": \"meltano elt tap-salesforcec target-snowflake --transform=run\",\n      \"depends_on\": []\n    },\n    {\n      \"id\": \"dbt-test\",\n      \"cli\": \"meltano invoke dbt:test\",\n      \"depends_on\": [\"elt\"]\n    },\n    {\n      \"id\": \"ge-test\",\n      \"cli\": \"meltano invoke ge:test\",\n      \"depends_on\": [\"elt\"]\n    }\n  ]\n}\n```\n\nHaving independent steps is important, and Meltano could already build a DAG with EL and T tasks, but custom might pose a challenge... \n\n**Charles Julian Knight:**\n\n> I do think that \"depends_on\" would be important for post-singer tasks.\n>\n> We run `dbt snapshot` after elt using Dagster and it was a little awkward to make sure snapshot ran after the pipeline. Because it uses solid outputs (return values of functions passed as arguments to subsequent functions) to determine if steps can be run in parallel, the best solution we could come up with is passing ignored arguments around:\n\n```python\n@dagster.solid\ndef elt(context):\n  return execute(\"meltano elt\"....\n\n@dagster.solid\ndef dbt_snapshot(context, _):\n  return execute(\"meltano invoke dbt snapshot\"...\n\n@dagster.pipeline\ndef elt_pipeline():\n  dbt_snapshot(elt())\n```\n\n> My concern is how would Meltano know that `dbt:test` `ge:test` don't have dependencies on each other? Like maybe if Meltano has first-class support for both it could, but if I through `my_custom_plugin:some_task` in the mix it definitely wouldn't.\n>\n> I suppose it could be user-defined in `meltano.yml` though. This would be in alignment with Meltano being the global configuration manager for everything; you wouldn't have to actually maintain any orchestrator code other than the one that converts that JSON output into a DAG. Is that what you're thinking?\n\nSo `meltano.yml` could have a `pipelines` or `dag` entry with blocks of Meltano-managed steps in the form of a DAG.\n\n### What does success look like, and how can we measure that?\n\nMeltano can generate an orchestrator-agnostic DAG informed by plugins (EL, T, validation, custom) and namespaces.\n\n### Regression test\n\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n\n- https://docs.prefect.io/core/concepts/flows.html#imperative-api\n- https://docs.dagster.io/concepts/solids-pipelines/pipelines#defining-a-pipeline\n\n### Declaration Syntax (Dependency)\n\nIn order to output a DAG structure, we probably need a more robust language for job definitions. Currently we have \"schedules\" but these are limited to a single elt invocation. We'd ideally expand this schedule and pipeline definitions language to include other command invocations such as dbt:run and dbt:test, and to establish which taps can/should run in parallel by the orchestrator at each time or trigger in the schedule.\n\nUpdate: work is started here: https://gitlab.com/meltano/meltano/-/issues/2924+",
      "state": "closed",
      "created_at": "2021-09-04T00:12:29.585Z",
      "updated_at": "2022-05-30T09:37:51.934Z",
      "closed_at": "2022-05-30T09:37:51.914Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "Office Hours::To Discuss",
        "Orchestrate",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 8,
      "merge_requests_count": 0,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2920",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2920",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2920/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2920/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2920",
        "relative": "#2920",
        "full": "meltano/meltano#2920"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 818800,
      "relative_position": -2565
    },
    {
      "id": 92524947,
      "iid": 2904,
      "project_id": 7603319,
      "title": "Allow `meltano schedule` for ad hoc Python executables",
      "description": "This issue proposes a means by which to use an orchestrator to schedule jobs other than `elt` jobs. It might look something like this:\n\n```\nmeltano schedule [SCHEDULE_NAME] [random_python_executable] [INTERVAL]\n```\n\nUse cases include:\n\n- run a testing suite other `dbt test`\n- trigger an external service to begin a sync (e.g. Census or Hightouch)\n- execute a non-Singer-based replication process\n\nThe idea here is that the executable would exist either in the file or externally, and `meltano schedule` would wrap the process in whatever is required for the orchestrator to schedule it. This would allow data teams to consolidate even custom scripts/packages into the Meltano ecosystem and use the `meltano` cli as a simple means of orchestrating these new processes. \n\nSlack:  https://meltano.slack.com/archives/CMN8HELB0/p1629766582072400",
      "state": "closed",
      "created_at": "2021-08-24T20:15:58.936Z",
      "updated_at": "2022-01-10T22:50:05.339Z",
      "closed_at": "2022-01-10T22:50:05.314Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "Needs Refinement",
        "flow::Triage",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [
        {
          "id": 1942272,
          "username": "tayloramurphy",
          "public_email": "",
          "name": "Taylor A Murphy",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
          "web_url": "https://gitlab.com/tayloramurphy"
        }
      ],
      "author": {
        "id": 2726950,
        "username": "stkbailey",
        "public_email": "",
        "name": "Stephen Bailey",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/3004f9b58409049fc7c8a289867d9ce0fd37b6781e7a9933a38c86a83a75e3ba?s=80&d=identicon",
        "web_url": "https://gitlab.com/stkbailey"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2904",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2904",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2904/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2904/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2904",
        "relative": "#2904",
        "full": "meltano/meltano#2904"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 797202,
      "relative_position": -2725
    },
    {
      "id": 92148274,
      "iid": 2897,
      "project_id": 7603319,
      "title": "Refactor to convert plugins to leverage async patterns in hooks",
      "description": "As a follow up to https://gitlab.com/meltano/meltano/-/issues/2868 (refactor SingerTarget to own bookmark writer) and a next step to https://gitlab.com/meltano/meltano/-/issues/2725 (Refactor `meltano elt`, `SingerRunner` and `DbtRunner` to be composable). We should refactor the plugins various before/after hooks and supporting methods to be async.",
      "state": "closed",
      "created_at": "2021-08-17T21:50:20.183Z",
      "updated_at": "2021-09-15T22:41:17.779Z",
      "closed_at": "2021-09-08T21:20:58.869Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "Discussion",
        "flow::Doing",
        "kind::Feature",
        "urgency::higher",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2169716,
        "iid": 182,
        "group_id": 2524164,
        "title": "Fri: Sep 10, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-08-01T22:32:30.609Z",
        "updated_at": "2021-09-15T20:26:41.834Z",
        "due_date": "2021-09-10",
        "start_date": "2021-09-04",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/182"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": "2021-08-20",
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2897",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2897",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2897/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2897/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2897",
        "relative": "#2897",
        "full": "meltano/meltano#2897"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 772907,
      "relative_position": -4488
    },
    {
      "id": 90750260,
      "iid": 2868,
      "project_id": 7603319,
      "title": "Refactor SingerTarget to own bookmark writer",
      "description": "As a first step towards starting the `meltano elt` refactor (meltano/meltano#2725) we should move the bookmark writer out of SingerRunner and into SingerTarget. To do so we can leverage a before_invoke hook on SingerTarget, which would then call back to the invoker and attach the bookmark writer as an additional output handler.",
      "state": "closed",
      "created_at": "2021-07-23T20:44:36.708Z",
      "updated_at": "2021-08-23T21:47:44.533Z",
      "closed_at": "2021-08-10T22:47:59.896Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "flow::Doing",
        "kind::Feature",
        "urgency::higher",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2169711,
        "iid": 178,
        "group_id": 2524164,
        "title": "Fri: Aug 13, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-08-01T22:31:19.622Z",
        "updated_at": "2021-08-17T18:17:27.101Z",
        "due_date": "2021-08-13",
        "start_date": "2021-08-07",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/178"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 2,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2868",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2868",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2868/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2868/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2868",
        "relative": "#2868",
        "full": "meltano/meltano#2868"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 725374,
      "relative_position": -1026
    }
  ]
}
