{
  "cookies": {
    "_cfuvid": "vdToYeH58WanBoZJB0G_jLfw6kQJJiL4VW1p3x2dPdQ-1747940878889-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:07:58.789017+00:00",
  "elapsed": 0.646938,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e9979d904cdac-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:07:58 GMT",
    "ETag": "W/\"c379eabf815b09a35bbbbe83448d2ead\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/86/issues?epic_iid=86&id=2524164&page=2&per_page=20>; rel=\"next\", <https://gitlab.com/api/v4/groups/2524164/epics/86/issues?epic_iid=86&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/86/issues?epic_iid=86&id=2524164&page=3&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=vdToYeH58WanBoZJB0G_jLfw6kQJJiL4VW1p3x2dPdQ-1747940878889-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-08-lb-gprd",
    "gitlab-sv": "gke-cny-api",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"dc528899d4dac765b8b5ac023a33fe47\",\"version\":\"1\"}",
    "x-next-page": "2",
    "x-page": "1",
    "x-per-page": "20",
    "x-prev-page": "",
    "x-request-id": "dc528899d4dac765b8b5ac023a33fe47",
    "x-runtime": "0.436926",
    "x-total": "52",
    "x-total-pages": "3"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/86/issues"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/86/issues",
  "_decoded_content": [
    {
      "id": 108812756,
      "iid": 3510,
      "project_id": 7603319,
      "title": "Explanation: Why do incremental runs send the same data over and over again?",
      "description": "https://meltano.slack.com/archives/C01TCRBBJD7/p1652967272390779\n\nI've seen this question come up in various ways. Writing up a doc explaining why this happens would be helpful. \n\n(Maybe there's a better solution too?)\n\nRelated:\n- https://github.com/MeltanoLabs/Singer-Working-Group/issues/13\n- https://gitlab.com/meltano/sdk/-/issues/162+",
      "state": "closed",
      "created_at": "2022-05-19T14:01:01.352Z",
      "updated_at": "2022-05-30T13:39:55.994Z",
      "closed_at": "2022-05-30T13:39:55.947Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Documentation",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2590665,
        "iid": 218,
        "group_id": 2524164,
        "title": "July 2022",
        "description": "",
        "state": "active",
        "created_at": "2022-05-02T14:52:41.200Z",
        "updated_at": "2022-05-02T14:52:41.200Z",
        "due_date": "2022-07-31",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/218"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3510",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3510",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3510/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3510/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3510",
        "relative": "#3510",
        "full": "meltano/meltano#3510"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1377720,
      "relative_position": -28215
    },
    {
      "id": 108716967,
      "iid": 386,
      "project_id": 22672923,
      "title": "Reduce noise from 'ignored properties' warnings",
      "description": "The SDK prints warnings for every field that the API returns but is not mapped to the stream's `schema`. We can do a couple things to reduce the noisiness of logs.\n\n## Consolidate warnings into a single message per stream\n\nInstead of:\n\n```\n2022-05-18T03:26:54.596749Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'closed_by' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.597507Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'milestone' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.598140Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'author' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.598749Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'type' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.599366Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'assignee' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.600108Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'issue_type' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.600725Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'time_stats' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.601362Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'task_completion_status' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.604317Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'blocking_issues_count' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.604790Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property '_links' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.605257Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'references' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.605731Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'severity' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.606134Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'moved_to_id' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.606522Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'service_desk_reply_to' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.606932Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'epic_iid' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.607318Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'epic' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.607710Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'iteration' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.608199Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'health_status' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.608593Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'project_path' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n```\n\nWe could send a single message:\n\n```\n2022-05-18T03:26:54.608593Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=The following properties were present in the 'issues' stream but not found in catalog schema (ignoring): closed_by, milestones, author, type, assignee, issue_type, time_stats, task_completion_status, blocking_issues_count, _links, references, severity, moved_to_id, service_deks_reply_to, epic_iid, epic, iteration, health_status, project_path. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n```\n\n## Pytest failures\n\nWe could have a (perhaps optional) pytest that throws a hard test failure during development, if extra properties are unmapped and not explicitly excluded. \n\nWe could optionally pair this with a new stream class property `ignored_properties` which would be functionally identical to the developer adding this to `post_process()`:\n\n```python\n    for ignored in IGNORED_PROPERTIES:\n        result.pop(ignored, None)\n```",
      "state": "closed",
      "created_at": "2022-05-18T03:42:17.051Z",
      "updated_at": "2022-05-30T00:15:38.496Z",
      "closed_at": "2022-05-30T00:15:38.454Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "OKR: Improve New User Experience",
        "kind::Feature",
        "urgency::low",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/386",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/386",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/386/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/386/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#386",
        "relative": "#386",
        "full": "meltano/sdk#386"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1373720,
      "relative_position": -27702
    },
    {
      "id": 108399808,
      "iid": 3480,
      "project_id": 7603319,
      "title": "Known Issues",
      "description": "From office hours talk today. \n\nAs a user when I run into a known issue I'd like to be pointed to a place to read about my issue and a way to fix the problem I'm having\n**Examples**\n\n1. \"Nothing selected\" is in the STDERR output for your tap. Link them to the related stack overflow article (or directly to some article that describes the issue and points them to https://docs.meltano.com/reference/command-line-interface.html#select\n2. target-postgres psycopg2 error. Point them to the right documentation to add `pyscopg2-binary` to pip because of xyz\n\nExample implementation of this:\nhttps://confluence.atlassian.com/support/log-scanner-and-scheduled-log-scanner-790796841.html , https://confluence.atlassian.com/support/files/179443532/792303609/7128/1652952811727/stash_regex_v2.xml explains it without reading much\n\nYou submit your Log Files to a service that has a bunch of regex's built in and points you to relevant articles solving your issue. Atlassians is deeper than this, but it's really handy when you have known issues.\n\n\nSome comments from my ramblings before about this:\nhttps://gitlab.com/meltano/sdk/-/issues/170#note_835814945\nhttps://meltano.slack.com/archives/C01QNA4ESJJ/p1652284882054909?thread_ts=1652284813.903819&cid=C01QNA4ESJJ",
      "state": "closed",
      "created_at": "2022-05-11T20:55:36.922Z",
      "updated_at": "2022-05-30T13:37:08.571Z",
      "closed_at": "2022-05-30T13:37:08.553Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [
        {
          "id": 394049,
          "username": "afolson",
          "public_email": "",
          "name": "Amanda Folson",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/394049/avatar.png",
          "web_url": "https://gitlab.com/afolson"
        }
      ],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 394049,
        "username": "afolson",
        "public_email": "",
        "name": "Amanda Folson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/394049/avatar.png",
        "web_url": "https://gitlab.com/afolson"
      },
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3480",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3480",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3480/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3480/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3480",
        "relative": "#3480",
        "full": "meltano/meltano#3480"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1360104,
      "relative_position": -27189
    },
    {
      "id": 107238052,
      "iid": 3441,
      "project_id": 7603319,
      "title": "When an EL job is detected to still be running, print the last heartbeat timestamp to help users (and us!) debug",
      "description": "It's hard for users to debug failed/blocked pipelines and recently several users have asked if `--force` is the right thing to do. Our current behavior is that any job without a heartbeat for 5+ minutes will be auto-flagged as failed and should not block further executions. But when the failure occurs, it is not clear to the user that they just need to wait 3 more minutes or that (as was the case [here](https://gitlab.com/meltano/meltano/-/issues/3438#note_924786922)) a process might actually still be running somewhere and continually sending heartbeat updates.\n\nIt seems this could be helped a lot by printing out the latest heartbeat info when a job is blocked because we think the process may still be running.",
      "state": "closed",
      "created_at": "2022-04-26T17:39:50.764Z",
      "updated_at": "2022-05-30T13:32:47.825Z",
      "closed_at": "2022-05-30T13:32:47.787Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3441",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3441",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3441/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3441/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3441",
        "relative": "#3441",
        "full": "meltano/meltano#3441"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1319553,
      "relative_position": -26676
    },
    {
      "id": 106667230,
      "iid": 3399,
      "project_id": 7603319,
      "title": "Generate instructions for how to manually run a plugin to debug it",
      "description": "Based on @pandemicsyn's suggestion in https://gitlab.com/meltano/meltano/-/issues/3394#note_913447899 it would be useful to do the following:\n\n```\n$ meltano invoke --manual tap-csv\nWriting config file: /tmp/manual-tap-csv/tap-csv.json\nWriting env file: /tmp/manual-tap-csv/tap-csv.env\nTo manually execute this plugin run: `source /tmp/manual-tap-csv/tap-csv.env && .meltano/extractors/tap-csv/venv/bin/tap-csv --config /tmp/manual-tap-csv/tap-csv.json`\n```",
      "state": "closed",
      "created_at": "2022-04-14T20:15:01.569Z",
      "updated_at": "2022-05-30T13:28:13.813Z",
      "closed_at": "2022-05-30T13:28:13.765Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3399",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3399",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3399/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3399/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3399",
        "relative": "#3399",
        "full": "meltano/meltano#3399"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1295986,
      "relative_position": -26163
    },
    {
      "id": 106550684,
      "iid": 3394,
      "project_id": 7603319,
      "title": "meltano invoke logs hard to parse and swallow INFO messages",
      "description": "### Problem to solve\n(Summarize the problem we are trying to solve in the form of we need to do [A], so that [B] can [C])\n\nWhen @pnadolny13 and I were helping a user debug a problem with tap-csv, we noticed the debug logs weren't the most helpful. \n\n```yaml\n## nicely formatted debug messages\ntime=2022-04-12 16:38:29 name=tap-csv level=INFO message=tap-csv v0.0.3, Meltano SDK v0.4.5)\ntime=2022-04-12 16:38:29 name=tap-csv level=INFO message=Skipping parse of env var settings...\ntime=2022-04-12 16:38:29 name=tap-csv level=INFO message=Config validation passed with 0 errors and 0 warnings.\ntime=2022-04-12 16:38:29 name=root level=INFO message=Operator '__else__=None' was not found. Unmapped streams will be included in output.\nTraceback (most recent call last):\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/bin/tap-csv\", line 8, in <module>\n    sys.exit(TapCSV.cli())\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/click/core.py\", line 1130, in __call__\n    return self.main(*args, **kwargs)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/click/core.py\", line 1055, in main\n    rv = self.invoke(ctx)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/click/core.py\", line 1404, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/click/core.py\", line 760, in invoke\n    return __callback(*args, **kwargs)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/singer_sdk/tap_base.py\", line 467, in cli\n    tap = cls(  # type: ignore  # Ignore 'type not callable'\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/singer_sdk/tap_base.py\", line 92, in __init__\n    self.input_catalog or self._singer_catalog\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/singer_sdk/tap_base.py\", line 235, in _singer_catalog\n    for stream in self.streams.values()\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/singer_sdk/tap_base.py\", line 118, in streams\n    for stream in self.load_streams():\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/singer_sdk/tap_base.py\", line 267, in load_streams\n    for stream in self.discover_streams():\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/tap_csv/tap.py\", line 65, in discover_streams\n    return [\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/tap_csv/tap.py\", line 66, in <listcomp>\n    CSVStream(\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/tap_csv/client.py\", line 20, in __init__\n    super().__init__(*args, **kwargs)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/singer_sdk/streams/core.py\", line 137, in __init__\n    if not self.schema:\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/tap_csv/client.py\", line 98, in schema\n    for file_path in self.get_file_paths():\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/lib/python3.8/site-packages/tap_csv/client.py\", line 49, in get_file_paths\n    raise Exception(f\"File path does not exist {file_path}\")\nException: File path does not exist /extract/accounts.csv\n2022-04-12T21:38:29.374047Z [debug    ] Deleted configuration at /Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/run/tap-csv/tap.d51d2c39-c30d-4ad8-b468-554c023b1c98.config.json\n2022-04-12T21:38:29.375720Z [debug    ] Catalog discovery failed: command ['/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/run/tap-csv/tap.d51d2c39-c30d-4ad8-b468-554c023b1c98.config.json', '--discover'] returned 1 \nTraceback (most recent call last):\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/cli/__init__.py\", line 47, in main\n    cli(obj={\"project\": None})\n  File \"/Users/taylormurphy/Library/Caches/pypoetry/virtualenvs/meltano-AqYjSFXr-py3.8/lib/python3.8/site-packages/click/core.py\", line 829, in __call__\n    return self.main(*args, **kwargs)\n  File \"/Users/taylormurphy/Library/Caches/pypoetry/virtualenvs/meltano-AqYjSFXr-py3.8/lib/python3.8/site-packages/click/core.py\", line 782, in main\n    rv = self.invoke(ctx)\n  File \"/Users/taylormurphy/Library/Caches/pypoetry/virtualenvs/meltano-AqYjSFXr-py3.8/lib/python3.8/site-packages/click/core.py\", line 1259, in invoke\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\n  File \"/Users/taylormurphy/Library/Caches/pypoetry/virtualenvs/meltano-AqYjSFXr-py3.8/lib/python3.8/site-packages/click/core.py\", line 1066, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/Users/taylormurphy/Library/Caches/pypoetry/virtualenvs/meltano-AqYjSFXr-py3.8/lib/python3.8/site-packages/click/core.py\", line 610, in invoke\n    return callback(*args, **kwargs)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/cli/params.py\", line 23, in decorate\n    return func(*args, **kwargs)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/cli/params.py\", line 56, in decorate\n    func(project, *args, **kwargs)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/cli/invoke.py\", line 88, in invoke\n    exit_code = run_async(\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/core/utils/__init__.py\", line 50, in run_async\n    loop.run_until_complete(future)\n  File \"/Users/taylormurphy/.pyenv/versions/3.8.10/lib/python3.8/asyncio/base_events.py\", line 616, in run_until_complete\n    return future.result()\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/cli/invoke.py\", line 131, in _invoke\n    handle = await invoker.invoke_async(*plugin_args, command=command_name)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/core/plugin_invoker.py\", line 388, in invoke_async\n    async with self._invoke(*args, **kwargs) as (\n  File \"/Users/taylormurphy/Library/Caches/pypoetry/virtualenvs/meltano-AqYjSFXr-py3.8/lib/python3.8/site-packages/async_generator/_util.py\", line 34, in __aenter__\n    return await self._agen.asend(None)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/core/plugin_invoker.py\", line 364, in _invoke\n    async with self.plugin.trigger_hooks(\"invoke\", self, args):\n  File \"/Users/taylormurphy/Library/Caches/pypoetry/virtualenvs/meltano-AqYjSFXr-py3.8/lib/python3.8/site-packages/async_generator/_util.py\", line 34, in __aenter__\n    return await self._agen.asend(None)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/core/behavior/hookable.py\", line 87, in trigger_hooks\n    await self.__class__.trigger(self, f\"before_{hook_name}\", *args, **kwargs)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/core/behavior/hookable.py\", line 115, in trigger\n    raise err\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/core/behavior/hookable.py\", line 107, in trigger\n    await hook_func(target, *args, **kwargs)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/core/plugin/singer/tap.py\", line 271, in discover_catalog_hook\n    await self.discover_catalog(plugin_invoker)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/core/plugin/singer/tap.py\", line 316, in discover_catalog\n    await self.run_discovery(plugin_invoker, catalog_path)\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/core/plugin/singer/tap.py\", line 382, in run_discovery\n    raise PluginExecutionError(\nmeltano.core.plugin.error.PluginExecutionError: Catalog discovery failed: command ['/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/run/tap-csv/tap.d51d2c39-c30d-4ad8-b468-554c023b1c98.config.json', '--discover'] returned 1\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/taylormurphy/Documents/Projects/dev/meltano/src/meltano/cli/__init__.py\", line 55, in main\n    raise CliError(str(err)) from err\nmeltano.cli.utils.CliError: Catalog discovery failed: command ['/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/run/tap-csv/tap.d51d2c39-c30d-4ad8-b468-554c023b1c98.config.json', '--discover'] returned 1\nCatalog discovery failed: command ['/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/run/tap-csv/tap.d51d2c39-c30d-4ad8-b468-554c023b1c98.config.json', '--discover'] returned 1\n```\n\nThere's several `INFO` level messages that would be good to pass to the command line. All that a user currently gets w/o the debug flag is:\n\n```bash\n\u276f meltano invoke tap-csv\ntime=2022-04-12 16:38:29 name=tap-csv level=INFO message=tap-csv v0.0.3, Meltano SDK v0.4.5)\ntime=2022-04-12 16:38:29 name=tap-csv level=INFO message=Skipping parse of env var settings...\ntime=2022-04-12 16:38:29 name=tap-csv level=INFO message=Config validation passed with 0 errors and 0 warnings.\ntime=2022-04-12 16:38:29 name=root level=INFO message=Operator '__else__=None' was not found. Unmapped streams will be included in output.\n\n```\n\nI would _want_ to see \n\n```\n\u276f meltano invoke tap-csv\n### ALL INFO logs\n### Some tap-level error showing the exception \nException: File path does not exist /extract/accounts.csv\n\nCatalog discovery failed: command ['/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/extractors/tap-csv/venv/bin/tap-csv', '--config', '/Users/taylormurphy/Documents/Projects/dev/meltano/csvtest/.meltano/run/tap-csv/tap.624fc81f-a823-4c78-9ebc-92a258d418d0.config.json', '--discover'] returned 1\n```\n\nOr something like that. Basically it's the difference between getting the full debug and getting some helpful context on what failed.\n\n### Proposal\n(How are we going to solve the problem? Try to include the user journey)\n\nAt a minimum passing the INFO level log messages to the command line during `meltano invoke` woudl be good. They're sent during `meltano run` appropriately.\n\nAn nice addition would be better showing of the tap error. \n\n\n### What does success look like, and how can we measure that?\n(Define both the success metrics and acceptance criteria. Note that success metrics indicate the desired business outcomes, while acceptance criteria indicate when the solution is working correctly. If there is no way to measure success, link to an issue that will implement a way to measure this)\n\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_",
      "state": "closed",
      "created_at": "2022-04-12T21:58:24.449Z",
      "updated_at": "2022-05-30T13:27:41.957Z",
      "closed_at": "2022-05-30T13:27:41.936Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 12,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3394",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3394",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3394/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3394/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3394",
        "relative": "#3394",
        "full": "meltano/meltano#3394"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1290288,
      "relative_position": -25650
    },
    {
      "id": 106061177,
      "iid": 3375,
      "project_id": 7603319,
      "title": "Improve logging of active environment in CLI",
      "description": "This is a follow-up from [this thread in the initial default_environment MR](https://gitlab.com/meltano/meltano/-/merge_requests/2580#note_895226817).\n\nCurrently, a log line like this:\n```2022-04-04T21:24:48.976998Z [info     ] No environment is active```\nis emitted whenever `--no-environment` or `--environment=null` flags are provided. However there is a third scenario in which no environment is active, which is when no environment is provided via flag or environment variable _and_ there is no `default_environment` found in `meltano.yml`. *For consistency, we should emit the same log line in this scenario as well.*\n\nWe also currently allow users to set `default_environment: null` in their `meltano.yml`. *We would like to discourage this practice by emitting a `warning` log line whenever the `default_environment` is set in this way.*",
      "state": "closed",
      "created_at": "2022-04-04T21:33:16.818Z",
      "updated_at": "2022-05-30T13:25:30.287Z",
      "closed_at": "2022-05-30T13:25:30.265Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3375",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3375",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3375/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3375/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3375",
        "relative": "#3375",
        "full": "meltano/meltano#3375"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1289171,
      "relative_position": -25137
    },
    {
      "id": 104566807,
      "iid": 3329,
      "project_id": 7603319,
      "title": "Add a new `debug` command that prints useful information for troubleshooting",
      "description": "### Problem to solve\n\nHelp users report errors in Slack and GitLab by giving them standardized output.\n\n### Target audience\n\nAll users of Meltano.\n\n### Further details\n\nTIL poetry has this\n\n```console\n$ poetry debug\n\nPoetry\nVersion: 1.1.12\nPython:  3.7.9\n\nVirtualenv\nPython:         3.7.9\nImplementation: CPython\nPath:           /Users/edgarramirez/Library/Caches/pypoetry/virtualenvs/meltano-SY7IjDqw-py3.7\nValid:          True\n\nSystem\nPlatform: darwin\nOS:       posix\nPython:   /Library/Frameworks/Python.framework/Versions/3.7\n```\n\nSimilar information for Meltano would be great for users to add in their troubleshooting and error reports.\n\n### Proposal\n\n```console\n$ meltano debug --help\n\nUsage: meltano debug [OPTIONS] [[extractor|loader|transform|model|dashboard|\n                     orchestrator|transformer|file|utility|mapper|mapping|ex\n                     tractors|loaders|transforms|models|dashboards|orchestra\n                     tors|transformers|files|utilities|mappers|mappings]]\n                     [PLUGIN_NAME]...\n\n$ meltano debug\n\nMeltano\nVersion:    1.97.0\nPython:     3.7.9\nExecutable: /usr/local/bin/meltano\n\nSystem\nPlatform: darwin\nOS:       posix\nPython:   /Library/Frameworks/Python.framework/Versions/3.7\n\n# Optionally filtered for a single plugin\nPlugins (tap-gitlab)\npip URL:    tap-gitlab\nType:       Extractor\nVirtualEnv: /code/.meltano/extractors/tap-gitlab/venv\n\nPlugins (target-jsonl)\npip URL:    target-jsonl\ntype:       Loader\nVirtualEnv: /code/.meltano/loaders/target-jsonl/venv\n```\n\n### What does success look like, and how can we measure that?\n\nThe Meltano Core team starts seeing this information in bug reports in Slack and GitLab, making it easier to give feedback and recommendations as well as reproducing the issue.\n\n### Regression test\n\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_",
      "state": "closed",
      "created_at": "2022-03-10T17:24:30.672Z",
      "updated_at": "2022-05-30T10:27:49.388Z",
      "closed_at": "2022-05-30T10:27:49.354Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "OKR: Improve New User Experience",
        "Office Hours::To Discuss",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3329",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3329",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3329/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3329/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3329",
        "relative": "#3329",
        "full": "meltano/meltano#3329"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1177073,
      "relative_position": -24624
    },
    {
      "id": 103072821,
      "iid": 3288,
      "project_id": 7603319,
      "title": "Meltano configures consistent logging for tap/target",
      "description": "### Problem to solve\nMeltano recently wired up Structlog to make it easy to do JSON logging, or otherwise customize logging: https://docs.meltano.com/reference/settings#clilog_config\n\nHowever tap/targets/transforms configure their own log format, which results in weirdly-formatted log messages from these components:\n\nFrom DBT:\n\n```\n[32mCompleted successfully[0m\n```\n\nFrom tap-mysql:.\n\n```\ntime=2022-02-25 00:15:46 name=tap_mysql level=INFO message=Stream ... is using incremental replication\n```\n\n### Target audience\nPipeline Operator?\n\n\n### Further details\nAs noted by Edgar Ramirez in [Slack](https://meltano.slack.com/archives/C01TCRBBJD7/p1645810644663589?thread_ts=1645750430.711549&cid=C01TCRBBJD7), Pipelinewise libraries have some common logging infrastructure:\n\nhttps://github.com/transferwise/pipelinewise-singer-python/blob/master/singer/logger.py\n\n### Proposal\nSince we're slurping up tap/target logs in Meltano, and re-emitting them, we probably want the tap/target to use a simple log format like just logging the message, or perhaps using JSON logging with Structlog, which Meltano could then parse and re-log with all the context. (e.g. passing through the log-level as well).\n\nSince Meltano is installing and invoking the tap, perhaps the `PluginInvoker` or the install machinery can inject a logging shim that overrides the tap/target's logger. (I'm not sure if there's a generic approach that would work here).\n\nEdgar notes that this could be included in the Meltano SDK -- but in that case it wouldn't help for non-Meltano taps.\n\nFailing those approaches, this is perhaps something that could be folded into the Singer spec & core library, so that all tap/targets have a configurable log format.\n\n### What does success look like, and how can we measure that?\nOperators can clearly see logs from tap/target/transforms, so that success/failure is easy to determine, and standard text search can be applied in a log aggregator.\n\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references",
      "state": "closed",
      "created_at": "2022-02-25T21:16:25.801Z",
      "updated_at": "2022-05-30T10:22:54.845Z",
      "closed_at": "2022-05-30T10:22:54.825Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 783565,
        "username": "paul.tiplady",
        "public_email": "",
        "name": "Paul Tiplady",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/783565/avatar.png",
        "web_url": "https://gitlab.com/paul.tiplady"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3288",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3288",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3288/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3288/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3288",
        "relative": "#3288",
        "full": "meltano/meltano#3288"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1149142,
      "relative_position": -24111
    },
    {
      "id": 101616163,
      "iid": 3197,
      "project_id": 7603319,
      "title": "Eliminate Gitlab-related 5xx and 503 failures in CI",
      "description": "We've discussed this previously, but we still lose a lot of productivity to the occasional Gitlab 503 errors. I want to propose two viable solutions as candidates for prioritization:\n\n1. Improve error handling in tap-gitlab (or port to SDK during TapFest).\n2. Replace `tap-gitlab` with `tap-smoke-test` or `tap-github` or a similar stable connector which (hopefully) still solves for the needed integration tests. \n\nTo be clear: aside from smoke test tap, there's probably not a _perfectly_ stable connector out there (anything can have intermittent issues) but the goal would be to significantly reduce the number of issues we run into and reduce churn in regular dev+release cycles.\n\n@pandemicsyn, @edgarrmondragon, @kgpayne - Do you each have a preference on approaches above, and/or other ideas for connectors or mitigations?\n\n@tayloramurphy - Once we have a path forward, I'd like to prioritize soon if we can, fyi.",
      "state": "closed",
      "created_at": "2022-01-31T19:50:23.518Z",
      "updated_at": "2022-05-30T10:11:49.005Z",
      "closed_at": "2022-05-30T10:11:48.984Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Tech Debt",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2252673,
        "iid": 193,
        "group_id": 2524164,
        "title": "Internal WIP",
        "description": "",
        "state": "active",
        "created_at": "2021-09-27T19:02:31.281Z",
        "updated_at": "2021-09-28T18:29:26.781Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/193"
      },
      "assignees": [
        {
          "id": 4025463,
          "username": "cjohnhanson",
          "public_email": "",
          "name": "Cody Hanson",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
          "web_url": "https://gitlab.com/cjohnhanson"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 4025463,
        "username": "cjohnhanson",
        "public_email": "",
        "name": "Cody Hanson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/4025463/avatar.png",
        "web_url": "https://gitlab.com/cjohnhanson"
      },
      "user_notes_count": 10,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3197",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3197",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3197/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3197/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3197",
        "relative": "#3197",
        "full": "meltano/meltano#3197"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1085831,
      "relative_position": -23598
    },
    {
      "id": 98980367,
      "iid": 3118,
      "project_id": 7603319,
      "title": "Research spike: can targets be tested with a zero-length input stream?",
      "description": "In regards to applying a generic test to targets, there is some discussion regarding whether we would need to physically create a new table in the target in order to perform the test. Douwe had posited that it may be possible to test basic connectivity information by simply sending a zero-length input stream.\n\nI (AJ) hadn't considered that option before, and it seems a simple enough test/spike to perform before implementing a version that would necessarily create side-effects in  data landing zones which are likely considered \"production\" by our users.\n\nDiscussion here on a side-effect-free approach: https://gitlab.com/meltano/meltano/-/issues/1370#note_748076418\n\nAnd \"Option B\" here: https://gitlab.com/meltano/meltano/-/issues/1370#note_747150933",
      "state": "closed",
      "created_at": "2021-12-14T03:36:02.867Z",
      "updated_at": "2022-05-30T10:01:40.445Z",
      "closed_at": "2022-05-30T10:01:40.409Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Load",
        "Marketing::Blog Feature",
        "Needs Research Spike",
        "urgency::low",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3118",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 1,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3118",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3118/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3118/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3118",
        "relative": "#3118",
        "full": "meltano/meltano#3118"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1001236,
      "relative_position": -22572
    },
    {
      "id": 98964786,
      "iid": 3117,
      "project_id": 7603319,
      "title": "Help users report exceptions",
      "description": "I'm not sure how much this is feasible or safe to do, but it might be nice to try to:\n\n1. Produce a crash log when running in --debug mode when exceptions are encountered. The log could capture things like: the exception that occurred, *basic* meta info like os platform, meltano version, tap/target version and variant info etc. Basically,  things that would help us debug a users an issue.\n2. If a user is running without debug mode and encounters an exception we can then:\n    - Prompt the user to rerun with --debug to produce a crash log\n    - Prompt the user to create an issue in Gitlab (or slack?)\n    - Prompt the user to share the crash log (after skimming it and verifying it contains no sensitive data).\n3. Record anonymous exception metrics. We should not try to automatically report data related to exceptions (since tracebacks can leak sensitive data), but might be nice to just try and fire a generic counter event whenever an exception was occurred. It might let us identify broken releases.  \n\nBonus: I'm not sure if Gitlab supports populating issue templates from URL params, but it would be nice if we could figure out away to pre-populate the boiler plate questions in a template for the users.",
      "state": "closed",
      "created_at": "2021-12-13T18:36:55.086Z",
      "updated_at": "2022-05-30T10:01:33.177Z",
      "closed_at": "2022-05-30T10:01:33.075Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3117",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3117",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3117/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3117/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3117",
        "relative": "#3117",
        "full": "meltano/meltano#3117"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1002766,
      "relative_position": -23085
    },
    {
      "id": 98904180,
      "iid": 3116,
      "project_id": 7603319,
      "title": "hardcoded decoding as ascii when log-level=debug",
      "description": "<!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"regression\" or \"bug\" label and verify the issue you're about to submit isn't a duplicate.\n\nIf you are submitting an issue with a tap, please include:\n\n- account details\n- target details\n- entities selected  with meltano select (if you have selected any entities), as the bug may be related to a specific entity\n- the full elt command you are running\n- full output of the meltano elt command. Logs can get pretty long, so you can add the full log as a snippet in the Meltano project and add a link in the issue.\n--->\n\n### What is the current *bug* behavior?\n\nI'm running \n```\nmeltano --log-level=debug select tap-google-sheets --list --all\n```\non a sheet that contains emoji characters, Meltano CLI crashes trying to decode UTF stream as ASCII.\n\n### What is the expected *correct* behavior?\n\nMeltano shouldn't crash when handling non-ascii stream in debug mode\n\n### Steps to reproduce\n\nretrieve a catalog that contains non-ascii characters, in debug mode\n\n\n### Relevant logs and/or screenshots\n\n```\nTraceback (most recent call last):\n  File \"/home/matte/.local/pipx/venvs/meltano/lib/python3.9/site-packages/meltano/cli/__init__.py\", line 53, in main\n    raise CliError(str(err)) from err\nmeltano.cli.utils.CliError: 'ascii' codec can't decode byte 0xc3 in position 83: ordinal not in range(128)\n```\n\n### Possible fixes\n\n\nhttps://gitlab.com/meltano/meltano/-/blob/master/src/meltano/core/plugin/singer/tap.py#L45\n\n`file_like_obj.write(data.decode(\"ascii\") if write_str else data)`\n\nI guess the encoding should be read from the environment?\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team",
      "state": "closed",
      "created_at": "2021-12-12T21:32:56.794Z",
      "updated_at": "2022-01-12T20:52:56.984Z",
      "closed_at": "2022-01-12T20:52:56.911Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "flow::Review",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [],
      "author": {
        "id": 10319569,
        "username": "mattesilver",
        "public_email": "",
        "name": "Rafael Krupinski",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/10319569/avatar.png",
        "web_url": "https://gitlab.com/mattesilver"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3116",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3116",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3116/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3116/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3116",
        "relative": "#3116",
        "full": "meltano/meltano#3116"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 998557,
      "relative_position": -22059
    },
    {
      "id": 98696576,
      "iid": 3110,
      "project_id": 7603319,
      "title": "Implement 'validator' xml output to enable downstream reporting",
      "description": "### Problem to solve\n(Summarize the problem we are trying to solve in the form of we need to do [A], so that [B] can [C])\nWe need to report on and monitor meltano project stability, so that dev teams can confidently promote from development to released.\n\n### Target audience\nData Heroes\n\n### Further details\nAs a Data Hero, I would like to execute `meltano test` and capture the output directly in my existing DevOps tooling.\n\n### Proposal\ne.g. Azure DevOps\n- setup a meltano build job in Azure DevOps\n- setup a `meltano test --junit-output-dir=test-results` phase\n- setup an Azure DevOps JUnit publisher pointing at the xml output location `test-results`\n\n\n### What does success look like, and how can we measure that?\nWith little effort (less than 5 minutes) I can see a report in DevOps tooling for `meltano test` results\n\n\n### Regression test\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\nRelated to https://gitlab.com/meltano/meltano/-/issues/2838",
      "state": "closed",
      "created_at": "2021-12-08T18:09:52.513Z",
      "updated_at": "2022-05-30T10:00:38.107Z",
      "closed_at": "2022-05-30T10:00:38.044Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5997370,
        "username": "aphethean",
        "public_email": "",
        "name": "Aaron Phethean",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/48ce380aaf5b7383a2ac09d0846a47ef275180f1cc025b5336034a479564e227?s=80&d=identicon",
        "web_url": "https://gitlab.com/aphethean"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3110",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3110",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3110/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3110/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3110",
        "relative": "#3110",
        "full": "meltano/meltano#3110"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 991586,
      "relative_position": -21546
    },
    {
      "id": 96822916,
      "iid": 3045,
      "project_id": 7603319,
      "title": "State Not Saved and Retrieved Properly For SDK Based Taps",
      "description": "<!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"regression\" or \"bug\" label and verify the issue you're about to submit isn't a duplicate.\n\nIf you are submitting an issue with a tap, please include:\n\n- account details\n- target details\n- entities selected  with meltano select (if you have selected any entities), as the bug may be related to a specific entity\n- the full elt command you are running\n- full output of the meltano elt command. Logs can get pretty long, so you can add the full log as a snippet in the Meltano project and add a link in the issue.\n--->\n\n### What is the current *bug* behavior?\n_What is happening now?_\n\n\nThis issue is based on [this slack thread ](https://meltano.slack.com/archives/C01PKLU5D1R/p1636061054200300).\n\n- meltano, version 1.86.0\n- tap: https://github.com/MeltanoLabs/tap-google-analytics\n- tap SDK version: singer-sdk = \"^0.3.13\"\n\nSummarized:\n\nIt seems like SDK based taps produce a valid state message using `meltano elt` which is stored in the system database but it seems to not be accessible to the following execution. When running `--dump=state` and error returns saying `Could not find state file for this pipeline` which ties back to `FileNotFoundError: [Errno 2] No such file or directory: /[my_path]/.meltano/run/elt/job_id1/a99bab1f-5bd6-4c14-b1c8-d8fa7502e3f2/state.json`. Or during the next execution no incremental state is found and it runs from the original start_date.\n\nI'm able to run an `elt` job with a non-sdk based tap, tap-gitlab, and properly store and retrieve state which is also available using `--dump=state`. I tried another SDK based tap, tap-stack-exchange, and observed a similar issue retrieving state.\n\nThe database payload entries look different between SDK and non-SDK based tap outputs. For tap-gitlab the database shows `{\"singer_state\": {\"project_123\": \"2021-11-02T00:00:00Z\"}}` and for tap-google-analytics (SDK) it shows `{\"singer_state\": {\"events\": {\"replication_key\": \"ga_date\", \"replication_key_value\": \"20211104\"}}}`. Not sure if thats related but the formatting is different.\n\n### What is the expected *correct* behavior?\n_What should be happening?_\n\n`meltano elt tap-google-analytics target-jsonl --job_id=123` should store and retrieve state between executions and \n`meltano elt tap-google-analytics target-jsonl --job_id=123 --dump=state` should return state after a successful run of the job happens.\n\n### Steps to reproduce\n_How one can reproduce the issue?_\n\n```\nmeltano elt tap-google-analytics target-jsonl --job_id=new_job\nmeltano elt tap-google-analytics target-jsonl --job_id=new_job --dump=state\n```\n\nThe tap-google-analytics installation is based on https://gitlab.com/meltano/squared/-/tree/master/data. I've seen this both using the environment feature and without it.\n\n### Relevant logs and/or screenshots\n_Please use code blocks (\\`\\`\\`) to format console output_\n\n\n\n### Possible fixes\n_If you can, link to the line of code that might be responsible for the problem or suggest a fix_\n\n\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team",
      "state": "closed",
      "created_at": "2021-11-05T19:09:50.870Z",
      "updated_at": "2021-11-09T19:20:44.671Z",
      "closed_at": "2021-11-09T15:23:18.051Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "flow::Doing",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286167,
        "iid": 195,
        "group_id": 2524164,
        "title": "Fri: Nov 12, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:18:36.195Z",
        "updated_at": "2021-11-15T15:49:12.319Z",
        "due_date": "2021-11-12",
        "start_date": "2021-11-06",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/195"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3045",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3045",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3045/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3045/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3045",
        "relative": "#3045",
        "full": "meltano/meltano#3045"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 928033,
      "relative_position": -20007
    },
    {
      "id": 96352662,
      "iid": 3032,
      "project_id": 7603319,
      "title": "elt jobs appear to complete successfully but exit with return code 1 occasionally",
      "description": "<!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"regression\" or \"bug\" label and verify the issue you're about to submit isn't a duplicate.\n\nIf you are submitting an issue with a tap, please include:\n\n- account details\n- target details\n- entities selected  with meltano select (if you have selected any entities), as the bug may be related to a specific entity\n- the full elt command you are running\n- full output of the meltano elt command. Logs can get pretty long, so you can add the full log as a snippet in the Meltano project and add a link in the issue.\n--->\n\n### What is the current *bug* behavior?\nAs reported by a user in slack (https://meltano.slack.com/archives/C01TCRBBJD7/p1635428092076900). They're intermittently running into a situation where elt commands appear based on the output logs that they've completed successfully, but we actually have n exit status/return code of 1. \n\nThey also reported that the job is marked as failed in the meltano db with the error message:\n\n```\n{\"error\": \"No heartbeat recorded for 5 minutes. The process was likely killed unceremoniously.\"\n```\n\n\n### What is the expected *correct* behavior?\n_What should be happening?_\n\n\n\n### Steps to reproduce\n\nUnknown/TBD at this point.\n\n\n\n### Relevant logs and/or screenshots\n\n```\n[2021-10-28 08:18:56,028] {bash_operator.py:157} INFO - meltano                      | elt       | Incremental state has been updated at 2021-10-28 08:18:56.027750.\n[2021-10-28 08:18:58,706] {bash_operator.py:157} INFO - meltano                      | elt       | Extract & load complete!\n[2021-10-28 08:18:58,707] {bash_operator.py:157} INFO - meltano                      | elt       | Transformation skipped.\n[2021-10-28 08:18:58,727] {bash_operator.py:157} INFO - (<State.FAIL: (3, ('RUNNING',))>, <State.SUCCESS: (2, ())>)\n[2021-10-28 08:19:00,227] {bash_operator.py:161} INFO - Command exited with return code 1\n[2021-10-28 08:19:00,385] {taskinstance.py:1150} ERROR - Bash command failed\nTraceback (most recent call last):\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/airflow/models/taskinstance.py\", line 984, in _run_raw_task\n    result = task_copy.execute(context=context)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/airflow/operators/bash_operator.py\", line 165, in execute\n    raise AirflowException(\"Bash command failed\")\nairflow.exceptions.AirflowException: Bash command failed\n[2021-10-28 08:19:00,387] {taskinstance.py:1194} INFO - Marking task as FAILED. dag_id=meltano_secondary_full_table, task_id=extract_load, execution_date=20211027T070000, start_date=20211028T074156, end_date=20211028T081900\n[2021-10-28 08:19:01,488] {local_task_job.py:102} INFO - Task exited with return code 1\n```\n\n\n### Possible fixes\n\n\n\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team",
      "state": "closed",
      "created_at": "2021-10-28T20:23:09.893Z",
      "updated_at": "2022-05-30T09:51:41.902Z",
      "closed_at": "2022-05-30T09:51:41.884Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "flow::Triage",
        "kind::Bug",
        "urgency::low",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 8,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3032",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3032",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3032/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3032/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3032",
        "relative": "#3032",
        "full": "meltano/meltano#3032"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 951468,
      "relative_position": -20520
    },
    {
      "id": 94816059,
      "iid": 129,
      "project_id": 25921808,
      "title": "Document supported Python versions for a plugin",
      "description": "In [a recent Slack thread](https://meltano.slack.com/archives/C01TCRBBJD7/p1633339211354100) a user came across an issue with [pipelinewise-target-bigquery](https://github.com/transferwise/pipelinewise-target-bigquery) (not yet in the Hub) caused by a target's dependency not being compatible with Python \u2265 3.8.\n\nIt would help if `discovery.yml` and the Hub documented Python versions supported by the plugin, so Meltano can eventually warn or fail when an incompatible version is being used (https://gitlab.com/meltano/meltano/-/issues/2854).\n\nGathering this information for plugins based on the SDK will be easier, but for the rest of the ecosystem will be harder since a lot of taps and targets don't explicitly mention supported versions in their readmes.",
      "state": "closed",
      "created_at": "2021-10-04T15:39:55.071Z",
      "updated_at": "2022-05-29T21:21:41.206Z",
      "closed_at": "2022-05-29T21:21:41.188Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/hub/-/issues/129",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/25921808/issues/129",
        "notes": "https://gitlab.com/api/v4/projects/25921808/issues/129/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/25921808/issues/129/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/25921808",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#129",
        "relative": "#129",
        "full": "meltano/hub#129"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 861401,
      "relative_position": -17955
    },
    {
      "id": 94608944,
      "iid": 2958,
      "project_id": 7603319,
      "title": "Meltano Bisect - Find which record is causing the issue",
      "description": "### Problem to solve\nI want to know which records are causing my target to fail\n\n### Target audience\n1. Meltano Users\n1. Tap/Target developers\n\n### Further details\nExample problem \n\n1. `meltano elt tap-clickup target-jsonl --job_id b`\n2. This exception thrown\n```\nTraceback (most recent call last):\n  File \"/home/visch/git/tap-clickup/.meltano/loaders/target-jsonl/venv/bin/target-jsonl\", line 8, in <module>\n    sys.exit(main())\n  File \"/home/visch/git/tap-clickup/.meltano/loaders/target-jsonl/venv/lib/python3.8/site-packages/target_jsonl.py\", line 94, in main\n    state = persist_messages(input_messages, config.get('destination_path', ''), config.get('do_timestamp_file', True))\n  File \"/home/visch/git/tap-clickup/.meltano/loaders/target-jsonl/venv/lib/python3.8/site-packages/target_jsonl.py\", line 59, in persist_messages\n    validators[o['stream']].validate(float_to_decimal(o['record']))\n  File \"/home/visch/git/tap-clickup/.meltano/loaders/target-jsonl/venv/lib/python3.8/site-packages/jsonschema/validators.py\", line 130, in validate\n    raise error\njsonschema.exceptions.ValidationError: 'true' is not of type 'integer', 'null'\n\nFailed validating 'type' in schema['properties']['custom_fields']['items']['properties']['value']:\n    {'type': ['integer', 'null']}\n\nOn instance['custom_fields'][1]['value']:\n    'true'\n```\n\n\n\nToday to solve this problem you do something like \n1. Generate an output file that repeats the error (meltano invoke tap-clickup --state state > out )\n1. Run cat out | meltano invoke target-jsonl\n1. Find the error\n\nNow I'm replicating the error which is great but my output file is roughly 106 lines so I have to try to find which issue this is. I've had this happen with other taps / targets while debugging. What I end up doing is throwing println's in the target to point me to the right place.\n\nBrought up here: https://meltano.slack.com/archives/C01PKLU5D1R/p1632247195183600\n\nAnd here indirectly (Probably could apply to a number of issues) https://meltano.slack.com/archives/C01TCRBBJD7/p1632989543321800 \n\n### Proposal\nNot sure exactly there's a few ideas\n- Meltano Bisect (Stolen from [git bisect](https://git-scm.com/docs/git-bisect) which is different but the idea is nice). End goal is to give you a list of failing records, while ignoring the successful records (One way is to split the records in half, try half if they are successful try the next half, etc) \n- Debug Target (Doesn't solve enough issues as target specific issues with records are more common then you'd think) \n\n\n### What does success look like, and how can we measure that?\n1. When a record level failure happens in Meltano (and you specify that you want this additional information by lets say running meltano bisect) Meltano will tell you exactly which record failed, and will generate a reproducible output file that you can send to your target (Schema, state?, and Record). \n\n\n\n### Regression test\nN/A\n\n### Links / references\n\nUse cases (There's more but as we get them / point here I'll try to update this) \n* https://meltano.slack.com/archives/C01TCRBBJD7/p1636312284145100",
      "state": "closed",
      "created_at": "2021-09-30T11:45:12.679Z",
      "updated_at": "2022-05-30T09:42:51.817Z",
      "closed_at": "2022-05-30T09:42:51.712Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 17,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2958",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2958",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2958/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2958/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2958",
        "relative": "#2958",
        "full": "meltano/meltano#2958"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 856103,
      "relative_position": -17442
    },
    {
      "id": 93475739,
      "iid": 2929,
      "project_id": 7603319,
      "title": "Create smoke-test tap/target for use in functional tests",
      "description": "With some of the large refactor and work we have in flight, we might want to expand our functional/smoke tests to be more comprehensive and test for some explicit failure scenarios or edge cases that we're concerned about. To do that it might be handy to have a tap/target whose behavior we can control through the env/config. For example, setting the flag DISCOVERY_EXIT_CODE=1 might cause it to exit with a status code of 1 when running discovery, setting TAP_STDOUT=somefile.txt might cause it to write the contents of `somefile.txt` to its stdout.\n\nI've not given this a ton of thought yet - but it seems like this would make a good fail-safe to catch issues that can easily sneak past unittest's (especially thinking of things like error handling defects and io routing/handling issues).",
      "state": "closed",
      "created_at": "2021-09-10T18:32:55.621Z",
      "updated_at": "2021-10-04T15:39:32.271Z",
      "closed_at": "2021-10-04T15:17:11.003Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "Testing",
        "flow::Doing",
        "kind::Feature",
        "urgency::default",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2199293,
        "iid": 188,
        "group_id": 2524164,
        "title": "Fri: Oct 1, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-08-23T17:51:43.030Z",
        "updated_at": "2021-10-04T19:58:37.631Z",
        "due_date": "2021-10-01",
        "start_date": "2021-09-25",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/188"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 8,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2929",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2929",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2929/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2929/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2929",
        "relative": "#2929",
        "full": "meltano/meltano#2929"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 825398,
      "relative_position": -16929
    },
    {
      "id": 92217045,
      "iid": 2898,
      "project_id": 7603319,
      "title": "Create performance debugging guide",
      "description": "How can we determine if the tap is slow or the target is slow, and based on that, can we recommend a tuning approach?\n\nOptionally, we can log related issues and tooling ideas for exposing metrics on backpressure, throughput, etc.",
      "state": "closed",
      "created_at": "2021-08-18T16:17:18.993Z",
      "updated_at": "2022-05-30T09:35:08.877Z",
      "closed_at": "2022-05-30T09:35:08.846Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "flow::Triage",
        "valuestream::Ecosystem"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2898",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2898",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2898/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2898/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2898",
        "relative": "#2898",
        "full": "meltano/meltano#2898"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 776194,
      "relative_position": -15903
    }
  ]
}
