{
  "cookies": {
    "_cfuvid": "kjRooxw8Nev0QloHTPNF7t_MHRReK2EkFELCx6ARcV8-1753217245541-0.0.1.1-604800000"
  },
  "created_at": "2025-07-22T20:47:25.464792+00:00",
  "elapsed": 1.325311,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "9635cb013d7b3863-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Tue, 22 Jul 2025 20:47:25 GMT",
    "ETag": "W/\"a1958c2d27c32d84afe0208d9dfb125e\"",
    "Link": "<https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=8&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"prev\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=10&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"next\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=1&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"first\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=10&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=kjRooxw8Nev0QloHTPNF7t_MHRReK2EkFELCx6ARcV8-1753217245541-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-18-lb-gprd",
    "gitlab-sv": "gke-cny-api",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"6185e5b79f09718c49f384474d4ff81a\",\"version\":\"1\"}",
    "x-next-page": "10",
    "x-page": "9",
    "x-per-page": "20",
    "x-prev-page": "8",
    "x-request-id": "6185e5b79f09718c49f384474d4ff81a",
    "x-runtime": "1.095591",
    "x-total": "200",
    "x-total-pages": "10"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "REDACTED"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&page=9&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&page=9&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z",
  "_decoded_content": [
    {
      "id": 101608693,
      "iid": 321,
      "project_id": 22672923,
      "title": "Discuss: naming and dev practices for combined tap/target hybrids (\"ambidextrous connectors\")",
      "description": "With the release of SQL support in the SDK, it's now much easier to make a target connector which also ships with a tap connector.\n\nI've created a sample with `target-sqlite` refactor. With very little extra code, the target can also ship with a `tap` version of itself which is installable at the same time.\n\nI wanted to suggest a naming convention of `singer-<dbname>` when the tap and target are both packaged together.\n\n## All SQL targets could be taps (but not all SQL taps would be targets).\n\nNote: To be clear, my observation at this point is that creating a target is more work to create than the tap because of things like file uploads to temp storage such as S3, batch updates, type conversion, column type upgrades, etc. It probably would not be reasonable for every tap to also contain a target definition.\n\nIn contrast, it map be _fully_ reasonable - and perhaps even a best practice - that **every SQL target should also be a tap**. This means reverse ETL use cases are enabled by default, that users can more easily and programmatically interrogate the data they are landing, and testing the target would then already have built in confirmation capabilities, since the landed data can be extracted out and then compared with its original source data.\n\n\n<!-- Labels to add for triaging -->",
      "state": "closed",
      "created_at": "2022-01-31T17:25:12.454Z",
      "updated_at": "2022-05-30T00:07:27.593Z",
      "closed_at": "2022-05-30T00:07:27.573Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "Office Hours::Discussed",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/321",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/321",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/321/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/321/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#321",
        "relative": "#321",
        "full": "meltano/sdk#321"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 101616280,
      "iid": 322,
      "project_id": 22672923,
      "title": "Document that `get_starting_timestamp` requires setting a non-null replication_key",
      "description": "From slack thread: https://meltano.slack.com/archives/C01TCRBBJD7/p1643646009947879\n\n`Stream.get_starting_timestamp(context)` returns `None` if `Stream.replication_key` is not set for the stream. Documentation for [`get_starting_timestamp(context)`](https://sdk.meltano.com/en/latest/classes/singer_sdk.Stream.html#singer_sdk.Stream.get_starting_timestamp) should indicate that requirement.",
      "state": "closed",
      "created_at": "2022-01-31T19:53:18.019Z",
      "updated_at": "2022-05-30T00:07:35.090Z",
      "closed_at": "2022-05-30T00:07:35.068Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Documentation",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/322",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 1,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/322",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/322/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/322/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#322",
        "relative": "#322",
        "full": "meltano/sdk#322"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 81,
      "epic": {
        "id": 94267,
        "iid": 81,
        "title": "Meltano Documentation improvements",
        "url": "/groups/meltano/-/epics/81",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 101620356,
      "iid": 323,
      "project_id": 22672923,
      "title": "Remove other references to editable installs not being supported with Poetry",
      "description": "When we documented support for [PEP 660 in `poetry-core` allowing editable installations for SDK-based packages](https://gitlab.com/meltano/sdk/-/merge_requests/231), we failed to remove a few references to the old shell script and editable installations not being supported. \n\n- https://sdk.meltano.com/en/latest/cli_commands.html#meltano\n- https://sdk.meltano.com/en/latest/python_tips.html#if-you-already-know-about-virtual-environments",
      "state": "closed",
      "created_at": "2022-01-31T21:17:13.668Z",
      "updated_at": "2022-05-30T00:07:43.649Z",
      "closed_at": "2022-05-30T00:07:43.628Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Documentation",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/323",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 1,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/323",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/323/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/323/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#323",
        "relative": "#323",
        "full": "meltano/sdk#323"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 81,
      "epic": {
        "id": 94267,
        "iid": 81,
        "title": "Meltano Documentation improvements",
        "url": "/groups/meltano/-/epics/81",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 101857087,
      "iid": 324,
      "project_id": 22672923,
      "title": "Define additionalProperties in stream maps config",
      "description": "The following discussion from !236 should be addressed:\n\n- [ ] @edgarrmondragon started a [discussion](https://gitlab.com/meltano/sdk/-/merge_requests/236#note_814339424):  (+3 comments)\n\n    > @aaronsteers Wdyt about defining `additionalProperties` here so the expected _value_ types are validated?\n    > \n    > For example: https://github.com/MeltanoLabs/meltano-map-transform/blob/fc779f8664e4d9255f6c5d8a5ee1321f84f3f014/meltano_map_transform/mapper.py",
      "state": "closed",
      "created_at": "2022-02-04T00:02:31.949Z",
      "updated_at": "2022-05-30T00:07:50.395Z",
      "closed_at": "2022-05-30T00:07:50.372Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/324",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 1,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/324",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/324/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/324/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#324",
        "relative": "#324",
        "full": "meltano/sdk#324"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 101857461,
      "iid": 325,
      "project_id": 22672923,
      "title": "Add docs entry with config instruction for record flattening",
      "description": "As raised here: https://gitlab.com/meltano/sdk/-/merge_requests/236#note_831393994",
      "state": "closed",
      "created_at": "2022-02-04T00:26:08.129Z",
      "updated_at": "2022-05-30T00:07:57.433Z",
      "closed_at": "2022-05-30T00:07:57.414Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/325",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/325",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/325/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/325/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#325",
        "relative": "#325",
        "full": "meltano/sdk#325"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": {
        "id": 56416,
        "iid": 56,
        "sequence": 3,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.839Z",
        "updated_at": "2022-05-30T00:05:02.370Z",
        "start_date": "2022-05-23",
        "due_date": "2022-05-29",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56416"
      },
      "health_status": null
    },
    {
      "id": 102396191,
      "iid": 328,
      "project_id": 22672923,
      "title": "Make it easier to run arbitrary decorated requests in REST tap",
      "description": "Currently, if I want to make a request using the retry/backoff logic I've defined for the regular requests in a REST tap, I have to do something like this each time:\n\n```\n        decorated_request = self.request_decorator(self._request)\n        prepared_request = cast(\n            requests.PreparedRequest,\n            self.requests_session.prepare_request(\n                requests.Request(\n                    method=\"post\",\n                    url=self.url_base + \"/api/views\",\n                    headers=headers,\n                    json=payload,\n                ),\n            ),\n        )\n        resp = decorated_request(prepared_request, None)\n```\n\nThis happened while working on tap-gorgias here: https://github.com/brooklyn-data/tap-gorgias/pull/1/files\n\nFinding a way to make this less verbose would be great. I wonder if it can be tackled as part of https://gitlab.com/meltano/sdk/-/issues/319.",
      "state": "closed",
      "created_at": "2022-02-14T10:02:04.932Z",
      "updated_at": "2022-05-30T00:08:20.146Z",
      "closed_at": "2022-05-30T00:08:20.125Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 2585766,
        "username": "NiallRees",
        "public_email": "",
        "name": "Niall",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/2585766/avatar.png",
        "web_url": "https://gitlab.com/NiallRees"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/328",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/328",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/328/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/328/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#328",
        "relative": "#328",
        "full": "meltano/sdk#328"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 102429949,
      "iid": 329,
      "project_id": 22672923,
      "title": "Reference Implementations",
      "description": "I'm not sure where the SDK docs are managed but there are some other good code samples and reference implementations that can get added. Right now the list is limited https://sdk.meltano.com/en/latest/code_samples.html. \n\nAlso linking to the [academy repo](https://gitlab.com/meltano/academy/-/blob/main/labs/build_your_own_tap.md) and MeltanoLabs might be good resources too.",
      "state": "closed",
      "created_at": "2022-02-14T17:17:53.661Z",
      "updated_at": "2022-05-30T00:08:27.737Z",
      "closed_at": "2022-05-30T00:08:27.718Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Documentation",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/329",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/329",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/329/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/329/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#329",
        "relative": "#329",
        "full": "meltano/sdk#329"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 81,
      "epic": {
        "id": 94267,
        "iid": 81,
        "title": "Meltano Documentation improvements",
        "url": "/groups/meltano/-/epics/81",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 102643272,
      "iid": 330,
      "project_id": 22672923,
      "title": "Bug - SDK Docs Broken Link 404",
      "description": "https://sdk.meltano.com/en/latest/dev_guide.html#target-development-overview\n\n> You can also reference the Meltano Tutorial for a more detailed guide.\n\nLinks out to https://meltano.com/tutorials/create-a-custom-extractor.html which gives a 404.\nI think the new link should be https://docs.meltano.com/tutorials/custom-extractor.",
      "state": "closed",
      "created_at": "2022-02-17T19:54:24.323Z",
      "updated_at": "2022-05-30T00:08:34.647Z",
      "closed_at": "2022-05-30T00:08:34.630Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Documentation",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/330",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/330",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/330/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/330/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#330",
        "relative": "#330",
        "full": "meltano/sdk#330"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 102711791,
      "iid": 332,
      "project_id": 22672923,
      "title": "Add typing helper classes to auto-generated Reference docs",
      "description": "We don't (yet) have `typing` helper classes documented in our generated reference docs.\n\n\n\nhttps://sdk.meltano.com/en/latest/reference.html\n\nThe classes are defined here:\n\nhttps://gitlab.com/meltano/sdk/-/blob/main/singer_sdk/typing.py\n\nDocs templates and generators are here:\n\n- https://gitlab.com/meltano/sdk/-/blob/main/docs/reference.rst\n- https://gitlab.com/meltano/sdk/-/tree/main/docs/classes",
      "state": "closed",
      "created_at": "2022-02-18T21:51:13.311Z",
      "updated_at": "2022-05-30T00:08:50.452Z",
      "closed_at": "2022-05-30T00:08:50.436Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Documentation",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/332",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/332",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/332/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/332/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#332",
        "relative": "#332",
        "full": "meltano/sdk#332"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 102944396,
      "iid": 334,
      "project_id": 22672923,
      "title": "Support enumerated values in SDK JSON schema helpers",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nSupport `enum` in JSON Schema helpers.\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nValidation of enumerated values in records and package configurations.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\nAdd an `enum` keyword argument to the `Property` constructor.\n\nDocs: https://json-schema.org/understanding-json-schema/reference/generic.html#enumerated-values\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\n`CustomType` is a way to do this if users don't mind typing a raw JSON Schema dictionary.",
      "state": "closed",
      "created_at": "2022-02-23T17:36:37.408Z",
      "updated_at": "2022-05-30T00:09:05.813Z",
      "closed_at": "2022-05-30T00:09:05.793Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/334",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/334",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/334/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/334/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#334",
        "relative": "#334",
        "full": "meltano/sdk#334"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 102964430,
      "iid": 335,
      "project_id": 22672923,
      "title": "Consider making logging more granular",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nLeverage Python's [dot-separated logger hierarchy](https://docs.python.org/3/library/logging.html#logging.getLogger) to give developers more control over logging behavior and make it more granular:\n\n- Behavior: handler, format, level\n- Source: tap, stream, SDK.\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nDevelopers can make output more or less verbose for certain streams, etc.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\n![Screen_Shot_2022-02-23_at_21.06.12](/uploads/fb0c52c2bf98c005a1ddec7d408c804d/Screen_Shot_2022-02-23_at_21.06.12.png)\n\n```python\n>>> import logging\n>>> formatter = logging.Formatter(\"{asctime} {levelname} {message}\", style=\"{\")\n>>> handler = logging.StreamHandler()\n>>> handler.setFormatter(formatter)\n>>> tap_logger = logging.getLogger(\"tap-example\")\n>>> tap_logger.addHandler(handler)\n>>> tap_logger.setLevel(logging.INFO)  # Display INFO and up\n>>> stream_logger = logging.getLogger(\"tap-example.my_stream\")\n>>> stream_logger.setLevel(logging.WARNING)  # Display WARNING and up\n>>> tap_logger.debug(\"Info from tap\")\n>>> tap_logger.info(\"Info from tap\")\n2022-02-23 21:10:34,165 INFO Info from tap\n>>> stream_logger.info(\"Info from stream\")\n>>> stream_logger.warning(\"Warning from stream\")\n2022-02-23 21:10:34,175 WARNING Warning from stream\n```\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nWe _may_ not want developers to make their packages to quiet so end-users have useful debugging information by default.",
      "state": "closed",
      "created_at": "2022-02-24T03:15:15.642Z",
      "updated_at": "2022-05-30T00:09:13.627Z",
      "closed_at": "2022-05-30T00:09:13.604Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/335",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/335",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/335/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/335/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#335",
        "relative": "#335",
        "full": "meltano/sdk#335"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 103860319,
      "iid": 339,
      "project_id": 22672923,
      "title": "Consider type helpers for IDN/IRI JSON Schema types",
      "description": "The following discussion from !250 should be addressed:\n\n- [ ] @aaronsteers started a [discussion](https://gitlab.com/meltano/sdk/-/merge_requests/250#note_855037495):  (+3 comments)\n\nThese were removed from !250 but we can re-add them if there is strong value in doing so:\n\n* IDNHostNameType\n* IDNEmailType\n* IRIType\n* IRIReferenceType",
      "state": "closed",
      "created_at": "2022-02-28T23:45:16.177Z",
      "updated_at": "2022-05-30T00:09:44.388Z",
      "closed_at": "2022-05-30T00:09:44.371Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/339",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 1,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/339",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/339/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/339/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#339",
        "relative": "#339",
        "full": "meltano/sdk#339"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 103958136,
      "iid": 340,
      "project_id": 22672923,
      "title": "Duplicates in `required` field of `ObjectType` JSON schema",
      "description": "## Summary\nhttps://gitlab.com/meltano/sdk/-/merge_requests/250#note_859372536\n\nIf any `Property` objects have a **non-unique name** (i.e. duplicates) and are also **required**, in the resulting schema dictionary:\n- `properties` are correctly merged by name\n- `required` will contain a name for each duplicate property\n\n\n## Steps to reproduce\n```py\nproperties = [\n    Property(\"id\", StringType),\n    Property(\"email\", StringType, True),\n    Property(\"email\", StringType, True), # duplicate required property\n    Property(\"username\", StringType, True),\n    Property(\"phone_number\", StringType),\n]\n\nObjectType(*properties).type_dict\n```\n```\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": [\n                \"string\",\n                \"null\",\n            ],\n        },\n        \"email\": {\n            \"type\": [\"string\"],\n        },\n        \"username\": {\n            \"type\": [\"string\"],\n        },\n        \"phone_number\": {\n            \"type\": [\n                \"string\",\n                \"null\",\n            ],\n        }\n    },\n    \"required\": [\n        \"email\",\n        \"email\",\n        \"username\",\n    ],\n}\n```\n\n## What is the current bug behavior?\nRequired properties with the same name are merged in `properties`, but the names remain duplicated in `required`.\n\n\n## What is the expected correct behavior?\n```py\nproperties = [\n    Property(\"id\", StringType),\n    Property(\"email\", StringType, True),\n    Property(\"email\", StringType, True), # duplicate required property\n    Property(\"username\", StringType, True),\n    Property(\"phone_number\", StringType),\n]\n\nObjectType(*properties).type_dict\n```\n```\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": [\n                \"string\",\n                \"null\",\n            ],\n        },\n        \"email\": {\n            \"type\": [\"string\"],\n        },\n        \"username\": {\n            \"type\": [\"string\"],\n        },\n        \"phone_number\": {\n            \"type\": [\n                \"string\",\n                \"null\",\n            ],\n        }\n    },\n    \"required\": [\n        \"email\",\n        \"username\",\n    ],\n}\n```\n\n## Possible fixes\nhttps://gitlab.com/meltano/sdk/-/blob/main/singer_sdk/typing.py#L281\n\n```py\n# see https://stackoverflow.com/a/7961390\nresult[\"required\"] = list(dict.fromkeys(required)) # filter duplicates from list\n```",
      "state": "closed",
      "created_at": "2022-03-02T12:06:24.427Z",
      "updated_at": "2022-05-30T00:09:52.330Z",
      "closed_at": "2022-05-30T00:09:52.311Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 8647943,
        "username": "ReubenFrankel",
        "public_email": "",
        "name": "ReubenFrankel",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/5f4b411a2c37f2176752600b5d2e3f64627c23a48d0cd13cf25ae1d188956a18?s=80&d=identicon",
        "web_url": "https://gitlab.com/ReubenFrankel"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/340",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/340",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/340/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/340/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#340",
        "relative": "#340",
        "full": "meltano/sdk#340"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 103980979,
      "iid": 342,
      "project_id": 22672923,
      "title": "How should numeric transforms be handed from tap to target?",
      "description": "Following from https://meltano.slack.com/archives/C01PKLU5D1R/p1645780848809499\n\nThere's a question on the proper way for taps and target to communicate types for decimal/currency values:\n\nAs a first go, here's a set of principles to kick of the convesertation:\n\nFirst-order principles:\n\n1. Numbers should be `number` type, not string.\n2. Target needs to have _at least_ a large enough field for the data to land successfully.\n3. Target should always be free to create a field _larger_ than is needed.\n\nBonus / second-order principles:\n\n1. Should we have standard hints for precision and size requirements?\n   - For example, some places we can put hints are: `format`, `min`, `max`, and `multipleOf`\n   1. How does the tap communicate these?\n   2. For targets which are listening to those type hints, how should they interpret those type hints?",
      "state": "closed",
      "created_at": "2022-03-02T17:53:18.346Z",
      "updated_at": "2022-05-30T00:10:07.445Z",
      "closed_at": "2022-05-30T00:10:07.425Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/342",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/342",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/342/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/342/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#342",
        "relative": "#342",
        "full": "meltano/sdk#342"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 104395057,
      "iid": 344,
      "project_id": 22672923,
      "title": "Hyphens Not Supported by SQL Targets",
      "description": "Related to a discussion in https://github.com/MeltanoLabs/target-athena/pull/42\n\nCommonly SQL targets need to coalesce the stream name into a name thats acceptable by the target database. @aaronsteers mentioned:\n\n>Historically, the dash has been used as a delimiter between table, scheme, and db name parts.\n\nWe should consider using an underscore instead, or just make sure that the SDK takes into account converting the stream name to an acceptable table name.\n\nExamples:\n- Athena https://docs.aws.amazon.com/athena/latest/ug/glue-best-practices.html#schema-names\n- Snowflake https://github.com/transferwise/pipelinewise-target-snowflake/blob/83761af19d57b09786114abab4b3afa6c15ef735/target_snowflake/db_sync.py#L362\n- Probably many others too",
      "state": "closed",
      "created_at": "2022-03-08T14:17:12.668Z",
      "updated_at": "2022-05-30T00:10:23.011Z",
      "closed_at": "2022-05-30T00:10:22.987Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/344",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/344",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/344/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/344/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#344",
        "relative": "#344",
        "full": "meltano/sdk#344"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2339</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 104421836,
      "iid": 345,
      "project_id": 22672923,
      "title": "Consider levaraging PEP 585 in our codebase",
      "description": "By dropping support for [Python 3.6](https://gitlab.com/meltano/sdk/-/issues/316), we opened the gate for us using [PEP 585](https://www.python.org/dev/peps/pep-0585/) in our codebase.\n\nThat means we can make these simplifying changes:\n\n```diff\n- from typing import Dict, Optional\n+ from __future__ import annotations\n\n- def my_function(value: Optional[str]) -> Dict[str, bool]\n+ def my_function(value: str | None) -> dict[str, bool]\n     ...\n```\n\nNotes:\n\n- We probably don't want to do this for the entire codebase in a single MR, otherwise we may end upt have _a lot_ of flake8 complaints because of all the files touched.\n- An incremental approach with pre-commit may be the way to go.\n- We could also just keep it limited to an update to our [Python style guide](https://docs.meltano.com/contribute/style).",
      "state": "closed",
      "created_at": "2022-03-08T20:13:09.435Z",
      "updated_at": "2022-05-30T00:10:30.568Z",
      "closed_at": "2022-05-30T00:10:30.547Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Tech Debt",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2252673,
        "iid": 193,
        "group_id": 2524164,
        "title": "Internal WIP",
        "description": "",
        "state": "active",
        "created_at": "2021-09-27T19:02:31.281Z",
        "updated_at": "2021-09-28T18:29:26.781Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/193"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/345",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/345",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/345/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/345/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#345",
        "relative": "#345",
        "full": "meltano/sdk#345"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 104490745,
      "iid": 346,
      "project_id": 22672923,
      "title": "JSON decimal values should be parsed as Python `decimal.Decimal` in targets when reading Singer messages",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nJSON decimal values should be parsed as Python `decimal.Decimal` in targets when reading Singer messages.\n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\nTry piping a tap that outputs similar to `{\"type\": \"number\", \"multipleOf\": \"0.001\"}` to a target that performs JSON schema validation. Values that should pass validation will fail.\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\nDecimals are loaded as `float` values which may cause problems when their precision is important, e.g. when validating against JSON schema `multipleOf' .\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nDecimals should be loaded as `decimal.Decimal` to preserve precision.\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\n```python\n>>> import jsonschema\n>>> jsonschema.validate(48.867082, {\"type\": \"number\", \"multipleOf\": 0.000001})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/edgarramirez/Library/Caches/pypoetry/virtualenvs/singer-sdk-S0flctL8-py3.9/lib/python3.9/site-packages/jsonschema/validators.py\", line 934, in validate\n    raise error\njsonschema.exceptions.ValidationError: 48.867082 is not a multiple of 1e-06\n\nFailed validating 'multipleOf' in schema:\n    {'multipleOf': 1e-06, 'type': 'number'}\n\nOn instance:\n    48.867082\n>>> import decimal\n>>> jsonschema.validate(decimal.Decimal(\"48.867082\"), {\"type\": \"number\", \"multipleOf\": decimal.Decimal(\"0.000001\")})\n```\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\n\nThe `jsonschema` library dev recommends loading JSON decimals as Python `decimal.Decimal`: https://github.com/Julian/jsonschema/issues/810#issuecomment-846025354.\n\nUsing `json.loads(..., parse_float=decimal.Decimal)` in https://gitlab.com/meltano/sdk/-/blob/b394e1a9c0d68a554640974c05be1c9d548270ee/singer_sdk/io_base.py#L77 should fix the issue.",
      "state": "closed",
      "created_at": "2022-03-09T16:17:31.294Z",
      "updated_at": "2022-05-30T00:10:38.426Z",
      "closed_at": "2022-05-30T00:10:38.407Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/346",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/346",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/346/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/346/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#346",
        "relative": "#346",
        "full": "meltano/sdk#346"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 104546762,
      "iid": 347,
      "project_id": 22672923,
      "title": "RESTStream: PreparedRequest - Be compatible with \"standard\" Session method behaviour",
      "description": "## Summary\nThe `requests` library allows usage of certain environment variables to control its behaviour.\n\nOne of these environment variables is `REQUESTS_CA_BUNDLE` that is used to override the default CA bundle that ships with the `requests` library. Which is a needed feature in order to work with SSL-inspection devices and other 'man-in-the-middle' proxy systems.\n\nAs per `requests` documentation, in order to provide the same behaviour in regards to environment variables when using the `PreparedRequest` class instead of the `Session` class, additional preparation is needed via the `merge_environment_settings` API method, which provides the compatible behaviour.\n\n[Link](https://docs.python-requests.org/en/latest/user/advanced/#prepared-requests)\n\n\n## Proposed benefits\nProvide the same behaviour to Meltano SDK users that is already afforded to users of the `requests` library.\n\n## Proposal details\nUse `merge_environment_settings` API before calling `send` on the `PreparedRequest` object.\n\n## Best reasons not to build\nExisting users who are relying on this unexpected behaviour (i.e. that Meltano RESTStream class is \"ignoring\" the otherwise respected `REQUESTS_CA_BUNDLE`, `CURL_CA_BUNDLE`, `HTTP_PROXY`, `HTTPS_PROXY` and `NO_PROXY` environment variables) might have their set ups broken by enabling this usually expected behaviour of the standard `requests` functionality.",
      "state": "closed",
      "created_at": "2022-03-10T12:23:07.894Z",
      "updated_at": "2022-05-30T00:10:45.767Z",
      "closed_at": "2022-05-30T00:10:45.731Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1928419,
        "username": "cwegener",
        "public_email": "",
        "name": "Christoph Wegener",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/1eab48f696eb1969a0ae24dba921db930f94a4f4949305cb65580716e6aff04a?s=80&d=identicon",
        "web_url": "https://gitlab.com/cwegener"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/347",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/347",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/347/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/347/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#347",
        "relative": "#347",
        "full": "meltano/sdk#347"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2339</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 104932410,
      "iid": 348,
      "project_id": 22672923,
      "title": "As a user, I need validation for required fields",
      "description": "## Summary\nAdd a property to plugin settings configuration called 'required'\n\n## Proposed benefits\nOnce available, deployments of the taps/targets/other plugins will be able to validate required settings.\n\n\n## Proposal details\n\n### `required` Setting Field\nThe `required` setting field should define the conditions under which the setting is required.\n\n- If **not present**, the setting should be considered **always required** implicitly\n- If **present** with a value of **`true`**, the setting should be considered **always required**\n- If **present** with a value of **`false`**, the setting should be considered **never required** (optional)\n- If **present** with a value conforming to a **[SpEL](https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html) expression**, the setting should be considered **required** if the expression evaluates to `true` and **not required** if the expression evaluates to `false`\n\n## Example\n\n### `credential_type` Setting\nSpecifiying a `credential_type` setting should define options for use in `required_when` expression.\n\n### `tap-google-analytics` Example\n```yml\nextractors:\n  - name: tap-google-analytics\n    label: Google Analytics\n    description: App and website analytics platform hosted by Google\n    namespace: tap_google_analytics\n    variant: meltano\n    docs: \"https://hub.meltano.com/extractors/google-analytics.html\"\n    repo: https://gitlab.com/meltano/tap-google-analytics\n    pip_url: \"git+https://gitlab.com/meltano/tap-google-analytics.git\"\n    capabilities:\n      - catalog\n      - discover\n    settings:\n      - name: credential_type # required when using 'credentials_file' credential_type\n        kind: options\n        options:\n          - label: OAuth\n            value: oauth\n          - label: Credentials File\n            value: credentials_file\n      - name: key_file_location # required when using 'credentials_file' credential_type\n        env_aliases: [GOOGLE_ANALYTICS_API_CLIENT_SECRETS]\n        kind: file\n        value: $MELTANO_PROJECT_ROOT/client_secrets.json\n        label: Client Secrets\n        placeholder: Ex. client_secrets.json\n        required_when: credential_type == 'credentials_file'\n      - name: oauth_credentials.client_id # required when using 'oauth' credential_type\n        env_aliases: [GOOGLE_ANALYTICS_API_OAUTH_CLIENT_ID]\n        kind: password\n        label: OAuth Client ID\n        required_when: credential_type == 'oauth'\n      - name: oauth_credentials.client_secret # required when using 'oauth' credential_type\n        env_aliases: [GOOGLE_ANALYTICS_API_OAUTH_CLIENT_SECRET]\n        kind: password\n        label: OAuth Client Secret\n        required_when: credential_type == 'oauth'\n      - name: oauth_credentials.access_token # required when using 'oauth' credential_type\n        env_aliases: [GOOGLE_ANALYTICS_API_OAUTH_ACCESS_TOKEN]\n        kind: password\n        label: OAuth Access Token\n        required_when: credential_type == 'oauth'\n      - name: oauth_credentials.refresh_token # required when using 'oauth' credential_type\n        env_aliases: [GOOGLE_ANALYTICS_API_OAUTH_REFRESH_TOKEN]\n        kind: password\n        label: OAuth Refresh Token\n        required_when: credential_type == 'oauth'\n      - name: view_id # always required\n        env_aliases: [GOOGLE_ANALYTICS_API_VIEW_ID]\n        label: View ID\n        placeholder: Ex. 198343027\n        required_when: true\n      - name: reports # not required (optional)\n        env_aliases: [GOOGLE_ANALYTICS_API_REPORTS]\n        label: Reports\n        placeholder: Ex. my_report_definition.json\n      - name: start_date # always required\n        env_aliases: [GOOGLE_ANALYTICS_API_START_DATE]\n        kind: date_iso8601\n        description: This property determines how much historical data will be extracted. Please be aware that the larger the time period and amount of data, the longer the initial extraction can be expected to take.\n        required_when: true\n      - name: end_date # not required (optional)\n        env_aliases: [GOOGLE_ANALYTICS_API_END_DATE]\n        kind: date_iso8601\n        description: Date up to when historical data will be extracted.\n```\n\n\n## Best reasons not to build\nThis feature will improve upon, and deprecate the settings group validation from discovery.yaml use.",
      "state": "closed",
      "created_at": "2022-03-16T15:16:21.469Z",
      "updated_at": "2022-05-30T00:10:53.549Z",
      "closed_at": "2022-05-30T00:10:53.531Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5997370,
        "username": "aphethean",
        "public_email": "",
        "name": "Aaron Phethean",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/48ce380aaf5b7383a2ac09d0846a47ef275180f1cc025b5336034a479564e227?s=80&d=identicon",
        "web_url": "https://gitlab.com/aphethean"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/348",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/348",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/348/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/348/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#348",
        "relative": "#348",
        "full": "meltano/sdk#348"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 104934027,
      "iid": 349,
      "project_id": 22672923,
      "title": "As a user, I need to encrypt and hide fields, or encrypt but not hide fields",
      "description": "## Summary\nAdd a property to plugin settings configuration called 'hidden' and deprecate kind=hidden\n\n## Proposed benefits\nOnce available, deployments of the taps/targets/other plugins will be able to hide settings from users and store them securely when necessary.\n\n\n## Proposal details\n\nWhen building a dynamic UI on top of the plugin settings, we've found that kind=hidden is incompatible with kind=password\n\nAs a example, kind=password means the setting is stored encrypted.\nWhereas, kind=hidden only means that the setting should not be displayed.\n\nThe following permutations are necessary:\n- encrypted + hidden\n- plain txt + hidden\n- encrypted + not hidden (visible)\n- plain txt + not hidden (visible)\n\n\n### `hidden` Setting Field\nThe `hidden` setting field should define the conditions under which the setting is visible for configuration by the user.\n\n- If **not present**, the setting should be considered **not hidden** implicitly  (i.e. visible for configuration)\n- If **present** with a value of **`true`**, the setting should be hidden from the user\n- If **present** with a value of **`false`**, the setting should be shown to the user (optional)\n\n## Example\n\n### `oauth_credentials.access_token` Setting\nConfiguration for an `oauth_credentials.access_token` setting should be both hidden from the user, and stored encrypted.\n\nIn this case we need\n- kind: password\n- hidden: true\n\n\n### `oauth_credentials.scope` Setting\nConfiguration for an `oauth_credentials.scope` setting is not sensitive, but does not need to be shown to the user for configuration.\n\nIn this case we need\n- kind: string\n- hidden: true\n\n\n### `tap-googleads` Example\n```yml\nextractors:\n  - name: tap-googleads\n    namespace: tap_googleads\n    label: Google Ads\n    image_url: /assets/images/datasource/tap-googleads.svg\n    description: |-\n        App and website ads platform hosted by Google.\n    docs: ${docsBaseUrl}/data-sources/tap-googleads/\n    repo: https://github.com/Matatika/tap-googleads\n    pip_url: git+https://github.com/Matatika/tap-googleads@v0.3.0\n    capabilities:\n      - catalog\n      - discover\n      - state\n    settings:\n      - name: oauth_credentials.authorization_url\n        kind: hidden\n        label: OAuth identity provider authorization endpoint used create and refresh tokens\n        value: https://oauth2.googleapis.com/token\n      - name: oauth_credentials.scope\n        kind: hidden\n        label: OAuth scopes we need to request access to\n        value: https://www.googleapis.com/auth/adwords\n      - name: oauth_credentials.access_token\n        kind: hidden\n        label: Access Token\n      - name: oauth_credentials.refresh_token\n        kind: hidden\n        label: OAuth Refresh Token\n      - name: oauth_credentials.refresh_proxy_url\n        kind: hidden\n        label: Will be called with 'oauth_credentials.refresh_token' to refresh the access token\n        required: false\n      - name: oauth_credentials.refresh_proxy_url_auth\n        kind: hidden\n        label: Sets Authorization header on 'oauth_credentials.refresh_url' request\n        required: false\n      - name: oauth_credentials.client_id\n        kind: hidden\n        label: OAuth Client ID\n        required: false\n      - name: oauth_credentials.client_secret\n        kind: hidden\n        label: OAuth Client Secret\n        required: false\n      - name: start_date\n        kind: date_iso8601\n        label: Start Date\n        required: false\n      - name: end_date\n        kind: date_iso8601\n        label: End Date\n        required: false\n      - name: developer_token\n        kind: hidden\n        value: some_value\n        label: Developer Token\n      - name: customer_id\n        label: Customer Id\n```\n\n\n## Best reasons not to build\nDeprecation proposed in this feature will eventually mean a migration for users of kind=hidden",
      "state": "closed",
      "created_at": "2022-03-16T15:32:32.334Z",
      "updated_at": "2022-05-30T00:11:01.393Z",
      "closed_at": "2022-05-30T00:11:01.373Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5997370,
        "username": "aphethean",
        "public_email": "",
        "name": "Aaron Phethean",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/48ce380aaf5b7383a2ac09d0846a47ef275180f1cc025b5336034a479564e227?s=80&d=identicon",
        "web_url": "https://gitlab.com/aphethean"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/349",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/349",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/349/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/349/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#349",
        "relative": "#349",
        "full": "meltano/sdk#349"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    }
  ]
}
