{
  "cookies": {
    "_cfuvid": "NghpmRsRCZyT1qgOFMAfFUxX_caCYDKeU0W6NNvtR0A-1747940859935-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:07:39.829072+00:00",
  "elapsed": 0.427868,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e9904ba84d89f-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:07:39 GMT",
    "ETag": "W/\"44308fcc107cfa38c40b1f56a8fcd167\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/110/issues?epic_iid=110&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/110/issues?epic_iid=110&id=2524164&page=1&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=NghpmRsRCZyT1qgOFMAfFUxX_caCYDKeU0W6NNvtR0A-1747940859935-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-38-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-c",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"8f66fbee609c6ebec63a55ba954f0809\",\"version\":\"1\"}",
    "x-next-page": "",
    "x-page": "1",
    "x-per-page": "20",
    "x-prev-page": "",
    "x-request-id": "8f66fbee609c6ebec63a55ba954f0809",
    "x-runtime": "0.209003",
    "x-total": "6",
    "x-total-pages": "1"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/110/issues"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/110/issues",
  "_decoded_content": [
    {
      "id": 106787913,
      "iid": 3411,
      "project_id": 7603319,
      "title": "Allow `python` interpreter overrides for specific plugins",
      "description": "@edgarrmondragon suggested in https://gitlab.com/meltano/meltano/-/issues/2575#note_646844224 on `Aug 9, 2021`:\n\n> @aaronsteers @pandemicsyn Perhaps we can just add the --python option to the venv creation call if a new python field is not null in the plugin configuration.\n\nIn theory, it should be possible to create venvs that run plugins using a different Python interpreter than Meltano itself is using.\n\nThis could be useful when Meltano itself is installed on a newer version of Python (such as 3.10) at the time of this writing, but an older version may be needed to run a specific plugin. As we expand the number of installable plugins to include everything on `https://hub.meltano.com`, the cases where specific plugins need an older (or newer) version of Python will in theory become much more common.\n\n## Possible spec:\n\n- Add an optional entry on plugin definitions: like `python` or (more explicit) `python_interpreter_path`.\n- When not set, the python interpreter used would be the Meltano one.\n- When set, the provided python interpreter would be used during plugin install (aka venv creation) instead of one Meltano is running under.",
      "state": "closed",
      "created_at": "2022-04-18T17:50:38.424Z",
      "updated_at": "2022-05-30T13:29:30.903Z",
      "closed_at": "2022-05-30T13:29:30.888Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351603,
        "iid": 212,
        "group_id": 2524164,
        "title": "Q4-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:40:00.762Z",
        "updated_at": "2021-11-29T21:40:00.762Z",
        "due_date": "2022-12-31",
        "start_date": "2022-10-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/212"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3411",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3411",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3411/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3411/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3411",
        "relative": "#3411",
        "full": "meltano/meltano#3411"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 110,
      "epic": {
        "id": 305782,
        "iid": 110,
        "title": "Improve Python 3.8 / 3.9 / 3.10 Support",
        "url": "/groups/meltano/-/epics/110",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1299326,
      "relative_position": -2565
    },
    {
      "id": 91883845,
      "iid": 2889,
      "project_id": 7603319,
      "title": "Support Python 3.10",
      "description": "### Problem to solve\n\nPrepare for the eventual release of Python 3.10, to enable support as soon as possible.\n\n### Target audience\n\nUsers of Meltano who want/need to run it on the latest Python.\n\n### Further details\n\nHopefully we can release Meltano with Python 3.10 support a few days after it comes out.\n\n### Proposal\n\n- Add 3.10 (or a release candidate) to our testing matrix\n- Make any necessary updates to the code\n- Watch out for dependencies without support for 3.10 and follow their development towards eventual support.\n\n### What does success look like, and how can we measure that?\n\nDeprecations and other breaking changes are handled so Meltano can run on Python 3.10\n\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references",
      "state": "closed",
      "created_at": "2021-08-12T15:46:09.525Z",
      "updated_at": "2022-05-30T09:33:49.895Z",
      "closed_at": "2022-05-30T09:33:49.872Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Deps",
        "kind::Bug",
        "urgency::default",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 11,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2889",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2889",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2889/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2889/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2889",
        "relative": "#2889",
        "full": "meltano/meltano#2889"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 110,
      "epic": {
        "id": 305782,
        "iid": 110,
        "title": "Improve Python 3.8 / 3.9 / 3.10 Support",
        "url": "/groups/meltano/-/epics/110",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1299323,
      "relative_position": -2052
    },
    {
      "id": 90291451,
      "iid": 2854,
      "project_id": 7603319,
      "title": "Warn when using python versions that supporting plugins do not yet support",
      "description": "With Airflow in #2545, but likely for other python-based plugins in the future, we may need a way to release a Meltano version which is not supported by all of our dependent plugins. By adding earlier support for higher versions of Python, we can manage the messaging and warning messages as and when a specific python version is not supported. Something like:\n\n```bash\n> meltano add orchestrator airflow\nERROR: Airflow is not yet supported in Python 3.9. To use the Airflow\nplugin, please downgrade to an earlier version of Python and then try \nagain. For more information: https://hub.meltano/plugins/airflow#supported-python-versions\n```\n\n## Alternatives Considered\n\nAn alternative (but probably a LOT more work) would be to use some kind of abstraction on top of `pyenv` during install so we can decouple the version of python running the plugin from the version of python used by Meltano.\n\n## Related Threads\n\nDiscussed in https://gitlab.com/meltano/meltano/-/merge_requests/2291#note_666834305:\n\nFrom @edgarrmondragon:\n\n> For future similar scenarios, I wonder if instead of constraining Meltano itself, we can add a warning on the installation of dbt (or any plugin for that matter) if the system Python is not compatible. That would require adding an `known_incompatibilities` or something similar to the `discovery.yml` plugin spec.",
      "state": "closed",
      "created_at": "2021-07-14T20:13:40.528Z",
      "updated_at": "2022-05-30T09:29:31.125Z",
      "closed_at": "2022-05-30T09:29:31.102Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Plugin Management",
        "kind::Tech Debt",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2854",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2854",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2854/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2854/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2854",
        "relative": "#2854",
        "full": "meltano/meltano#2854"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 110,
      "epic": {
        "id": 305782,
        "iid": 110,
        "title": "Improve Python 3.8 / 3.9 / 3.10 Support",
        "url": "/groups/meltano/-/epics/110",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 705288,
      "relative_position": -1539
    },
    {
      "id": 81313401,
      "iid": 2662,
      "project_id": 7603319,
      "title": "Bug re: Python 3.9 and asyncio",
      "description": "Although we don't support Python 3.9 yet, this still seemed worth logging because it may be directly actionable.\n\nUser Mindy [reported in Slack](https://meltano.slack.com/archives/C013EKWA2Q1/p1616192710083100?thread_ts=1616171802.065200&cid=C013EKWA2Q1) an error after what otherwise looks like a successful run:\n\n```\ntype object '_asyncio.Task' has no attribute 'all_tasks'\n```\n\nGoogling surfaced this related diagnosis: https://github.com/jupyterhub/jupyterhub/issues/3297\n\nWith this (fairly portable) fix: https://github.com/jupyterhub/jupyterhub/pull/3298/files",
      "state": "closed",
      "created_at": "2021-03-19T23:39:49.772Z",
      "updated_at": "2021-08-12T19:53:54.953Z",
      "closed_at": "2021-08-12T19:53:54.934Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "flow::Triage",
        "kind::Bug",
        "urgency::default",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2169711,
        "iid": 178,
        "group_id": 2524164,
        "title": "Fri: Aug 13, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-08-01T22:31:19.622Z",
        "updated_at": "2021-08-17T18:17:27.101Z",
        "due_date": "2021-08-13",
        "start_date": "2021-08-07",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/178"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2662",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2662",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2662/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2662/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2662",
        "relative": "#2662",
        "full": "meltano/meltano#2662"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 110,
      "epic": {
        "id": 305782,
        "iid": 110,
        "title": "Improve Python 3.8 / 3.9 / 3.10 Support",
        "url": "/groups/meltano/-/epics/110",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 697802,
      "relative_position": -513
    },
    {
      "id": 78029472,
      "iid": 2545,
      "project_id": 7603319,
      "title": "Support Python 3.9",
      "description": "<!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"regression\" or \"bug\" label and verify the issue you're about to submit isn't a duplicate.\n\nIf you are submitting an issue with a tap, please include:\n\n- account details\n- target details\n- entities selected  with meltano select (if you have selected any entities), as the bug may be related to a specific entity\n- the full elt command you are running\n- full output of the meltano elt command. Logs can get pretty long, so you can add the full log as a snippet in the Meltano project and add a link in the issue.\n--->\n\n### What is the current *bug* behavior?\n_What is happening now?_\nInstalling meltano via pip3 doesn't work using Python 3.9.0 (tested on Macbook Pro OS 10.15.7)\n\n\n### What is the expected *correct* behavior?\n_What should be happening?_\npip3 install succeeds\n\n\n### Steps to reproduce\n_How one can reproduce the issue?_\n\n```\n$ mkdir .venv\n$ python -m venv .venv/meltano\n$ python --version\nPython 3.9.0\n$ source .venv/meltano/bin/activate\n$ pip3 install meltano\n```\n\n### Relevant logs and/or screenshots\n_Please use code blocks (\\`\\`\\`) to format console output_\n\nsnippet of error below, full log attached [log.txt](/uploads/8db6bfac6b9e11947fc4ac52d018da82/log.txt)\n\n```\n12 warnings and 1 error generated.\n        error: Command \"clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk -I/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -Inumpy/core/include -Ibuild/src.macosx-10.15-x86_64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/usr/local/include -I/usr/local/opt/openssl@1.1/include -I/usr/local/opt/sqlite/include -I/Users/arjunbanker/Development/test/meltano/.venv/meltano/include -I/usr/local/Cellar/python@3.9/3.9.0_4/Frameworks/Python.framework/Versions/3.9/include/python3.9 -Ibuild/src.macosx-10.15-x86_64-3.9/numpy/core/src/common -Ibuild/src.macosx-10.15-x86_64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-10.15-x86_64-3.9/numpy/core/src/common -Ibuild/src.macosx-10.15-x86_64-3.9/numpy/core/src/npymath -c numpy/random/mtrand/mtrand.c -o build/temp.macosx-10.15-x86_64-3.9/numpy/random/mtrand/mtrand.o -MMD -MF build/temp.macosx-10.15-x86_64-3.9/numpy/random/mtrand/mtrand.o.d\" failed with exit status 1\n        ----------------------------------------\n    ERROR: Command errored out with exit status 1: /Users/arjunbanker/Development/test/meltano/.venv/meltano/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/private/var/folders/84/3d_vvqws75v94jfvhw8bys7c0000gn/T/pip-install-j_wbwgzp/numpy/setup.py'\"'\"'; __file__='\"'\"'/private/var/folders/84/3d_vvqws75v94jfvhw8bys7c0000gn/T/pip-install-j_wbwgzp/numpy/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /private/var/folders/84/3d_vvqws75v94jfvhw8bys7c0000gn/T/pip-record-30sq7_m4/install-record.txt --single-version-externally-managed --prefix /private/var/folders/84/3d_vvqws75v94jfvhw8bys7c0000gn/T/pip-build-env-w4adfc8s/overlay --compile --install-headers /private/var/folders/84/3d_vvqws75v94jfvhw8bys7c0000gn/T/pip-build-env-w4adfc8s/overlay/include/site/python3.9/numpy Check the logs for full command output.\n```\n\n\n### Possible fixes\n_If you can, link to the line of code that might be responsible for the problem or suggest a fix_\n\nUnsure currently, I worked around using a docker image.\n\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team",
      "state": "closed",
      "created_at": "2021-01-28T23:06:05.312Z",
      "updated_at": "2021-08-13T16:47:33.296Z",
      "closed_at": "2021-08-12T19:53:55.122Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "flow::Triage",
        "kind::Bug",
        "urgency::default",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2169711,
        "iid": 178,
        "group_id": 2524164,
        "title": "Fri: Aug 13, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-08-01T22:31:19.622Z",
        "updated_at": "2021-08-17T18:17:27.101Z",
        "due_date": "2021-08-13",
        "start_date": "2021-08-07",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/178"
      },
      "assignees": [],
      "author": {
        "id": 8087944,
        "username": "arjun42",
        "public_email": "",
        "name": "Arjun Banker",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/32ed164a0048a193e2f7d0479a9d01754053b72c8a4937f1042bf658dc867f7a?s=80&d=identicon",
        "web_url": "https://gitlab.com/arjun42"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2545",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2545",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2545/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2545/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2545",
        "relative": "#2545",
        "full": "meltano/meltano#2545"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 110,
      "epic": {
        "id": 305782,
        "iid": 110,
        "title": "Improve Python 3.8 / 3.9 / 3.10 Support",
        "url": "/groups/meltano/-/epics/110",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 697801,
      "relative_position": 0
    },
    {
      "id": 77246945,
      "iid": 2522,
      "project_id": 7603319,
      "title": "`meltano ui` warns about \"line buffering (buffering=1) isn't supported in binary mode\" on Python 3.8",
      "description": "\n### Overview\nI'm currently hosting Meltano on production grade. Thanks to state deployment guidelines and best practises in the \n`Meltano` documentation. \n- https://meltano.com/docs/production.html#deployment-in-production\n- https://meltano.com/docs/orchestration.html#orchestration\n- https://gitlab.com/meltano/files-docker-compose/-/tree/master/bundle\n\nWe had a quick chat with @DouweM related to issue.\nDouble checked each of what mentioned on the entire documentation page. However, I'm not able to overcome error by myself. Airflow is not consistent. So, I'm slog on to move forward. I need your helps to fix the error.\n\nI had a try with multiple meltano images that you provide on pipeline `meltano/meltano:latest`, `latest-python3.6`, `latest-python3.7` and `latest-python3.8`. I would say the most stable one was 3.6 and the logs belong to it.\n\n- Airflow logs can be found in here: [logs.txt](/uploads/b856009182e750ae047067e8c03d7bcf/logs.txt)\n\n```\nTraceback (most recent call last):\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/flask/app.py\", line 2447, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/flask/app.py\", line 1952, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/flask/app.py\", line 1821, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/flask/_compat.py\", line 39, in reraise\n    raise value\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/flask/app.py\", line 1950, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/flask/app.py\", line 1936, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/flask_admin/base.py\", line 69, in inner\n    return self._run_view(f, *args, **kwargs)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/flask_admin/base.py\", line 368, in _run_view\n    return fn(self, *args, **kwargs)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/flask_login/utils.py\", line 258, in decorated_view\n    return func(*args, **kwargs)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/airflow/www/utils.py\", line 384, in view_func\n    return f(*args, **kwargs)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/airflow/www/utils.py\", line 290, in wrapper\n    return f(*args, **kwargs)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/airflow/utils/db.py\", line 74, in wrapper\n    return func(*args, **kwargs)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/airflow/www/views.py\", line 1611, in tree\n    start_date=min_date, end_date=base_date, session=session)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/airflow/utils/db.py\", line 70, in wrapper\n    return func(*args, **kwargs)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/airflow/models/dag.py\", line 867, in get_task_instances\n    tis = tis.order_by(TaskInstance.execution_date).all()\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/sqlalchemy/orm/query.py\", line 3373, in all\n    return list(self)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/sqlalchemy/orm/loading.py\", line 100, in instances\n    cursor.close()\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    with_traceback=exc_tb,\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 182, in raise_\n    raise exception\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/sqlalchemy/orm/loading.py\", line 80, in instances\n    rows = [proc(row) for row in fetch]\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/sqlalchemy/orm/loading.py\", line 80, in <listcomp>\n    rows = [proc(row) for row in fetch]\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/sqlalchemy/orm/loading.py\", line 588, in _instance\n    populators,\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/sqlalchemy/orm/loading.py\", line 725, in _populate_full\n    dict_[key] = getter(row)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/sqlalchemy/sql/sqltypes.py\", line 1723, in process\n    return loads(value)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/dill/_dill.py\", line 283, in loads\n    return load(file, ignore, **kwds)\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/dill/_dill.py\", line 278, in load\n    return Unpickler(file, ignore=ignore, **kwds).load()\n  File \"/project/.meltano/orchestrators/airflow/venv/lib/python3.6/site-packages/dill/_dill.py\", line 481, in load\n    obj = StockUnpickler.load(self)\nValueError: unsupported pickle protocol: 5\n```\n\n- ![meltano_google-to-snowflake](/uploads/e6614cc6d91cfcbef7339cde61f9c81b/meltano_google-to-snowflake.png)\n\n### Similar Issues\n\n- https://gitlab.com/meltano/meltano/-/issues/2498\n- https://gitlab.com/meltano/meltano/-/issues/2261\n- https://gitlab.com/meltano/meltano/-/issues/1105\n\n### Possible fixes\nI assume that airflow bundle should be maintained https://gitlab.com/meltano/files-airflow\n\n### Further regression test\nTo reproduce the error follow below steps:\n- [ ] Create virtual environment and init \n- [ ] Populate Meltano project with `tap-adwords`,`tap-facebook` and `target-snowflake` \n    - meltano add extractor tap-facebook\n    - meltano add extractor tap-adwords\n    - meltano add loader target-snowflake\n- [ ] Add Airflow orchestration to the project.\n    - meltano add orchestrator airflow\n    - meltano add files airflow\n    - meltano schedule facebook-to-snowflake tap-facebook target-snowflake @daily --transform=skip\n    - meltano schedule google-to-snowflake tap-adwords target-snowflake @daily --transform=skip \n- [ ] Build Meltano with docker-compose bundle.\n    - docker-compose -f docker-compose.prod.yml up -d --build\n- [ ] Testing & Debugging logs\n    - docker-compose logs airflow-scheduler",
      "state": "closed",
      "created_at": "2021-01-14T20:41:06.860Z",
      "updated_at": "2022-05-30T06:47:45.266Z",
      "closed_at": "2022-05-30T06:47:45.241Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "UI",
        "kind::Bug"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4706310,
        "username": "umutykaya",
        "public_email": "",
        "name": "Umut Yal\u00e7\u0131nkaya",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0b08d4f3343e1e961e4282b58c352e2699813056818c6a7af68299721a376dc3?s=80&d=identicon",
        "web_url": "https://gitlab.com/umutykaya"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2522",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 5,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2522",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2522/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2522/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2522",
        "relative": "#2522",
        "full": "meltano/meltano#2522"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 110,
      "epic": {
        "id": 305782,
        "iid": 110,
        "title": "Improve Python 3.8 / 3.9 / 3.10 Support",
        "url": "/groups/meltano/-/epics/110",
        "group_id": 2524164,
        "human_readable_end_date": "Dec 31, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 697803,
      "relative_position": -1026
    }
  ]
}
