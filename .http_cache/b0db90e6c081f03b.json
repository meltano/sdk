{
  "cookies": {
    "_cfuvid": "n0Qhn9RsY0UINtsCOI7WmT6v0AELzGBr2D323D2.Awc-1753217246266-0.0.1.1-604800000"
  },
  "created_at": "2025-07-22T20:47:26.217524+00:00",
  "elapsed": 0.690288,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "9635cb095e8746e7-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Tue, 22 Jul 2025 20:47:26 GMT",
    "ETag": "W/\"a1169ddc83ec93953bfa61643b25764b\"",
    "Link": "<https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=9&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"prev\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=1&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"first\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=10&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=n0Qhn9RsY0UINtsCOI7WmT6v0AELzGBr2D323D2.Awc-1753217246266-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-06-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-d",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"e7048e167542718b5408f77bcbfd2a15\",\"version\":\"1\"}",
    "x-next-page": "",
    "x-page": "10",
    "x-per-page": "20",
    "x-prev-page": "9",
    "x-request-id": "e7048e167542718b5408f77bcbfd2a15",
    "x-runtime": "0.515642",
    "x-total": "200",
    "x-total-pages": "10"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "REDACTED"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&page=10&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&page=10&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z",
  "_decoded_content": [
    {
      "id": 105161489,
      "iid": 350,
      "project_id": 22672923,
      "title": "Add \"cost\" hook in tap base",
      "description": "## Summary\nAs a user of a tap, I would like to know how much API \"cost\" was caused by a tap run.\nFor instance, the github API has per-hour usage limits, where 1 REST API call costs 1, or a graphql API call has a cost that depends on the number of nodes returned.\nOther APIs might charge per call.\n\nAt the end of a tap run, I would like to know how much of the resource the tap consumed.\n\n## Proposed benefits\n\nWith `tap-github` running in production, we have found it hard to track the reasons behind sudden surges in \"quota exceeded\" errors. Being able to identify which runs use what would help in understanding the cause of such issues.\n\nFor billable APIs/resources, such a feature could also help track actual dollar costs.\n\nMaking these values retrievable would allow tracking them in monitoring systems, etc...\n\n\n## Proposal details\nAs it's not really possible to define how this cost is calculated at the SDK level, it would be great if the SDK provided some method that a tap could overload to calculate and accumulate said cost, something like:\n\n```python\nclass Tap:\n    def calculate_request_cost(self, request, response) -> Integer:\n        # return whatever cost we want to track in arbitrary units\n```\nThis could be called by the SDK after each request returns (as the cost might depend on the content of the response). The SDK would simply keep a sum of all these results, and at the end of the run, the tap would at a minimum log a line like:\n```\nTotal cost for this run: NNN\n```\nor possibly export this value in the state as another metric?\n\nAgain, the final method could simply be a no-op by default that each tap can override to implement appropriate behaviour.\n\n## Best reasons not to build\nBy default, these methods can simply do a `pass`, and therefore have only negligible performance impact. There is no behaviour change related to this, unless the result is exported in state, which might cause issues downstream depending on the target used.",
      "state": "closed",
      "created_at": "2022-03-20T17:19:25.635Z",
      "updated_at": "2022-05-30T00:11:09.191Z",
      "closed_at": "2022-05-30T00:11:09.166Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 75577,
        "username": "LaurentS",
        "public_email": "",
        "name": "Laurent Sava\u00ebte",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/ac898ad4d1975ac4678873c142f8ed88161383546137af50ad4f58fdc678c798?s=80&d=identicon",
        "web_url": "https://gitlab.com/LaurentS"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/350",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/350",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/350/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/350/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#350",
        "relative": "#350",
        "full": "meltano/sdk#350"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 105506957,
      "iid": 351,
      "project_id": 22672923,
      "title": "Guidance for typing large numbers in streams' JSON Schemas",
      "description": "We have run into a few cases recently where very large integers or very large currency amounts were being stored as strings in the source API, and the question has come up in a few forms:\n\n> Should we type this to an int or numeric type? \n> \n> How can we avoid overflow downstream if the contents are not expected to fit into a 32-bit structure?\n\n## Example from tap-github\n\nhttps://github.com/MeltanoLabs/tap-github/pull/93#issuecomment-1073363917\n\n> @Ry-DS It looks like the API is indeed returning them as strings, but they are clearly integers... Can we force the conversion? Do you get an error?\n>\n> -> https://api.github.com/repos/facebook/react/events\n> \n> It makes sense that it's a string as the number is quite large (20 billion) which definitely won't fit in a 32bit signed integer (max 2 billion). I think it's the right move to keep it as strings (it would error out otherwise).",
      "state": "closed",
      "created_at": "2022-03-25T15:23:06.107Z",
      "updated_at": "2022-05-30T00:11:16.568Z",
      "closed_at": "2022-05-30T00:11:16.553Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/351",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/351",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/351/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/351/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#351",
        "relative": "#351",
        "full": "meltano/sdk#351"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 105709988,
      "iid": 355,
      "project_id": 22672923,
      "title": "Custom transformations for mappers",
      "description": "I'd like to add my own custom transformations in certain cases. \n\nFor example look at https://gitlab.com/vischous/singer-sdk/-/merge_requests/1/diffs#0a4f2ae2b6469688d540039ffa026037de097e8e_50_52\n\nIn this case I have a very specific transformation tied to Active Directory that I want to do. I'd like to be able to add these types of functions easily without having to add them to my own fork of the Singer SDK. This type of transformation is not usable to anyone outside of active directory so I don't think it'd ever make it into the SDK. \n\n(Ignore all changes but `mapper.py` as there's some changes due to cookiecutter stuff with Windows that's completely unrelated to this)",
      "state": "closed",
      "created_at": "2022-03-29T20:34:48.183Z",
      "updated_at": "2022-05-30T00:11:47.353Z",
      "closed_at": "2022-05-30T00:11:47.328Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/355",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/355",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/355/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/355/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#355",
        "relative": "#355",
        "full": "meltano/sdk#355"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 106604733,
      "iid": 362,
      "project_id": 22672923,
      "title": "target cookiecutter has no tox.ini",
      "description": "target cookiecutter has no tox.ini",
      "state": "closed",
      "created_at": "2022-04-13T20:02:34.773Z",
      "updated_at": "2022-05-30T00:12:41.449Z",
      "closed_at": "2022-05-30T00:12:41.431Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/362",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/362",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/362/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/362/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#362",
        "relative": "#362",
        "full": "meltano/sdk#362"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2339</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 106649868,
      "iid": 363,
      "project_id": 22672923,
      "title": "Nested Primary keys and Incremental keys in data is a pain",
      "description": "When data has a primary key but it's nested in an Object the Singer spec itself doesn't tend to work well. We resort to doing something like https://github.com/AutoIDM/tap-googleads/pull/28 which means we create a field like `_sdc_primary_key` at the top level so that `key_properties` in the schema can reference the proper field (nested objects don't work)\n\nThis was brought up here https://meltano.slack.com/archives/C01PKLU5D1R/p1649947327618639 , and I thought randomly of using a jsonpath to point to your `key_properties` instead would be nice!\n\n@edgarrmondragon had an idea from that! So here we go :D",
      "state": "closed",
      "created_at": "2022-04-14T15:14:36.826Z",
      "updated_at": "2022-05-30T00:12:49.461Z",
      "closed_at": "2022-05-30T00:12:49.431Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/363",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/363",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/363/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/363/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#363",
        "relative": "#363",
        "full": "meltano/sdk#363"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 106938618,
      "iid": 364,
      "project_id": 22672923,
      "title": "Working example needed for developer-triggered state bookmark finalization (unsorted streams)",
      "description": "State markers are by default marked as non-resumable if a stream's output is unsorted (or sorted in reverse).\n\nIn theory, the developer can control for this by running smaller loops through the data that are resumable at specific checkpoints.\n\nFor example, if an API can only return records in reverse sorted order, a developer could write a loop that iterates on time periods in ascending order. Taking for example a monthly time period, a developer could force the API to only retrieve records one month at a time, and loop through months until today's date. In this scenario, the bookmark is resumable exactly in between each month's loop, aka the stream is resumable after each month's data is fully collected.\n\nWe don't have code samples for this as of yet but in theory it should be addressable with some small adaptations to default behaviors.\n\n## Call for contributors\n\nIf anyone has samples - working or not working - these examples could be helpful towards us developing a guidance for developers, including sample code snippets to address the use case.",
      "state": "closed",
      "created_at": "2022-04-21T00:14:35.393Z",
      "updated_at": "2022-05-30T00:12:56.580Z",
      "closed_at": "2022-05-30T00:12:56.564Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Documentation",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/364",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/364",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/364/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/364/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#364",
        "relative": "#364",
        "full": "meltano/sdk#364"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 107337167,
      "iid": 368,
      "project_id": 22672923,
      "title": "Streams should not be able to add duplicate contexts to state",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nThere are some situations in which a developer might (accidentally) create/update the stream state with a duplicate partition context. This results in the stream failing on the next invocation when the duplicate is detected: https://gitlab.com/meltano/sdk/-/blob/72e7e2be7271d37c9d2c40ae0d0be3785c243876/singer_sdk/helpers/_state.py#L83-87.\n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\nNA\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\nDuplicate partition contexts are written to a stream state.\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nTaps should not be allowed to write duplicate contexts.\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\nNA\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\n\nOne safeguard we could add to prevent this is to check for duplicates _before_ they're added to the tap state in https://gitlab.com/meltano/sdk/-/blob/72e7e2be7271d37c9d2c40ae0d0be3785c243876/singer_sdk/helpers/_state.py#L95-101.",
      "state": "closed",
      "created_at": "2022-04-27T23:56:26.173Z",
      "updated_at": "2022-05-30T00:13:19.760Z",
      "closed_at": "2022-05-30T00:13:19.740Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/368",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/368",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/368/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/368/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#368",
        "relative": "#368",
        "full": "meltano/sdk#368"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108040449,
      "iid": 373,
      "project_id": 22672923,
      "title": "Provide path for SQL target developers to \"max out\" varchar declarations in columnarly compressed datasets",
      "description": "~~\"urgency::low\" \n\nNow that https://gitlab.com/meltano/sdk/-/issues/371+ is resolved and merged, I want to open a quick stub issue to track the work to add a recommendation for those target developers who prefer a length-unlimited or length-maxed varchar declaration.\n\n- Columnar databases may not have any storage or performance differences based on length, for instance between `varchar(10)` and `varchar(max)`.\n- Some databases may also have a high cost of running `alter column` and/or have `alter column` disallowed.\n\n## Rough implementation\n\nOne path to implement:\n\n- Developer overrides `to_sql_type(jsonschema_type: dict) -> sqlalchemy.types.TypeEngine`, calling the base class and then converting any `varchar` instances with `varchar(max)`.\n- Depending upon the target implementation, and whether it makes sense to make this a user-configurable implementation choice, the developer could optionally tie this behavior to a setting like `prefer_varchar_max` or similar.\n\nThe above could be a simple docs update or an addition to code samples, or it could be an built-in option or implementation flag within the SDK's python code.",
      "state": "closed",
      "created_at": "2022-05-04T23:09:50.303Z",
      "updated_at": "2022-05-30T00:13:57.915Z",
      "closed_at": "2022-05-30T00:13:57.893Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "urgency::low",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/373",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/373",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/373/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/373/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#373",
        "relative": "#373",
        "full": "meltano/sdk#373"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2339</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108046420,
      "iid": 374,
      "project_id": 22672923,
      "title": "RestSink",
      "description": "Writing a REST API target, and it'd be really nice to be able to reuse a bunch of the functionality RestStream has\n\nSpecifically\n- Authentication\n- Request abstractions (prepare records, etc)",
      "state": "closed",
      "created_at": "2022-05-05T05:04:35.151Z",
      "updated_at": "2022-05-30T00:14:06.426Z",
      "closed_at": "2022-05-30T00:14:06.408Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/374",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/374",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/374/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/374/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#374",
        "relative": "#374",
        "full": "meltano/sdk#374"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 108,
      "epic": {
        "id": 302158,
        "iid": 108,
        "title": "Expanded Target Functionality in the SDK",
        "url": "/groups/meltano/-/epics/108",
        "group_id": 2524164,
        "human_readable_timestamp": "<strong>2339</strong> days elapsed"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108047104,
      "iid": 375,
      "project_id": 22672923,
      "title": "Default capabilities for meltano.yml target cookiecutter update",
      "description": "https://gitlab.com/meltano/sdk/-/blob/main/cookiecutter/target-template/%7B%7Bcookiecutter.target_id%7D%7D/meltano.yml#L11-13\n\nMaybe just list about? Not clear to me what should be there other than what's currently there can't work.",
      "state": "closed",
      "created_at": "2022-05-05T05:35:21.169Z",
      "updated_at": "2022-05-30T00:14:13.414Z",
      "closed_at": "2022-05-30T00:14:13.395Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/375",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/375",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/375/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/375/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#375",
        "relative": "#375",
        "full": "meltano/sdk#375"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108098158,
      "iid": 377,
      "project_id": 22672923,
      "title": "SQL Targets: Processing fails when target table already exists",
      "description": "## Summary\nWhen SQLSink.process_batch writes to a table that already exists it ensures that the column definition is compatible with the latest schema and alters the table's columns if necessary. That logic is failing, at least when using [my MySQL target](https://gitlab.com/tbriggs2/target-mysql/). I believe the error is reproducible with [target-sqlite](https://github.com/MeltanoLabs/target-sqlite) as well (because my MySQL target is based on that...)\n\n\n## Steps to reproduce\n1. Set up a pipeline that loads data into a MySQL table\n2. Execute the pipeline (this will create the table and succeed)\n3. Execute the pipeline again\n\n\n## What is the current bug behavior?\nProcessing fails with an exception coming from the SDK.\n\n\n## What is the expected correct behavior?\nProcessing should succeed without error.\n\n\n## Relevant logs and/or screenshots\n```\ntime=2022-05-05 12:26:14 name=sqlalchemy.engine.Engine level=INFO message=SHOW CREATE TABLE `targetTest`\ntime=2022-05-05 12:26:14 name=sqlalchemy.engine.Engine level=INFO message=[raw sql] ()\nTraceback (most recent call last):\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/click/core.py\", line 1053, in main\n    rv = self.invoke(ctx)\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/click/core.py\", line 1395, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/click/core.py\", line 754, in invoke\n    return __callback(*args, **kwargs)\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/target_base.py\", line 535, in cli\n    target.listen(file_input)\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/io_base.py\", line 43, in listen\n    self._process_endofpipe()\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/target_base.py\", line 275, in _process_endofpipe\n    self.drain_all()\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/target_base.py\", line 413, in drain_all\n    self._drain_all(list(self._sinks_active.values()), self.max_parallelism)\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/target_base.py\", line 436, in _drain_all\n    self.drain_one(sink)\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/target_base.py\", line 430, in drain_one\n    sink.process_batch(draining_status)\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/sinks/sql.py\", line 106, in process_batch\n    self.connector.prepare_table(\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/streams/sql.py\", line 596, in prepare_table\n    self.prepare_column(\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/streams/sql.py\", line 621, in prepare_column\n    self._adapt_column_type(\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/streams/sql.py\", line 774, in _adapt_column_type\n    compatible_sql_type = self.merge_sql_types([current_type, sql_type])\n  File \"/home/tom/.cache/pypoetry/virtualenvs/singer-sqlite-oMbmf0Lm-py3.8/lib/python3.8/site-packages/singer_sdk/streams/sql.py\", line 689, in merge_sql_types\n    raise ValueError(\nValueError: Unable to merge sql types: INTEGER, INTEGER\n```\n\n## Possible fixes\nI believe the error is [here](https://gitlab.com/meltano/sdk/-/blob/main/singer_sdk/streams/sql.py#L675). The two types are obviously the same but it's concluding that they're not. I'm not actually sure how to fix it though.",
      "state": "closed",
      "created_at": "2022-05-05T16:43:59.934Z",
      "updated_at": "2022-05-30T00:14:29.040Z",
      "closed_at": "2022-05-30T00:14:29.031Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 11028865,
        "username": "tbriggs2",
        "public_email": null,
        "name": "Thomas Briggs",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/0333fed181cc72b244e53f28299a2fbd4c00d3e16ae323c6771a12d3d442917a?s=80&d=identicon",
        "web_url": "https://gitlab.com/tbriggs2"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/377",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/377",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/377/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/377/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#377",
        "relative": "#377",
        "full": "meltano/sdk#377"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108278379,
      "iid": 380,
      "project_id": 22672923,
      "title": "Update `--about --format=json` to match Meltano lockfile spec",
      "description": "When we originally launched the `--about` option, we didn't yet have a clear direction on what the long term support format would be and so the format of the json output was not well thought out or based on any existing spec. Now we have, I think, a clear standard based on the new Hub REST API.\n\nOnce https://gitlab.com/meltano/meltano/-/issues/3031 ships, I think we should update the json format so that this \"just works\" and gives an interoperable experience.\n\nAlternatively, we could keep the existing `--format=json` option as-is, and instead add support for `--format=meltano/json/v2` or similar.\n\nThe developer experience would then be:\n\n1. Build the tap or target, including specification of settings and capabilities.\n3. The cookiecutter will automatically install a default/minimal `meltano.yml` file from the cookiecutter, including the tap name and variant name.\n   - The developer's `meltano.yml` can optionally be modified to include a minimal `config:` for integration tests to pass, excluding those config values sent via env vars or `.env`.\n   - Unlike today, the `meltano.yml` file that lives in the tap repo does not need to define settings, capabilities, or other tap properties which are defined in the lock file (below).\n2. Run `tap-mytap --about --format=\"meltano/json/v2\" > tap-mytap--myvariantname.plugin.lock` (or similar) to create a lock file definition for the plugin.\n4. Run integration tests with `meltano run tap-mytap target-jsonl` or `meltano run tap-mytap target-sqlite`.\n5. Whenever there are significant changes to the tap which affect settings or capabilities, rerun steps `3` and `4`.\n\ncc @edgarrmondragon, @pnadolny13, @tayloramurphy  - What do you think?\n\nThis probably would be a major version bump on the SDK, and would streamline the process of getting robust Hub definitions, including settings and capabilities, for all SDK-based taps.",
      "state": "closed",
      "created_at": "2022-05-10T02:17:00.124Z",
      "updated_at": "2022-05-30T00:14:52.051Z",
      "closed_at": "2022-05-30T00:14:52.035Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351601,
        "iid": 210,
        "group_id": 2524164,
        "title": "June 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:02.417Z",
        "updated_at": "2021-11-29T21:39:02.417Z",
        "due_date": "2022-06-30",
        "start_date": "2022-06-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/210"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/380",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/380",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/380/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/380/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#380",
        "relative": "#380",
        "full": "meltano/sdk#380"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108716967,
      "iid": 386,
      "project_id": 22672923,
      "title": "Reduce noise from 'ignored properties' warnings",
      "description": "The SDK prints warnings for every field that the API returns but is not mapped to the stream's `schema`. We can do a couple things to reduce the noisiness of logs.\n\n## Consolidate warnings into a single message per stream\n\nInstead of:\n\n```\n2022-05-18T03:26:54.596749Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'closed_by' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.597507Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'milestone' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.598140Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'author' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.598749Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'type' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.599366Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'assignee' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.600108Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'issue_type' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.600725Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'time_stats' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.601362Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'task_completion_status' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.604317Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'blocking_issues_count' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.604790Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property '_links' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.605257Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'references' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.605731Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'severity' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.606134Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'moved_to_id' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.606522Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'service_desk_reply_to' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.606932Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'epic_iid' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.607318Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'epic' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.607710Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'iteration' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.608199Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'health_status' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n2022-05-18T03:26:54.608593Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=Property 'project_path' was present in the 'issues' stream but not found in catalog schema. Ignoring. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n```\n\nWe could send a single message:\n\n```\n2022-05-18T03:26:54.608593Z [info     ] time=2022-05-18 03:26:54 name=tap-gitlab level=WARNING message=The following properties were present in the 'issues' stream but not found in catalog schema (ignoring): closed_by, milestones, author, type, assignee, issue_type, time_stats, task_completion_status, blocking_issues_count, _links, references, severity, moved_to_id, service_deks_reply_to, epic_iid, epic, iteration, health_status, project_path. cmd_type=extractor job_id=gitlab-to-postgres name=tap-gitlab run_id=8308d041-475f-4404-be2c-e4012413e93a stdio=stderr\n```\n\n## Pytest failures\n\nWe could have a (perhaps optional) pytest that throws a hard test failure during development, if extra properties are unmapped and not explicitly excluded. \n\nWe could optionally pair this with a new stream class property `ignored_properties` which would be functionally identical to the developer adding this to `post_process()`:\n\n```python\n    for ignored in IGNORED_PROPERTIES:\n        result.pop(ignored, None)\n```",
      "state": "closed",
      "created_at": "2022-05-18T03:42:17.051Z",
      "updated_at": "2022-05-30T00:15:38.496Z",
      "closed_at": "2022-05-30T00:15:38.454Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "OKR: Improve New User Experience",
        "kind::Feature",
        "urgency::low",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/386",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/386",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/386/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/386/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#386",
        "relative": "#386",
        "full": "meltano/sdk#386"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 86,
      "epic": {
        "id": 172124,
        "iid": 86,
        "title": "Debugging pipelines",
        "url": "/groups/meltano/-/epics/86",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108777166,
      "iid": 389,
      "project_id": 22672923,
      "title": "Consider adding debugging/IDE files to cookiecutters",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nWe could start with a simple VSCode `launch.json`.\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nDevelopers get a debugging configuration that works out of the box in one or more IDEs.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\nA templated `.vscode/launch.json` with the following contents\n\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"<config name>\",\n      \"type\": \"python\",\n      \"request\": \"launch\",\n      \"cwd\": \"${workspaceFolder}\",\n      \"program\": \"<package>\",\n      \"args\": [\n        \"--config\",\n        \".secrets/config.json\"\n      ]\n    }\n  ]\n}\n```\n\nThis might also require adding either of the following:\n\n- ```python\n  # tap_mysource/tap.py\n  class TapMySource(Tap):\n      ...\n\n  if __name__ == \"__main__\":\n      TapMySource.cli()\n  ```\n\n- ```python\n  # tap_mysource/__main__.py\n\n  from tap_mysource.tap import TapMySource\n\n  TapMySource.cli()\n  ```\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nAny debug configuration could be too specific, but users can always tweak it.",
      "state": "closed",
      "created_at": "2022-05-19T01:22:37.714Z",
      "updated_at": "2022-05-30T00:16:00.360Z",
      "closed_at": "2022-05-30T00:16:00.342Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/389",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/389",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/389/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/389/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#389",
        "relative": "#389",
        "full": "meltano/sdk#389"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108837726,
      "iid": 390,
      "project_id": 22672923,
      "title": "Release v0.6.0",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [ ] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [ ] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [ ] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [ ] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [ ] Changelog updates and version bump:\n    1. [ ] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [ ] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [ ] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [ ] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [ ] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [ ] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [ ] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [ ] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [ ] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [ ] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [ ] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [ ] Post-release announcement steps:\n    1. [ ] Post announcement to Meltano slack: `#announcements`\n    2. [ ] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [ ] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [ ] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-05-19T22:06:20.752Z",
      "updated_at": "2022-05-30T00:16:06.272Z",
      "closed_at": "2022-05-30T00:16:06.266Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [],
      "milestone": null,
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/390",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 1
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/390",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/390/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/390/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#390",
        "relative": "#390",
        "full": "meltano/sdk#390"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108888772,
      "iid": 393,
      "project_id": 22672923,
      "title": "Cast environment variables config values into their respective JSON schema type",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nCurrently only arrays of strings are parsed: `value1,value2` -> `[\"value1\", \"value2\"]`. A similar process for `number`, `boolean` and `integer` would be valuable.\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\n- Users can fully rely on environment variables and `.env` to configure their taps\n- Richer data types can be used for environment variables\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\nWe already have some functions to check for data types in https://gitlab.com/meltano/sdk/-/blob/main/singer_sdk/helpers/_typing.py, so we could extend and leverage those when parsing environment variables.\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nSupport for environment variables is not common in the Singer ecosystem.",
      "state": "closed",
      "created_at": "2022-05-20T18:16:14.625Z",
      "updated_at": "2022-05-30T00:16:28.096Z",
      "closed_at": "2022-05-30T00:16:28.079Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2136620,
        "iid": 176,
        "group_id": 2524164,
        "title": "Staging",
        "description": "",
        "state": "active",
        "created_at": "2021-07-07T19:00:49.676Z",
        "updated_at": "2021-07-07T19:00:49.676Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/176"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/393",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/393",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/393/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/393/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#393",
        "relative": "#393",
        "full": "meltano/sdk#393"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 108966505,
      "iid": 394,
      "project_id": 22672923,
      "title": "Reduce number of dependencies for taps vs targets",
      "description": "## Summary\nThe `sdk` depends on a number of libraries that are only used in the tap or target context. This adds weight to virtual envs, potential for dependency conflicts, security issues, etc...\n\nWhile I don't have an immediate solution, it would make sense to work towards a way to split dependencies according to the use-case of the sdk.\n\n## Proposed benefits\n- smaller code footprint (weight, security, conflicts...)\n- faster venv installs -> happy devs :smile: \n\n## Proposal details\nThe `singer` recommendation is to install each tap/target in its own virtual env to minimize potential for dependency conflicts, etc...\nAs an example, we run `tap-github` and `tap-gitlab`, each of which pulls in `singer-sdk` and transitively `sqlalchemy` (and its own dependencies). As these are taps, they make no use of `sqlalchemy` (and likely never will). `sqlalchemy` is interesting because it also requires a bunch of build dependencies as it contains C code that's built upon install.\nI suspect there are similar dependencies that are not used by the target part of the sdk.\n\nI'm wondering if it would be possible to break up the dependency list into something like `deps-tap` and `deps-target` so that non-development installations of the sdk fetch fewer dependencies.\n\n## Best reasons not to build\nI'm conscious this is probably not trivial, and might lead to headaches by creating multiple \"shades\" of the sdk.\n\n`poetry` has an `extras` mechanism, but I don't know if it can handle variants, unless dependencies are individually declared as extras, which may also make installation less straightforward.",
      "state": "closed",
      "created_at": "2022-05-23T10:34:58.748Z",
      "updated_at": "2022-05-30T00:16:35.824Z",
      "closed_at": "2022-05-30T00:16:35.805Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 75577,
        "username": "LaurentS",
        "public_email": "",
        "name": "Laurent Sava\u00ebte",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/ac898ad4d1975ac4678873c142f8ed88161383546137af50ad4f58fdc678c798?s=80&d=identicon",
        "web_url": "https://gitlab.com/LaurentS"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/394",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/394",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/394/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/394/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#394",
        "relative": "#394",
        "full": "meltano/sdk#394"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 109064030,
      "iid": 395,
      "project_id": 22672923,
      "title": "'Hard and soft deletes' docs (suggested in \"Add 'at least once' implementation info to SDK docs\")",
      "description": "The following discussion from !301 should be addressed:\n\n- [ ] @vischous started a [discussion](https://gitlab.com/meltano/sdk/-/merge_requests/301#note_955847661): \n\n    > I think we should mention something about what do you do about Deleted Records. How do you know when a record is dropped in the source system? \n    > \n    > It's one of the draw backs of an incremental approach. But I admittedly don't know a good way to add it to this article right now. https://medium.com/@danielpdwalker/handling-hard-deleted-data-from-source-5578e67f5a0c is a great write up in my opinion of how to deal with this.",
      "state": "closed",
      "created_at": "2022-05-24T22:51:20.788Z",
      "updated_at": "2022-05-30T00:16:42.718Z",
      "closed_at": "2022-05-30T00:16:42.710Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Documentation",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/395",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 1,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/395",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/395/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/395/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#395",
        "relative": "#395",
        "full": "meltano/sdk#395"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 107044760,
      "iid": 367,
      "project_id": 22672923,
      "title": "Should we migrate the cookiecutters to `copier`?",
      "description": "https://www.recallstack.icu/en/2020/04/18/yeoman-and-cookiecutter-are-dead-long-live-copier/",
      "state": "closed",
      "created_at": "2022-04-22T18:10:20.330Z",
      "updated_at": "2022-05-31T18:54:33.948Z",
      "closed_at": "2022-05-31T18:54:33.932Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Tech Debt",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": true,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/367",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/367",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/367/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/367/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#367",
        "relative": "#367",
        "full": "meltano/sdk#367"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 98436815,
      "iid": 287,
      "project_id": 22672923,
      "title": "Add request timeout for REST API taps",
      "description": "## Summary\nI recently had a pipeline that would hang indefinitely on random requests made to the api. Since there is no default timeout in `requests` package, but they intend to add it in subsequent versions. I recommend we add a configurable timeout period with a default of 5(?) minutes on REST api requests.\n\n## Proposed benefits\nThis will provide tap developers feedback when their requests are taking too long and enable them to lengthen the timeout. Otherwise, it could hang indefinitely and make it difficult to debug like it did in my case.\n\n## Proposal details\nThis involves setting the `timeout` parameter of the `send` method of the prepared request in the `_request` method of the `RESTStream` class. I would also add the timeout exception error the backoff decorator. I would also recommend setting a class attribute in the cookiecutter template that calls this out as a configurable setting for new taps. \n\nI will provide a PR for my recommendation.\n\n## Best reasons not to build\nIt would be an easy feature to miss when developing a new tap and could create frustration for healthy but long running api calls.",
      "state": "closed",
      "created_at": "2021-12-03T22:42:17.683Z",
      "updated_at": "2023-09-06T15:48:22.997Z",
      "closed_at": "2021-12-16T22:01:02.508Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "flow::Review",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2286172,
        "iid": 200,
        "group_id": 2524164,
        "title": "Fri: Dec 17, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:20:21.743Z",
        "updated_at": "2022-01-04T16:10:50.410Z",
        "due_date": "2021-12-17",
        "start_date": "2021-12-11",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/200"
      },
      "assignees": [],
      "author": {
        "id": 8784356,
        "username": "jlloyd3",
        "public_email": "",
        "name": "Josh Lloyd",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8784356/avatar.png",
        "web_url": "https://gitlab.com/jlloyd3"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/287",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/287",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/287/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/287/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#287",
        "relative": "#287",
        "full": "meltano/sdk#287"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    }
  ]
}
