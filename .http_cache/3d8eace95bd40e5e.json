{
  "cookies": {
    "_cfuvid": "x3xC6gJvy4aoMiB0q37_po1_Nf0HUL8WDY8uiz9WHDs-1747940817865-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:06:57.799001+00:00",
  "elapsed": 0.682076,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e97fc2c5a1fc3-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:06:57 GMT",
    "ETag": "W/\"2bcc5351ec7f4e506f44020e9ac2dfbd\"",
    "Link": "<https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=2&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"next\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=1&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"first\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=10&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=x3xC6gJvy4aoMiB0q37_po1_Nf0HUL8WDY8uiz9WHDs-1747940817865-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-43-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-b",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"e277bbabb5b23c7ee3fef05ef9450af9\",\"version\":\"1\"}",
    "x-next-page": "2",
    "x-page": "1",
    "x-per-page": "20",
    "x-prev-page": "",
    "x-request-id": "e277bbabb5b23c7ee3fef05ef9450af9",
    "x-runtime": "0.388411",
    "x-total": "200",
    "x-total-pages": "10"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z",
  "_decoded_content": [
    {
      "id": 85499689,
      "iid": 109,
      "project_id": 22672923,
      "title": "Ability to reference shared schemas in JSONSchema for stream",
      "description": "As of the Draft4 Spec, JSONSchema supports reusing schema components using the `$ref` keyword as outlined [here](https://json-schema.org/understanding-json-schema/structuring.html#reuse). Some APIs (like Stripe) have a number of objects that show up in the schema for more than one stream and I'd like to be able to structure my schemas like this:\n```\n.\nschemas   \n\u2502\n\u2514\u2500\u2500\u2500shared\n\u2502   \u2502   discount.schema.json\n\u2502   customers.schema.json\n\u2502   subscriptions.schema.json\n```\nwhere `customers.schema.json` and `subscriptions.schema.json` both have a property `discount` of type `object` and can reference `discount.schema.json` instead of specifying it's properties in both places:\n```json\n\"discount\": {\n  \"$ref\": \"shared/discount.schema.json\"\n}\n```\nWhile this sort of works, I have to specify the full path as `file:///full/path/to/schemas/shared/discount.schema.json` - just specifying the relative path throws `jsonschema.exceptions.RefResolutionError: unknown url type: 'shared/discount.schema.json'`.\n\nThe `jsonschema.RefResolver()` object supports a `base_uri` parameter that one could in theory use - setting it to `file:///full/path/to/schemas/` would tell jsonschema to look in that directory when attempting to resolve relative references. Is there a way to support this within the framework of the Singer SDK? I'd be happy to contribute if someone is able to point me in the right direction.",
      "state": "closed",
      "created_at": "2021-04-19T23:24:47.187Z",
      "updated_at": "2022-01-05T04:15:32.661Z",
      "closed_at": "2021-04-21T01:38:01.298Z",
      "closed_by": {
        "id": 6734025,
        "username": "prratek",
        "public_email": "",
        "name": "Prratek Ramchandani",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/7bd15bade15cb1500f7569175690efcc6c84efe376ece2811272adb3dae653f4?s=80&d=identicon",
        "web_url": "https://gitlab.com/prratek"
      },
      "labels": [],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 6734025,
        "username": "prratek",
        "public_email": "",
        "name": "Prratek Ramchandani",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/7bd15bade15cb1500f7569175690efcc6c84efe376ece2811272adb3dae653f4?s=80&d=identicon",
        "web_url": "https://gitlab.com/prratek"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/109",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/109",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/109/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/109/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#109",
        "relative": "#109",
        "full": "meltano/sdk#109"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 95068469,
      "iid": 235,
      "project_id": 22672923,
      "title": "Allow taps to generate catalog without auth, and/or without JSON schema validation on settings",
      "description": "Currently, _some_ taps require credentials in order to perform discovery and at least in theory, config settings are allowed to alter the output of the catalog (flattening and stream maps, for instance).\n\nGiven that we want discovery to work even without auth (at least for sources which can support it), we need to modify tap and target behaviors to be able to generate a catalog, even if the tap config validation otherwise would not pass due to missing credentials.\n\nAny of these could work in theory:\n\n1. Discovery mode skips JSON schema setting validation (not ideal perhaps because of the risk of `KeyError` exceptions that may be hard for the user to debug).\n2. Discovery mode does perform validation, but rather than producing a hard failure, it prints a non-fatal warning message before continuing the discovery process.\n3. Some other tap-level setting where a developer informs the SDK whether and how the catalog can be generated when creds are not provided.\n\nI'm leaning towards option 2 because it is the least invasive, it's relatively easy for users to debug, and it does not require the developer to modify their existing code. (Executions that require creds will naturally fail, and executions that don't require creds will naturally succeed.) Since we're not technically ignoring or disabling config, this also means that stream maps and flattening behaviors will happen as usual, along the normal code path and without need to alter or make exception.",
      "state": "closed",
      "created_at": "2021-10-07T22:31:35.369Z",
      "updated_at": "2022-01-05T19:24:49.178Z",
      "closed_at": "2021-10-21T21:00:14.547Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 8,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/235",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/235",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/235/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/235/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#235",
        "relative": "#235",
        "full": "meltano/sdk#235"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 95,
      "epic": {
        "id": 240356,
        "iid": 95,
        "title": "Expanded Tap Functionality in the SDK",
        "url": "/groups/meltano/-/epics/95",
        "group_id": 2524164,
        "human_readable_end_date": "Feb 28, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 99924306,
      "iid": 297,
      "project_id": 22672923,
      "title": "OauthAuthenticator requires expires_in in response",
      "description": "When using `OauthAuthenticator` with an oauth2 endpoint that responds without the `expires_in` field we get the following error:\n\n```\nFile \"/.../site-packages/singer_sdk/authenticators.py\", line 432, in update_access_token\n    self.expires_in = token_json[\"expires_in\"]\nKeyError: 'expires_in'\n```\n\nhttps://gitlab.com/meltano/sdk/-/blob/8f8ee44e043c83917d3fe63ec646a13bad4014bf/singer_sdk/authenticators.py#L432\n\nLooking at an OAuth2 spec, rfc6749 it looks like the `expires_in` field [is RECOMMENDED but not REQUIRED][1]. Does it seem sensible to extend `OauthAuthenticator` to support APIs which respond without an `expires_in` field?\n\n[1]: https://datatracker.ietf.org/doc/html/rfc6749#section-4.2.2",
      "state": "closed",
      "created_at": "2021-12-30T14:52:05.617Z",
      "updated_at": "2022-01-12T19:47:31.956Z",
      "closed_at": "2022-01-12T19:47:31.923Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "Needs Refinement",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 6806817,
        "username": "daniel-ferguson",
        "public_email": "",
        "name": "Daniel Ferguson",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/abd362804ff24826d1f0f83a1b9bcc3a4907ddd5bca74d7582f5939c1e4903b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/daniel-ferguson"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 3,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/297",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/297",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/297/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/297/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#297",
        "relative": "#297",
        "full": "meltano/sdk#297"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 96099462,
      "iid": 257,
      "project_id": 22672923,
      "title": "Create a stream map connector for use in composable pipeline",
      "description": "@aaronsteers this is a follow-up to our conversation about stream maps.\n\nBased on dicussions with @aaronsteers and @edgarrmondragon, the scope of this issue is:\n\n* creating all the necessary classes, CLI and cookiecutter to create SDK-based stream-map packages\n* creating a stream map package that implements a hash",
      "state": "closed",
      "created_at": "2021-10-25T16:25:36.600Z",
      "updated_at": "2022-01-13T22:35:01.651Z",
      "closed_at": "2022-01-13T22:35:01.608Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "flow::Review",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 6,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/257",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/257",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/257/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/257/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#257",
        "relative": "#257",
        "full": "meltano/sdk#257"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 116,
      "epic": {
        "id": 331276,
        "iid": 116,
        "title": "Enable ELT pipelines in Meltano to be composable",
        "url": "/groups/meltano/-/epics/116",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2021",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 99206231,
      "iid": 295,
      "project_id": 22672923,
      "title": "Release v0.3.18",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [x] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [ ] Post-release announcement steps:\n    1. [x] Post announcement to Meltano slack: `#announcements`\n    2. [x] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [x] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [x] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2021-12-17T00:04:57.312Z",
      "updated_at": "2022-01-14T00:58:33.237Z",
      "closed_at": "2022-01-14T00:57:48.843Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Release",
        "valuestream::SDK"
      ],
      "milestone": null,
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 1,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/295",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 21
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/295",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/295/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/295/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#295",
        "relative": "#295",
        "full": "meltano/sdk#295"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 97441067,
      "iid": 271,
      "project_id": 22672923,
      "title": "Possible bug in cookiecutter shell script for targets",
      "description": "As reported in this slack conversation: https://meltano.slack.com/archives/C01TCRBBJD7/p1637088359193600?thread_ts=1637076547.186200&cid=C01TCRBBJD7\n\n> I think I \"solved\" the problem. If I simply remove `< /dev/stdin` everything works fine.",
      "state": "closed",
      "created_at": "2021-11-16T18:54:36.096Z",
      "updated_at": "2022-01-14T21:47:45.527Z",
      "closed_at": "2022-01-14T21:47:45.514Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/271",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/271",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/271/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/271/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#271",
        "relative": "#271",
        "full": "meltano/sdk#271"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 96551073,
      "iid": 263,
      "project_id": 22672923,
      "title": "SQL-type Targets and Sinks",
      "description": "Follows from #74 / !44.",
      "state": "closed",
      "created_at": "2021-11-02T04:51:22.775Z",
      "updated_at": "2022-01-20T06:39:27.246Z",
      "closed_at": "2022-01-20T06:39:27.218Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "flow::Triage",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363644,
        "iid": 215,
        "group_id": 2524164,
        "title": "Fri: Jan 21, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:19:07.836Z",
        "updated_at": "2022-01-24T17:49:13.611Z",
        "due_date": "2022-01-21",
        "start_date": "2022-01-15",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/215"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/263",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/263",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/263/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/263/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#263",
        "relative": "#263",
        "full": "meltano/sdk#263"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 82044876,
      "iid": 74,
      "project_id": 22672923,
      "title": "SDK support for Database-type Streams",
      "description": "This feature would add formal support for Database type streams.\n\n## Background\n\n- We removed database-type streams from the initial 0.1.0 on the basis of being a lower priority versus API-type streams.\n- Unlike SaaS taps, for DB-type taps, we can assume:\n  1. Catalogs are less stable. We should expect cached catalogs will require explicit refreshing.\n  1. Catalog detection should be decoupled from Stream definition. We expect the catalog to be defined by querying the `information_schema` or similar - and it should be much more performant to query this at the DB-level or schema-level, versus individually for each stream/table.\n  1. Fewer `Stream` classes are needed. One Stream class per source or one per extraction type is probably sufficient.\n  1. Catalogs are more authoritative. If a catalog declares a table and column, the Tap should assume it exists as defined in the catalog.\n     1. Types need to be overridable. Moreso than other stream types, we know database-type sources have a history of type incompatibilities. When provided, we should take care that we apply custom type declarations as given in the input catalog.\n\n## Implementation Proposal\n\n### Decoupling Streams from Catalog Discovery\n\nInstead of streams objects reporting back their own schema, a `SQLCatalogDiscovery` class (or similar) will create a full catalog. Then, instances of the appropriate `Stream` class can be instantiated from the discovered catalog. This also means that the if an input catalog is provided, we can skip the discovery process entirely.\n\nDocs links:\n\n- https://docs.sqlalchemy.org/en/14/core/reflection.html#reflecting-all-tables-at-once\n\n### Entry-Level capabilities with `SQLAlchemy`\n\nThe SQLAlchemy tool (powered by `DB-API 2.0`) can provide out-of-box catalog discovery capabilities as well as entry-level select capabilities. This means that given a valid SQLAlchemy driver and connection URI, we can provide generic discovery and `get_records()` capabilities.\n\n* NOTE: We should probably develop a generic `tap-sqlalchemy` or `tap-dbapi` which purely leverage SQL Alchemy generic constructs. This would never be as performant as a custom-built tap but it would be good in general for interop purposes.\n\n### Developers Provide Performance improvements\n\nThere is probably little case for overriding discovery unless SQLAlchemy does not support Inspection for the database type in question. Since catalog discovery is generally not a performance bottleneck, and since it is likely to be cached anyway, a generic implementation should be \"good enough\" for 95% of DB types.\n\n### Provide developers with bulk-based performance boosts\n\nThe SQLAlchemy library will be good at generic selects but will not be able to take advantage of batching capabilities. I suggest we tap into the discussions around #9 (batch message type) to allow developers to define their batch capabilities.",
      "state": "closed",
      "created_at": "2021-03-31T18:16:33.915Z",
      "updated_at": "2022-01-20T06:39:27.520Z",
      "closed_at": "2022-01-20T06:39:27.457Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Extract",
        "Office Hours::Discussed",
        "flow::To Do",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363644,
        "iid": 215,
        "group_id": 2524164,
        "title": "Fri: Jan 21, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:19:07.836Z",
        "updated_at": "2022-01-24T17:49:13.611Z",
        "due_date": "2022-01-21",
        "start_date": "2022-01-15",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/215"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 6,
      "merge_requests_count": 1,
      "upvotes": 3,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/74",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/74",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/74/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/74/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#74",
        "relative": "#74",
        "full": "meltano/sdk#74"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 90037739,
      "iid": 166,
      "project_id": 22672923,
      "title": "Start tracking open source licenses",
      "description": "See https://gitlab.com/meltano/meltano/-/issues/2845",
      "state": "closed",
      "created_at": "2021-07-09T17:13:23.779Z",
      "updated_at": "2022-01-24T16:25:31.168Z",
      "closed_at": "2022-01-24T16:25:31.144Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "flow::Review",
        "kind::Risk",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363644,
        "iid": 215,
        "group_id": 2524164,
        "title": "Fri: Jan 21, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:19:07.836Z",
        "updated_at": "2022-01-24T17:49:13.611Z",
        "due_date": "2022-01-21",
        "start_date": "2022-01-15",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/215"
      },
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 5,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/166",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/166",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/166/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/166/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#166",
        "relative": "#166",
        "full": "meltano/sdk#166"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 101054180,
      "iid": 309,
      "project_id": 22672923,
      "title": "Release v0.4.1",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [x] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [ ] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [ ] Post-release announcement steps:\n    1. [ ] Post announcement to Meltano slack: `#announcements`\n    2. [ ] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [ ] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [ ] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-01-21T16:37:34.931Z",
      "updated_at": "2022-01-28T00:45:43.078Z",
      "closed_at": "2022-01-28T00:45:43.072Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/309",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 16
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/309",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/309/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/309/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#309",
        "relative": "#309",
        "full": "meltano/sdk#309"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 101327384,
      "iid": 311,
      "project_id": 22672923,
      "title": "Always sync 1 record per stream when using `--test` or `--test=all`",
      "description": "Background:\n\n- We initially tried to sync zero records per stream during `--test`\n- We had to sync at least one record to get child results to we bumped this to 1 record _if_ the stream was a parent.\n- Now that we have `--test=schema` (!218+) which just sends schema definitions (and no record messages), we might as well just standardize on syncing one record per stream when `--test` or --test=all` is set as a CLI flag.",
      "state": "closed",
      "created_at": "2022-01-26T19:03:39.433Z",
      "updated_at": "2022-01-28T21:53:23.150Z",
      "closed_at": "2022-01-26T19:48:44.888Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363645,
        "iid": 216,
        "group_id": 2524164,
        "title": "Fri: Jan 28, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:19:34.985Z",
        "updated_at": "2022-01-31T16:59:52.796Z",
        "due_date": "2022-01-28",
        "start_date": "2022-01-22",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/216"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/311",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 1,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/311",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/311/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/311/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#311",
        "relative": "#311",
        "full": "meltano/sdk#311"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 100617297,
      "iid": 304,
      "project_id": 22672923,
      "title": "Release 0.4.0",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [ ] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [ ] Post-release announcement steps:\n    1. [ ] Post announcement to Meltano slack: `#announcements`\n    2. [ ] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [ ] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [ ] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-01-14T00:25:15.064Z",
      "updated_at": "2022-01-31T12:44:47.713Z",
      "closed_at": "2022-01-31T12:44:47.699Z",
      "closed_by": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "labels": [
        "Release",
        "valuestream::SDK"
      ],
      "milestone": null,
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 0,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/304",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 16
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/304",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/304/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/304/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#304",
        "relative": "#304",
        "full": "meltano/sdk#304"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 97586124,
      "iid": 277,
      "project_id": 22672923,
      "title": "SDK version bumps and changelog grooming should not require AJ review",
      "description": "Logging this issue to remove myself (AJ) from the weekly release process.\n\nRelated issue for Meltano: https://gitlab.com/meltano/meltano/-/issues/3072",
      "state": "closed",
      "created_at": "2021-11-18T22:30:45.094Z",
      "updated_at": "2022-01-31T23:07:15.389Z",
      "closed_at": "2021-12-03T19:11:15.625Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Release"
      ],
      "milestone": {
        "id": 2252673,
        "iid": 193,
        "group_id": 2524164,
        "title": "Internal WIP",
        "description": "",
        "state": "active",
        "created_at": "2021-09-27T19:02:31.281Z",
        "updated_at": "2021-09-28T18:29:26.781Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/193"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/277",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/277",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/277/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/277/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#277",
        "relative": "#277",
        "full": "meltano/sdk#277"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 100155064,
      "iid": 302,
      "project_id": 22672923,
      "title": "Stream Maps - Streams level __else__: null filter throws KeyError",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nRelates to: https://gitlab.com/meltano/sdk/-/issues/301\n\nAs part of finding a workaround for https://gitlab.com/meltano/sdk/-/issues/301 I tried to use the `__else__: null` stream map at the stream level to exclude all streams not explicitly defined in my stream map config. I get a KeyError when I include this.\n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\nmeltano, version 1.90.1\n\n```yaml\n  - name: target-athena-gitlab\n    inherit_from: target-athena\n    config:\n      stream_maps:\n        projects:\n          __alias__: \"gitlab_projects\"\n        users:\n          __alias__: \"gitlab_users\"\n        merge_requests:\n          __alias__: \"gitlab_merge_requests\"\n        issues:\n          __alias__: \"gitlab_issues\"\n        branches:\n          __alias__: \"gitlab_branches\"\n        commits:\n          __alias__: \"gitlab_commits\"\n        groups:\n          __alias__: \"gitlab_groups\"\n        project_labels:\n          __alias__: \"gitlab_project_labels\"\n        __else__: null\n```\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\nI get a KeyError when I try to exclude all undefined streams like [the docs](https://sdk.meltano.com/en/latest/stream_maps.html#remove-all-undeclared-streams-or-properties) describe.\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nAll undefined streams are excluded with no errors.\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\n```\n2022-01-05T15:22:57.261721Z [error    ] 'stream_maps.__else__'         \nTraceback (most recent call last):\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/logging/output_logger.py\", line 127, in redirect_logging\n    yield\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/cli/elt.py\", line 228, in _redirect_output\n    yield\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/cli/elt.py\", line 237, in _run_elt\n    elt_context = context_builder.context()\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/elt_context.py\", line 255, in context\n    env.update(loader.env)\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/elt_context.py\", line 28, in env\n    return {**self.plugin.info_env, **self.config_env()}\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/elt_context.py\", line 24, in config_env\n    return self.settings_service.as_env(session=self.session, **kwargs)\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/settings_service.py\", line 180, in as_env\n    full_config = self.config_with_metadata(*args, **kwargs)\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/settings_service.py\", line 147, in config_with_metadata\n    value, metadata = self.get_with_metadata(\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/settings_service.py\", line 233, in get_with_metadata\n    value, get_metadata = manager.get(name, setting_def=setting_def)\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/settings_store.py\", line 646, in get\n    value, metadata = manager.get(name, setting_def=setting_def, **kwargs)\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/settings_store.py\", line 501, in get\n    value, metadata = self.get_with_metadata(setting_def.name)\n  File \"/Users/pnadolny/.virtualenvs/squred/lib/python3.8/site-packages/meltano/core/settings_store.py\", line 528, in get_with_metadata\n    metadata = self.config_with_metadata[name]\nKeyError: 'stream_maps.__else__'\n'stream_maps.__else__'\n```\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)",
      "state": "closed",
      "created_at": "2022-01-05T15:28:48.149Z",
      "updated_at": "2022-02-01T18:54:25.977Z",
      "closed_at": "2022-02-01T18:54:25.929Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2286177,
        "iid": 204,
        "group_id": 2524164,
        "title": "February 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:35.408Z",
        "updated_at": "2022-03-01T20:28:25.106Z",
        "due_date": "2022-02-28",
        "start_date": "2022-02-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/204"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/302",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/302",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/302/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/302/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#302",
        "relative": "#302",
        "full": "meltano/sdk#302"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 100154670,
      "iid": 301,
      "project_id": 22672923,
      "title": "Stream Maps - Aliasing stream still persists original name also",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nI need to alias my streams to include a prefix on each so that I dont overwrite an existing table with the same name as the stream. I have an existing `issues` table from tap-github and want to add the tap-gitlab `issues` table as well (see [squared repo](https://gitlab.com/meltano/squared/-/blob/master/data/meltano.yml#L110) for use case).\n\nI added inline stream maps to alias each stream with a prefix `gitlab_issues`, this works to create the newly named table but it also continues to persist the original stream as well `issues`. This seemed like a bug to me but might be expected behavior, I'm not sure.\n\nI also tried to include the `\"__else__\": null` at the stream level as described in [the docs](https://sdk.meltano.com/en/latest/stream_maps.html#remove-all-undeclared-streams-or-properties) to hopefully have it exclude those original stream names but ran into a `KeyError: 'stream_maps.__else__'` - this might be a separate issue so [I created one](https://gitlab.com/meltano/sdk/-/issues/302) for that too.\n\n```yaml\n  - name: tap-gitlab\n    variant: meltanolabs\n    pip_url: git+https://github.com/MeltanoLabs/tap-gitlab.git\n    select:\n    - projects.*\n    - users.*\n    - merge_requests.*\n    - issues.*\n    - branches.*\n    - commits.*\n    - groups.*\n    - project_labels.*\n  loaders:\n  - name: target-athena-gitlab\n    inherit_from: target-athena\n    config:\n      stream_maps:\n        projects:\n          __alias__: \"gitlab_projects\"\n        users:\n          __alias__: \"gitlab_users\"\n        merge_requests:\n          __alias__: \"gitlab_merge_requests\"\n        issues:\n          __alias__: \"gitlab_issues\"\n        branches:\n          __alias__: \"gitlab_branches\"\n        commits:\n          __alias__: \"gitlab_commits\"\n        groups:\n          __alias__: \"gitlab_groups\"\n        project_labels:\n          __alias__: \"gitlab_project_labels\"\n        \"__else__\": null\n```\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\nmeltano, version 1.90.1\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\nThe original stream is still persisted even after I alias it.\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nAliasing a stream would produce only the alias stream and the original would be excluded.\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)",
      "state": "closed",
      "created_at": "2022-01-05T15:21:57.588Z",
      "updated_at": "2022-02-01T18:54:26.162Z",
      "closed_at": "2022-02-01T18:54:26.143Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2286177,
        "iid": 204,
        "group_id": 2524164,
        "title": "February 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:35.408Z",
        "updated_at": "2022-03-01T20:28:25.106Z",
        "due_date": "2022-02-28",
        "start_date": "2022-02-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/204"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/301",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/301",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/301/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/301/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#301",
        "relative": "#301",
        "full": "meltano/sdk#301"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 101423577,
      "iid": 315,
      "project_id": 22672923,
      "title": "Release v0.4.2",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [x] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [ ] Post-release announcement steps:\n    1. [x] Post announcement to Meltano slack: `#announcements`\n    2. [x] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [x] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [x] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-01-28T00:44:35.331Z",
      "updated_at": "2022-02-07T16:59:51.450Z",
      "closed_at": "2022-02-07T16:59:51.441Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/315",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 21
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/315",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/315/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/315/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#315",
        "relative": "#315",
        "full": "meltano/sdk#315"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 87767167,
      "iid": 133,
      "project_id": 22672923,
      "title": "Record flattening for targets",
      "description": "For targets which land data in a columnar format, 'data flattening' has become a common problem for these types of targets. We can implement a `Sink.flatten_record(record, max_level)` and `Sink.flatten_schema(schema, max_level)` method which would take a nested structure and output a columnar one.\n\nFor instance, `{ \"col_a\": { \"subcol_1\": 1, \"subcol_2\": 2 }` would become `{ \"col_a__subcol_1\": 1, \"col_a__subcol_2\": 2 }`.\n\n1. Tap developers should be able to leverage flattening behavior automatically unless they want to disable it.\n    - For example, a `target-jsonl` destination would have this disabled, whereas `target-snowflake` might have it on by default and configurable by the user. \n    - Unclear if this should be opt-in or opt-out on the developer's side.\n2. Assuming flattening is allowed by the target, the user should be able to disable or customize flattening with a config option like `max_flattening_level`, where `max_flattening_level = 0` disables the flattening behavior altogether.",
      "state": "closed",
      "created_at": "2021-05-26T17:32:02.676Z",
      "updated_at": "2022-02-09T05:57:54.739Z",
      "closed_at": "2022-02-09T05:57:54.726Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "Load",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/133",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/133",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/133/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/133/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#133",
        "relative": "#133",
        "full": "meltano/sdk#133"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 102290591,
      "iid": 327,
      "project_id": 22672923,
      "title": "Enable JSONPath for GraphQL record extraction",
      "description": "> The current expectation for a graphql response is that its structure would match the stream name. There are occasions, however, when this is not the case. In such situations there is currently a need to override the `parse_response` method, but it would be more straightforward to use a consistent approach to the parent RESTStream and simply set the `records_jsonpath` variable.",
      "state": "closed",
      "created_at": "2022-02-11T18:45:59.607Z",
      "updated_at": "2022-02-16T01:13:31.753Z",
      "closed_at": "2022-02-16T01:13:31.709Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "Community-Contributed MR",
        "flow::Review",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2286177,
        "iid": 204,
        "group_id": 2524164,
        "title": "February 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:35.408Z",
        "updated_at": "2022-03-01T20:28:25.106Z",
        "due_date": "2022-02-28",
        "start_date": "2022-02-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/204"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/327",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/327",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/327/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/327/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#327",
        "relative": "#327",
        "full": "meltano/sdk#327"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 101905513,
      "iid": 326,
      "project_id": 22672923,
      "title": "Release v0.4.3",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [ ] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [ ] Post-release announcement steps:\n    1. [ ] Post announcement to Meltano slack: `#announcements`\n    2. [ ] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [ ] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [ ] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-02-04T18:28:49.064Z",
      "updated_at": "2022-02-22T22:12:19.386Z",
      "closed_at": "2022-02-22T22:12:19.378Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [],
      "milestone": null,
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 0,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/326",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 16
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/326",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/326/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/326/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#326",
        "relative": "#326",
        "full": "meltano/sdk#326"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 100147775,
      "iid": 300,
      "project_id": 22672923,
      "title": "Tap fails to read its own state file with partitions",
      "description": "I'm running https://github.com/MeltanoLabs/tap-github but have noticed the same behavior for tap-clickup (see https://github.com/AutoIDM/tap-clickup/issues/101). \n\n\nI'm getting an exception `AttributeError: 'str' object has no attribute 'pop'`\n\nThe dumped state files look like\n```json\n{\n  \"bookmarks\": {\n    \"commits\": {\n      \"partitions\": {\n        \"0\": {\n          \"context\": {\n            \"org\": \"meshcloud\",\n            \"repo\": \"meshcloud-docs\"\n          },\n          \"progress_markers\": {\n            \"Note\": \"Progress is not resumable if interrupted.\",\n            \"replication_key\": \"commit_timestamp\",\n            \"replication_key_value\": \"2021-12-20T14:37:28Z\"\n          },\n          \"replication_key_signpost\": \"2022-01-05T10:07:47.847343+00:00\",\n          \"starting_replication_value\": \"2016-01-01\",\n          \"replication_key\": \"commit_timestamp\",\n          \"replication_key_value\": \"2021-12-20T14:37:28Z\"\n        },\n        \"1\": {\n          \"context\": {\n            \"org\": \"meshcloud\",\n            \"repo\": \"meshfed-release\"\n          },\n          \"progress_markers\": {\n            \"Note\": \"Progress is not resumable if interrupted.\",\n            \"replication_key\": \"commit_timestamp\",\n            \"replication_key_value\": \"2022-01-05T09:49:56Z\"\n          },\n          \"replication_key_signpost\": \"2022-01-05T10:08:40.186143+00:00\",\n          \"starting_replication_value\": \"2016-01-01\",\n          \"replication_key\": \"commit_timestamp\",\n          \"replication_key_value\": \"2022-01-05T09:49:56Z\"\n        }\n      }\n    },\n```\n\nFrom the code in the sdk `tap_base.py` ~L300 it seems that it expects that partitions is an array, not an pseudo-array object\n\n```python\ndef _reset_state_progress_markers(self) -> None:\n        \"\"\"Clear prior jobs' progress markers at beginning of sync.\"\"\"\n        for stream_name, state in self.state.get(\"bookmarks\", {}).items():\n            _state.reset_state_progress_markers(state)\n            for partition_state in state.get(\"partitions\", []):\n                _state.reset_state_progress_markers(partition_state)\n```\n\nThis leads me to believe that there's actually a bug in the sdk, either in writing or reading the state file.\n\nHere's a full stacktrace for reference\n\n```text\n2022-01-05T13:15:11.756895Z [info     ] Traceback (most recent call last): cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.757165Z [info     ]   File \"/Users/jrudolph/dev/mc/meshbarn/tractor/.meltano/extractors/tap-github/venv/bin/tap-github\", line 8, in <module> cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.762690Z [info     ]     sys.exit(cli())            cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.763016Z [info     ]   File \"/Users/jrudolph/dev/mc/meshbarn/tractor/.meltano/extractors/tap-github/venv/lib/python3.9/site-packages/click/core.py\", line 1128, in __call__ cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.763282Z [info     ]     return self.main(*args, **kwargs) cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.765100Z [info     ]   File \"/Users/jrudolph/dev/mc/meshbarn/tractor/.meltano/extractors/tap-github/venv/lib/python3.9/site-packages/click/core.py\", line 1053, in main cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.765377Z [info     ]     rv = self.invoke(ctx)      cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.765521Z [info     ]   File \"/Users/jrudolph/dev/mc/meshbarn/tractor/.meltano/extractors/tap-github/venv/lib/python3.9/site-packages/click/core.py\", line 1395, in invoke cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.767631Z [info     ]     return ctx.invoke(self.callback, **ctx.params) cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.767899Z [info     ]   File \"/Users/jrudolph/dev/mc/meshbarn/tractor/.meltano/extractors/tap-github/venv/lib/python3.9/site-packages/click/core.py\", line 754, in invoke cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.768127Z [info     ]     return __callback(*args, **kwargs) cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.768752Z [info     ]   File \"/Users/jrudolph/dev/mc/meshbarn/tractor/.meltano/extractors/tap-github/venv/lib/python3.9/site-packages/singer_sdk/tap_base.py\", line 477, in cli cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.768983Z [info     ]     tap.sync_all()             cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.769189Z [info     ]   File \"/Users/jrudolph/dev/mc/meshbarn/tractor/.meltano/extractors/tap-github/venv/lib/python3.9/site-packages/singer_sdk/tap_base.py\", line 330, in sync_all cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.769413Z [info     ]     self._reset_state_progress_markers() cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.769645Z [info     ]   File \"/Users/jrudolph/dev/mc/meshbarn/tractor/.meltano/extractors/tap-github/venv/lib/python3.9/site-packages/singer_sdk/tap_base.py\", line 307, in _reset_state_progress_markers cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.772134Z [info     ]     _state.reset_state_progress_markers(partition_state) cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.772292Z [info     ]   File \"/Users/jrudolph/dev/mc/meshbarn/tractor/.meltano/extractors/tap-github/venv/lib/python3.9/site-packages/singer_sdk/helpers/_state.py\", line 170, in reset_state_progress_markers cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.772430Z [info     ]     progress_markers = stream_or_partition_state.pop(PROGRESS_MARKERS, {}) cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n2022-01-05T13:15:11.776907Z [info     ] AttributeError: 'str' object has no attribute 'pop' cmd_type=extractor job_id=tap-github-to-bigquery name=tap-github run_id=8629511d-ebf7-4004-adbf-68a09415d312 stdio=stderr\n```",
      "state": "closed",
      "created_at": "2022-01-05T13:26:26.700Z",
      "updated_at": "2022-03-01T13:51:48.052Z",
      "closed_at": "2022-02-28T15:06:14.245Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "kind::Bug",
        "urgency::high",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2286177,
        "iid": 204,
        "group_id": 2524164,
        "title": "February 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:35.408Z",
        "updated_at": "2022-03-01T20:28:25.106Z",
        "due_date": "2022-02-28",
        "start_date": "2022-02-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/204"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 687584,
        "username": "jrudolph1",
        "public_email": "",
        "name": "Johannes Rudolph",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/586a078036f6bf61d1c11463fac1f40c74fd194b6bee3ed314b95502409f7115?s=80&d=identicon",
        "web_url": "https://gitlab.com/jrudolph1"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 17,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/300",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/300",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/300/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/300/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#300",
        "relative": "#300",
        "full": "meltano/sdk#300"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    }
  ]
}
