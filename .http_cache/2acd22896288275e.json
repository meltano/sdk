{
  "cookies": {
    "_cfuvid": "uB_T5MrRx2yOSS_TodsctcR_TtrH.Md.4KdIT94FhXo-1747940881010-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:08:00.947631+00:00",
  "elapsed": 0.719761,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e99869bce60af-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:08:01 GMT",
    "ETag": "W/\"de9fbae8b2fcfd27809d897d1c15d8b7\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/96/issues?epic_iid=96&id=2524164&page=2&per_page=20>; rel=\"next\", <https://gitlab.com/api/v4/groups/2524164/epics/96/issues?epic_iid=96&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/96/issues?epic_iid=96&id=2524164&page=2&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=uB_T5MrRx2yOSS_TodsctcR_TtrH.Md.4KdIT94FhXo-1747940881010-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-15-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-d",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"afa57a9ccf6227062fbd6a4e746dadfb\",\"version\":\"1\"}",
    "x-next-page": "2",
    "x-page": "1",
    "x-per-page": "20",
    "x-prev-page": "",
    "x-request-id": "afa57a9ccf6227062fbd6a4e746dadfb",
    "x-runtime": "0.422345",
    "x-total": "37",
    "x-total-pages": "2"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/96/issues"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/96/issues",
  "_decoded_content": [
    {
      "id": 108966505,
      "iid": 394,
      "project_id": 22672923,
      "title": "Reduce number of dependencies for taps vs targets",
      "description": "## Summary\nThe `sdk` depends on a number of libraries that are only used in the tap or target context. This adds weight to virtual envs, potential for dependency conflicts, security issues, etc...\n\nWhile I don't have an immediate solution, it would make sense to work towards a way to split dependencies according to the use-case of the sdk.\n\n## Proposed benefits\n- smaller code footprint (weight, security, conflicts...)\n- faster venv installs -> happy devs :smile: \n\n## Proposal details\nThe `singer` recommendation is to install each tap/target in its own virtual env to minimize potential for dependency conflicts, etc...\nAs an example, we run `tap-github` and `tap-gitlab`, each of which pulls in `singer-sdk` and transitively `sqlalchemy` (and its own dependencies). As these are taps, they make no use of `sqlalchemy` (and likely never will). `sqlalchemy` is interesting because it also requires a bunch of build dependencies as it contains C code that's built upon install.\nI suspect there are similar dependencies that are not used by the target part of the sdk.\n\nI'm wondering if it would be possible to break up the dependency list into something like `deps-tap` and `deps-target` so that non-development installations of the sdk fetch fewer dependencies.\n\n## Best reasons not to build\nI'm conscious this is probably not trivial, and might lead to headaches by creating multiple \"shades\" of the sdk.\n\n`poetry` has an `extras` mechanism, but I don't know if it can handle variants, unless dependencies are individually declared as extras, which may also make installation less straightforward.",
      "state": "closed",
      "created_at": "2022-05-23T10:34:58.748Z",
      "updated_at": "2022-05-30T00:16:35.824Z",
      "closed_at": "2022-05-30T00:16:35.805Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 75577,
        "username": "LaurentS",
        "public_email": "",
        "name": "Laurent Sava\u00ebte",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/ac898ad4d1975ac4678873c142f8ed88161383546137af50ad4f58fdc678c798?s=80&d=identicon",
        "web_url": "https://gitlab.com/LaurentS"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/394",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/394",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/394/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/394/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#394",
        "relative": "#394",
        "full": "meltano/sdk#394"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1383128,
      "relative_position": -20007
    },
    {
      "id": 108888772,
      "iid": 393,
      "project_id": 22672923,
      "title": "Cast environment variables config values into their respective JSON schema type",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nCurrently only arrays of strings are parsed: `value1,value2` -> `[\"value1\", \"value2\"]`. A similar process for `number`, `boolean` and `integer` would be valuable.\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\n- Users can fully rely on environment variables and `.env` to configure their taps\n- Richer data types can be used for environment variables\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\nWe already have some functions to check for data types in https://gitlab.com/meltano/sdk/-/blob/main/singer_sdk/helpers/_typing.py, so we could extend and leverage those when parsing environment variables.\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nSupport for environment variables is not common in the Singer ecosystem.",
      "state": "closed",
      "created_at": "2022-05-20T18:16:14.625Z",
      "updated_at": "2022-05-30T00:16:28.096Z",
      "closed_at": "2022-05-30T00:16:28.079Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2136620,
        "iid": 176,
        "group_id": 2524164,
        "title": "Staging",
        "description": "",
        "state": "active",
        "created_at": "2021-07-07T19:00:49.676Z",
        "updated_at": "2021-07-07T19:00:49.676Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/176"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/393",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/393",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/393/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/393/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#393",
        "relative": "#393",
        "full": "meltano/sdk#393"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1383193,
      "relative_position": -20520
    },
    {
      "id": 108648327,
      "iid": 384,
      "project_id": 22672923,
      "title": "The `--config=ENV` option should consider environment variables from a dotenv (.env) file if present.",
      "description": "> When the `--config=ENV` option is provided, config values will be considered from env variables in the terminal context and also in a `.env` file, if present within the current working directory.\n\ncc @aaronsteers",
      "state": "closed",
      "created_at": "2022-05-17T02:03:06.031Z",
      "updated_at": "2022-05-19T19:14:59.287Z",
      "closed_at": "2022-05-19T19:14:59.238Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/384",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/384",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/384/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/384/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#384",
        "relative": "#384",
        "full": "meltano/sdk#384"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": {
        "id": 56415,
        "iid": 55,
        "sequence": 2,
        "group_id": 2524164,
        "title": null,
        "description": null,
        "state": 3,
        "created_at": "2022-05-13T20:04:48.838Z",
        "updated_at": "2022-05-23T00:05:02.513Z",
        "start_date": "2022-05-16",
        "due_date": "2022-05-22",
        "web_url": "https://gitlab.com/groups/meltano/-/iterations/56415"
      },
      "health_status": null,
      "epic_issue_id": 1371248,
      "relative_position": -19494
    },
    {
      "id": 107337167,
      "iid": 368,
      "project_id": 22672923,
      "title": "Streams should not be able to add duplicate contexts to state",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nThere are some situations in which a developer might (accidentally) create/update the stream state with a duplicate partition context. This results in the stream failing on the next invocation when the duplicate is detected: https://gitlab.com/meltano/sdk/-/blob/72e7e2be7271d37c9d2c40ae0d0be3785c243876/singer_sdk/helpers/_state.py#L83-87.\n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\nNA\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\nDuplicate partition contexts are written to a stream state.\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nTaps should not be allowed to write duplicate contexts.\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\nNA\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\n\nOne safeguard we could add to prevent this is to check for duplicates _before_ they're added to the tap state in https://gitlab.com/meltano/sdk/-/blob/72e7e2be7271d37c9d2c40ae0d0be3785c243876/singer_sdk/helpers/_state.py#L95-101.",
      "state": "closed",
      "created_at": "2022-04-27T23:56:26.173Z",
      "updated_at": "2022-05-30T00:13:19.760Z",
      "closed_at": "2022-05-30T00:13:19.740Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/368",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/368",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/368/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/368/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#368",
        "relative": "#368",
        "full": "meltano/sdk#368"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1326647,
      "relative_position": -18981
    },
    {
      "id": 107044760,
      "iid": 367,
      "project_id": 22672923,
      "title": "Should we migrate the cookiecutters to `copier`?",
      "description": "https://www.recallstack.icu/en/2020/04/18/yeoman-and-cookiecutter-are-dead-long-live-copier/",
      "state": "closed",
      "created_at": "2022-04-22T18:10:20.330Z",
      "updated_at": "2022-05-31T18:54:33.948Z",
      "closed_at": "2022-05-31T18:54:33.932Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Tech Debt",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": true,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/367",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/367",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/367/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/367/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#367",
        "relative": "#367",
        "full": "meltano/sdk#367"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1312326,
      "relative_position": -18468
    },
    {
      "id": 106938618,
      "iid": 364,
      "project_id": 22672923,
      "title": "Working example needed for developer-triggered state bookmark finalization (unsorted streams)",
      "description": "State markers are by default marked as non-resumable if a stream's output is unsorted (or sorted in reverse).\n\nIn theory, the developer can control for this by running smaller loops through the data that are resumable at specific checkpoints.\n\nFor example, if an API can only return records in reverse sorted order, a developer could write a loop that iterates on time periods in ascending order. Taking for example a monthly time period, a developer could force the API to only retrieve records one month at a time, and loop through months until today's date. In this scenario, the bookmark is resumable exactly in between each month's loop, aka the stream is resumable after each month's data is fully collected.\n\nWe don't have code samples for this as of yet but in theory it should be addressable with some small adaptations to default behaviors.\n\n## Call for contributors\n\nIf anyone has samples - working or not working - these examples could be helpful towards us developing a guidance for developers, including sample code snippets to address the use case.",
      "state": "closed",
      "created_at": "2022-04-21T00:14:35.393Z",
      "updated_at": "2022-05-30T00:12:56.580Z",
      "closed_at": "2022-05-30T00:12:56.564Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Documentation",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/364",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/364",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/364/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/364/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#364",
        "relative": "#364",
        "full": "meltano/sdk#364"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1309695,
      "relative_position": -17955
    },
    {
      "id": 106649868,
      "iid": 363,
      "project_id": 22672923,
      "title": "Nested Primary keys and Incremental keys in data is a pain",
      "description": "When data has a primary key but it's nested in an Object the Singer spec itself doesn't tend to work well. We resort to doing something like https://github.com/AutoIDM/tap-googleads/pull/28 which means we create a field like `_sdc_primary_key` at the top level so that `key_properties` in the schema can reference the proper field (nested objects don't work)\n\nThis was brought up here https://meltano.slack.com/archives/C01PKLU5D1R/p1649947327618639 , and I thought randomly of using a jsonpath to point to your `key_properties` instead would be nice!\n\n@edgarrmondragon had an idea from that! So here we go :D",
      "state": "closed",
      "created_at": "2022-04-14T15:14:36.826Z",
      "updated_at": "2022-05-30T00:12:49.461Z",
      "closed_at": "2022-05-30T00:12:49.431Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/363",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/363",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/363/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/363/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#363",
        "relative": "#363",
        "full": "meltano/sdk#363"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1295374,
      "relative_position": -17442
    },
    {
      "id": 105930814,
      "iid": 358,
      "project_id": 22672923,
      "title": "In cookiecutter templates, get setting values automatically from `.env`",
      "description": "The common convention and best practice today is to use `.env` files to store sensitive and nonsensitive env vars. The `python-dotenv` package makes parsing `.env` context trivial and we should consider adding this to the standard cookiecutter templates.",
      "state": "closed",
      "created_at": "2022-04-02T07:54:29.173Z",
      "updated_at": "2022-05-19T19:14:59.583Z",
      "closed_at": "2022-05-19T19:14:59.561Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 0,
      "merge_requests_count": 2,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/358",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/358",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/358/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/358/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#358",
        "relative": "#358",
        "full": "meltano/sdk#358"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1267533,
      "relative_position": -16929
    },
    {
      "id": 105709988,
      "iid": 355,
      "project_id": 22672923,
      "title": "Custom transformations for mappers",
      "description": "I'd like to add my own custom transformations in certain cases. \n\nFor example look at https://gitlab.com/vischous/singer-sdk/-/merge_requests/1/diffs#0a4f2ae2b6469688d540039ffa026037de097e8e_50_52\n\nIn this case I have a very specific transformation tied to Active Directory that I want to do. I'd like to be able to add these types of functions easily without having to add them to my own fork of the Singer SDK. This type of transformation is not usable to anyone outside of active directory so I don't think it'd ever make it into the SDK. \n\n(Ignore all changes but `mapper.py` as there's some changes due to cookiecutter stuff with Windows that's completely unrelated to this)",
      "state": "closed",
      "created_at": "2022-03-29T20:34:48.183Z",
      "updated_at": "2022-05-30T00:11:47.353Z",
      "closed_at": "2022-05-30T00:11:47.328Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/355",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/355",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/355/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/355/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#355",
        "relative": "#355",
        "full": "meltano/sdk#355"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1237302,
      "relative_position": -16416
    },
    {
      "id": 105705986,
      "iid": 354,
      "project_id": 22672923,
      "title": "Client.py for a tap of stream type SQL being overwritten during project initialization",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\nWhen you initialize a SQL project with Meltano SDK 0.4.4 the client.py file's contents does not match up with that of the template designated for it.  Thanks to ptd's troubleshoot this issue and let me know in slack that the file is being overwritten because the evolution for another client.py file is also true so it overwrites the correct client.py file. \n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n```\ncookiecutter https://gitlab.com/meltano/sdk --directory=\"cookiecutter/tap-template\"\n\nsource_name [MySourceName]: test\nadmin_name [FirstName LastName]: Dan Norman\ntap_id [tap-test]:\nlibrary_name [tap_test]:\nSelect stream_type:\n1 - REST\n2 - GraphQL\n3 - SQL\n4 - Other\nChoose from 1, 2, 3, 4 [1]: 3\nSelect auth_method:\n1 - API Key\n2 - Bearer Token\n3 - Basic Auth\n4 - OAuth2\n5 - JWT\n6 - Custom or N/A\nChoose from 1, 2, 3, 4, 5, 6 [1]: 3\nSelect include_cicd_sample_template:\n1 - GitHub\n2 - None (Skip)\nChoose from 1, 2 [1]:\n```\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\nWhen you run cookiecutter with the tap-template the clinet.py file's contents does not match the contents of the template on gitlab.  The file actually matches the client.py file designated for streams types that are not REST or GraphQL\n\n`{%if cookiecutter.stream_type not in ('REST', 'GraphQL')%}client.py{%endif%}`\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\nThe client.py file's contents should match up with the client.py designated for SQL stream type\n\n`{%if 'SQL' == cookiecutter.stream_type %}client.py{%endif%}`\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n```\nDEBUG cookiecutter.utils: Making sure path exists: /home/dannorman/development/tap-test/tap_test/tests\nDEBUG cookiecutter.utils: Created directory at: /home/dannorman/development/tap-test/tap_test/tests\nDEBUG cookiecutter.generate: Processing file {{cookiecutter.library_name}}/{%if 'SQL' == cookiecutter.stream_type %}client.py{%endif%}\nDEBUG cookiecutter.generate: Created file at /home/dannorman/development/tap-test/tap_test/client.py\nDEBUG cookiecutter.generate: Check {{cookiecutter.library_name}}/{%if 'SQL' == cookiecutter.stream_type %}client.py{%endif%} to see if it's a binary\nDEBUG cookiecutter.generate: Writing contents to file /home/dannorman/development/tap-test/tap_test/client.py\nDEBUG cookiecutter.generate: Processing file {{cookiecutter.library_name}}/{%if cookiecutter.auth_method in ('OAuth2', 'JWT')%}auth.py{%endif%}\nDEBUG cookiecutter.generate: The resulting file name is empty: /home/dannorman/development/tap-test/tap_test/\nDEBUG cookiecutter.generate: Processing file {{cookiecutter.library_name}}/{%if 'SQL' != cookiecutter.stream_type %}streams.py{%endif%}\nDEBUG cookiecutter.generate: The resulting file name is empty: /home/dannorman/development/tap-test/tap_test/\nDEBUG cookiecutter.generate: Processing file {{cookiecutter.library_name}}/{%if cookiecutter.stream_type not in ('REST', 'GraphQL')%}client.py{%endif%}\nDEBUG cookiecutter.generate: Created file at /home/dannorman/development/tap-test/tap_test/client.py\nDEBUG cookiecutter.generate: Check {{cookiecutter.library_name}}/{%if cookiecutter.stream_type not in ('REST', 'GraphQL')%}client.py{%endif%} to see if it's a binary\nDEBUG cookiecutter.generate: Writing contents to file /home/dannorman/development/tap-test/tap_test/client.py\n```\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\nI would propose changing the client.py evaluation for not in REST or GraphQL from:\n\n`{%if cookiecutter.stream_type not in ('REST', 'GraphQL')%}client.py{%endif%}`\n\nto the following:\n\n `{%if 'Other' == cookiecutter.stream_type %}client.py{%endif%}`\n\nMy reasoning is that there are 4 streams types REST, GraphQL, SQL, and Other.  REST, GraphQL and SQL all have designated client.py files which leaves only a stream type of Other without a designated client.py file.",
      "state": "closed",
      "created_at": "2022-03-29T18:54:20.624Z",
      "updated_at": "2022-04-26T02:48:36.059Z",
      "closed_at": "2022-04-26T02:48:36.005Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 11232982,
        "username": "BuzzCutNorman",
        "public_email": "",
        "name": "Dan Norman",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/d0643a73d2d930c7ffa73eac21c983e4cbe0139b151b85906c9c3beed15f0905?s=80&d=identicon",
        "web_url": "https://gitlab.com/BuzzCutNorman"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/354",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/354",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/354/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/354/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#354",
        "relative": "#354",
        "full": "meltano/sdk#354"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1232604,
      "relative_position": -15903
    },
    {
      "id": 105702514,
      "iid": 353,
      "project_id": 22672923,
      "title": "Cookiecutter tap.py template not assigning SQLTap as parent class for the tap when initializing a SQL stream type project",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\nWhen you initialize a tap with a stream type of SQL using the Meltano SDK v0.4.4 the new tap class in the tap.py file does no have the parent as class of SQLTap it has the parent class of Tap instead.  I believe this happens because the tap.py template in keying off cookiecutter.source_name instead of the cookiecutter.stream_type \n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n```\ncookiecutter https://gitlab.com/meltano/sdk --directory=\"cookiecutter/tap-template\"\n\nsource_name [MySourceName]: test\nadmin_name [FirstName LastName]: Dan Norman\ntap_id [tap-test]:\nlibrary_name [tap_test]:\nSelect stream_type:\n1 - REST\n2 - GraphQL\n3 - SQL\n4 - Other\nChoose from 1, 2, 3, 4 [1]: 3\nSelect auth_method:\n1 - API Key\n2 - Bearer Token\n3 - Basic Auth\n4 - OAuth2\n5 - JWT\n6 - Custom or N/A\nChoose from 1, 2, 3, 4, 5, 6 [1]: 3\nSelect include_cicd_sample_template:\n1 - GitHub\n2 - None (Skip)\nChoose from 1, 2 [1]:\n```\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\nIn the tap.py file for the tap example above the class looks like this after initialization:\n\n`class Taptest(Tap):`\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\nI would expect to see the tap class to look like this:\n\n`class Taptest(SQLTap):`\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\nsdk/cookiecutter/tap-template/{{cookiecutter.tap_id}}/{{cookiecutter.library_name}}/tap.py\n\nline 31:\n\n`class Tap{{ cookiecutter.source_name }}({{ 'SQL' if cookiecutter.source_name == 'SQL' else '' }}Tap):`\n\nPropose changing line 31 to:\n\n`class Tap{{ cookiecutter.source_name }}({{ 'SQL' if cookiecutter.stream_type == 'SQL' else '' }}Tap):`",
      "state": "closed",
      "created_at": "2022-03-29T17:27:18.953Z",
      "updated_at": "2022-04-22T19:20:25.808Z",
      "closed_at": "2022-04-22T15:58:49.464Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 11232982,
        "username": "BuzzCutNorman",
        "public_email": "",
        "name": "Dan Norman",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/d0643a73d2d930c7ffa73eac21c983e4cbe0139b151b85906c9c3beed15f0905?s=80&d=identicon",
        "web_url": "https://gitlab.com/BuzzCutNorman"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/353",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/353",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/353/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/353/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#353",
        "relative": "#353",
        "full": "meltano/sdk#353"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1232591,
      "relative_position": -15390
    },
    {
      "id": 105506957,
      "iid": 351,
      "project_id": 22672923,
      "title": "Guidance for typing large numbers in streams' JSON Schemas",
      "description": "We have run into a few cases recently where very large integers or very large currency amounts were being stored as strings in the source API, and the question has come up in a few forms:\n\n> Should we type this to an int or numeric type? \n> \n> How can we avoid overflow downstream if the contents are not expected to fit into a 32-bit structure?\n\n## Example from tap-github\n\nhttps://github.com/MeltanoLabs/tap-github/pull/93#issuecomment-1073363917\n\n> @Ry-DS It looks like the API is indeed returning them as strings, but they are clearly integers... Can we force the conversion? Do you get an error?\n>\n> -> https://api.github.com/repos/facebook/react/events\n> \n> It makes sense that it's a string as the number is quite large (20 billion) which definitely won't fit in a 32bit signed integer (max 2 billion). I think it's the right move to keep it as strings (it would error out otherwise).",
      "state": "closed",
      "created_at": "2022-03-25T15:23:06.107Z",
      "updated_at": "2022-05-30T00:11:16.568Z",
      "closed_at": "2022-05-30T00:11:16.553Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/351",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/351",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/351/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/351/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#351",
        "relative": "#351",
        "full": "meltano/sdk#351"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1225825,
      "relative_position": -14877
    },
    {
      "id": 104490745,
      "iid": 346,
      "project_id": 22672923,
      "title": "JSON decimal values should be parsed as Python `decimal.Decimal` in targets when reading Singer messages",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nJSON decimal values should be parsed as Python `decimal.Decimal` in targets when reading Singer messages.\n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\nTry piping a tap that outputs similar to `{\"type\": \"number\", \"multipleOf\": \"0.001\"}` to a target that performs JSON schema validation. Values that should pass validation will fail.\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\nDecimals are loaded as `float` values which may cause problems when their precision is important, e.g. when validating against JSON schema `multipleOf' .\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nDecimals should be loaded as `decimal.Decimal` to preserve precision.\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\n```python\n>>> import jsonschema\n>>> jsonschema.validate(48.867082, {\"type\": \"number\", \"multipleOf\": 0.000001})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/edgarramirez/Library/Caches/pypoetry/virtualenvs/singer-sdk-S0flctL8-py3.9/lib/python3.9/site-packages/jsonschema/validators.py\", line 934, in validate\n    raise error\njsonschema.exceptions.ValidationError: 48.867082 is not a multiple of 1e-06\n\nFailed validating 'multipleOf' in schema:\n    {'multipleOf': 1e-06, 'type': 'number'}\n\nOn instance:\n    48.867082\n>>> import decimal\n>>> jsonschema.validate(decimal.Decimal(\"48.867082\"), {\"type\": \"number\", \"multipleOf\": decimal.Decimal(\"0.000001\")})\n```\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\n\nThe `jsonschema` library dev recommends loading JSON decimals as Python `decimal.Decimal`: https://github.com/Julian/jsonschema/issues/810#issuecomment-846025354.\n\nUsing `json.loads(..., parse_float=decimal.Decimal)` in https://gitlab.com/meltano/sdk/-/blob/b394e1a9c0d68a554640974c05be1c9d548270ee/singer_sdk/io_base.py#L77 should fix the issue.",
      "state": "closed",
      "created_at": "2022-03-09T16:17:31.294Z",
      "updated_at": "2022-05-30T00:10:38.426Z",
      "closed_at": "2022-05-30T00:10:38.407Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/346",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/346",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/346/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/346/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#346",
        "relative": "#346",
        "full": "meltano/sdk#346"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1174101,
      "relative_position": -14364
    },
    {
      "id": 103974115,
      "iid": 341,
      "project_id": 22672923,
      "title": "Fix SQLAlchemy warning",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nA warning is being raised by SQLAlchemy because we're using a deprecated method.\n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\nRun core tests and notice the warnings being raised.\n\n```shell\npoetry run pytest tests/core/test_sqlite.py\n```\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\n9 Warnings are raised.\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nNo warnings should be raised.\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\nCI logs: https://gitlab.com/ReubenFrankel/sdk/-/jobs/2151755969#L202\n\n```console\n$ poetry run pytest tests/core/test_sqlite.py \n=================================================== test session starts ====================================================\nplatform darwin -- Python 3.9.9, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\nrootdir: /Users/edgarramirez/Code/sdk\nplugins: requests-mock-1.9.3\ncollected 9 items\n\ntests/core/test_sqlite.py .........                                                                                   [100%]\n\n===================================================== warnings summary =====================================================\ntests/core/test_sqlite.py::test_sync_sqlite_to_sqlite\ntests/core/test_sqlite.py::test_sync_sqlite_to_sqlite\ntests/core/test_sqlite.py::test_sync_sqlite_to_sqlite\ntests/core/test_sqlite.py::test_sqlite_column_addition\ntests/core/test_sqlite.py::test_sqlite_column_addition\ntests/core/test_sqlite.py::test_sqlite_column_morph\ntests/core/test_sqlite.py::test_sqlite_column_morph\ntests/core/test_sqlite.py::test_sqlite_column_no_morph\ntests/core/test_sqlite.py::test_sqlite_column_no_morph\n  /Users/edgarramirez/Code/sdk/singer_sdk/streams/sql.py:430: SADeprecationWarning: The Engine.has_table() method is\n  deprecated and will be removed in a future release.  Please refer to Inspector.has_table(). (deprecated since: 1.4)\n    return self._engine.has_table(full_table_name)\n\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\n============================================== 9 passed, 9 warnings in 2.69s ===============================================\n```\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\n\nReplace `self._engine.has_table(full_table_name)` with `sqlalchemy.inspect(self._engine).has_table(full_table_name)`.",
      "state": "closed",
      "created_at": "2022-03-02T15:58:15.160Z",
      "updated_at": "2022-04-03T20:09:20.267Z",
      "closed_at": "2022-04-03T20:09:20.222Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/341",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/341",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/341/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/341/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#341",
        "relative": "#341",
        "full": "meltano/sdk#341"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1159049,
      "relative_position": -13851
    },
    {
      "id": 103860319,
      "iid": 339,
      "project_id": 22672923,
      "title": "Consider type helpers for IDN/IRI JSON Schema types",
      "description": "The following discussion from !250 should be addressed:\n\n- [ ] @aaronsteers started a [discussion](https://gitlab.com/meltano/sdk/-/merge_requests/250#note_855037495):  (+3 comments)\n\nThese were removed from !250 but we can re-add them if there is strong value in doing so:\n\n* IDNHostNameType\n* IDNEmailType\n* IRIType\n* IRIReferenceType",
      "state": "closed",
      "created_at": "2022-02-28T23:45:16.177Z",
      "updated_at": "2022-05-30T00:09:44.388Z",
      "closed_at": "2022-05-30T00:09:44.371Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/339",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 1,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/339",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/339/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/339/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#339",
        "relative": "#339",
        "full": "meltano/sdk#339"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1155467,
      "relative_position": -13338
    },
    {
      "id": 103010323,
      "iid": 336,
      "project_id": 22672923,
      "title": "Support additional string formats in typing helper classes",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nSupport [additional string formats built into the JSON Schema spec](https://json-schema.org/understanding-json-schema/reference/string.html#built-in-formats).\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nA more comprehensive library of reusable typing classes for schemas.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\nThe SDK currently only lists `date` and `date-time` strings formats, but there's a handful of other formats that would be useful like `email`, `ipv4`, `uri`, etc.\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nThere aren't any real downsides to adding these :slight_smile:",
      "state": "closed",
      "created_at": "2022-02-24T18:14:20.044Z",
      "updated_at": "2022-03-02T16:51:54.308Z",
      "closed_at": "2022-03-02T16:50:26.935Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/336",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/336",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/336/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/336/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#336",
        "relative": "#336",
        "full": "meltano/sdk#336"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1148814,
      "relative_position": -12312
    },
    {
      "id": 102964430,
      "iid": 335,
      "project_id": 22672923,
      "title": "Consider making logging more granular",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nLeverage Python's [dot-separated logger hierarchy](https://docs.python.org/3/library/logging.html#logging.getLogger) to give developers more control over logging behavior and make it more granular:\n\n- Behavior: handler, format, level\n- Source: tap, stream, SDK.\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nDevelopers can make output more or less verbose for certain streams, etc.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\n![Screen_Shot_2022-02-23_at_21.06.12](/uploads/fb0c52c2bf98c005a1ddec7d408c804d/Screen_Shot_2022-02-23_at_21.06.12.png)\n\n```python\n>>> import logging\n>>> formatter = logging.Formatter(\"{asctime} {levelname} {message}\", style=\"{\")\n>>> handler = logging.StreamHandler()\n>>> handler.setFormatter(formatter)\n>>> tap_logger = logging.getLogger(\"tap-example\")\n>>> tap_logger.addHandler(handler)\n>>> tap_logger.setLevel(logging.INFO)  # Display INFO and up\n>>> stream_logger = logging.getLogger(\"tap-example.my_stream\")\n>>> stream_logger.setLevel(logging.WARNING)  # Display WARNING and up\n>>> tap_logger.debug(\"Info from tap\")\n>>> tap_logger.info(\"Info from tap\")\n2022-02-23 21:10:34,165 INFO Info from tap\n>>> stream_logger.info(\"Info from stream\")\n>>> stream_logger.warning(\"Warning from stream\")\n2022-02-23 21:10:34,175 WARNING Warning from stream\n```\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nWe _may_ not want developers to make their packages to quiet so end-users have useful debugging information by default.",
      "state": "closed",
      "created_at": "2022-02-24T03:15:15.642Z",
      "updated_at": "2022-05-30T00:09:13.627Z",
      "closed_at": "2022-05-30T00:09:13.604Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/335",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/335",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/335/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/335/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#335",
        "relative": "#335",
        "full": "meltano/sdk#335"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1149202,
      "relative_position": -12825
    },
    {
      "id": 102944396,
      "iid": 334,
      "project_id": 22672923,
      "title": "Support enumerated values in SDK JSON schema helpers",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nSupport `enum` in JSON Schema helpers.\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nValidation of enumerated values in records and package configurations.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\nAdd an `enum` keyword argument to the `Property` constructor.\n\nDocs: https://json-schema.org/understanding-json-schema/reference/generic.html#enumerated-values\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\n`CustomType` is a way to do this if users don't mind typing a raw JSON Schema dictionary.",
      "state": "closed",
      "created_at": "2022-02-23T17:36:37.408Z",
      "updated_at": "2022-05-30T00:09:05.813Z",
      "closed_at": "2022-05-30T00:09:05.793Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/334",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/334",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/334/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/334/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#334",
        "relative": "#334",
        "full": "meltano/sdk#334"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1143649,
      "relative_position": -11799
    },
    {
      "id": 102711791,
      "iid": 332,
      "project_id": 22672923,
      "title": "Add typing helper classes to auto-generated Reference docs",
      "description": "We don't (yet) have `typing` helper classes documented in our generated reference docs.\n\n\n\nhttps://sdk.meltano.com/en/latest/reference.html\n\nThe classes are defined here:\n\nhttps://gitlab.com/meltano/sdk/-/blob/main/singer_sdk/typing.py\n\nDocs templates and generators are here:\n\n- https://gitlab.com/meltano/sdk/-/blob/main/docs/reference.rst\n- https://gitlab.com/meltano/sdk/-/tree/main/docs/classes",
      "state": "closed",
      "created_at": "2022-02-18T21:51:13.311Z",
      "updated_at": "2022-05-30T00:08:50.452Z",
      "closed_at": "2022-05-30T00:08:50.436Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Documentation",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/332",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/332",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/332/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/332/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#332",
        "relative": "#332",
        "full": "meltano/sdk#332"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1139633,
      "relative_position": -11286
    },
    {
      "id": 101495895,
      "iid": 319,
      "project_id": 22672923,
      "title": "Create HTTPConnector interface for all API interactions",
      "description": "## Summary\n\n[//]: # (Concisely summarize the feature you are proposing.)\n\nCurrently, for HTTP taps (REST, GraphQL, etc.), all aspects of making a request go through the stream class. This works well for most access patterns where one endpoint corresponds to one stream. However, there are other use cases that require making requests not with the direct purpose of yielding records.\n\n## Proposed benefits\n\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\n- Another request is required to complement or enrich the data, like when trying to get a complete record after a response that contains only IDs (https://gitlab.com/meltano/sdk/-/issues/93+).\n  \n- The API is dynamic and offers metadata endpoints that may inform the tap about available streams (https://gitlab.com/meltano/sdk/-/issues/313+) and/or their schemas (https://gitlab.com/meltano/sdk/-/issues/310+).\n  \n- The underlying request is not accessible, making it harder or unclear how to tweak parameters like timeout limits, caching (https://gitlab.com/meltano/sdk/-/issues/237+), etc.\n  \n- Async requests are not currently supported. Separation of concerns in an object dedicated to HTTP requests might make it easier for the community to implement and contribute an async connector (https://gitlab.com/meltano/sdk/-/issues/291+ and https://gitlab.com/meltano/sdk/-/issues/184+).\n  \n- A single interface for all HTTP sources would make features and bugfixes automatically apply to existing stream types and new ones too (https://gitlab.com/meltano/sdk/-/issues/221+).\n  \n\n## Proposal details\n\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\n- Build a module dedicated to HTTP sources, i.e. `singer_sdk.http`.\n  \n  - `singer_sdk.http.connector` contains the `HTTPConnector` class. In the MVC, `HTTPConnector` would manage aspects that the exiting stream classes do not, like the `Session` object.\n    \n  - `singer_sdk.http.streams.base`. In the MVC, methods useful to both GraphQL and REST streams can be moved to `HTTPStream` in this module without introducing breaking changes.\n    \n  - `singer_sdk.http.streams.rest` moved from `singer_sdk.streams.rest`\n    \n  - `singer_sdk.http.streams.graphql` moved from `singer_sdk.streams.grapql`\n    \n  - `singer_sdk.http.authenticators` moved from `singer_sdk.authenticators`\n    \n  - `singer_sdk.http.paginators` new module if https://gitlab.com/meltano/sdk/-/issues/318+ is implemented.\n    \n\n## Best reasons not to build\n\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nThis would not add any new features for existing taps and only counts as addressing maintainability and extensibility (encourage contributions).",
      "state": "closed",
      "created_at": "2022-01-29T01:38:55.099Z",
      "updated_at": "2022-05-30T00:07:12.353Z",
      "closed_at": "2022-05-30T00:07:12.332Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Tech Debt",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/319",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/319",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/319/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/319/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#319",
        "relative": "#319",
        "full": "meltano/sdk#319"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 1085370,
      "relative_position": -10773
    }
  ]
}
