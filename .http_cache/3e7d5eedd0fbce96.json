{
  "cookies": {
    "_cfuvid": "JQVdMSsGmvRpIUackVBvix60DKABN5xicpcpk3Db0sU-1747940818746-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:06:58.654861+00:00",
  "elapsed": 0.755205,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e98014d85a09f-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:06:58 GMT",
    "ETag": "W/\"9fec5b1850d64177459c8c16365859a8\"",
    "Link": "<https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=1&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"prev\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=3&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"next\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=1&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"first\", <https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?id=meltano%2Fsdk&order_by=updated_at&page=10&per_page=20&scope=all&sort=asc&state=all&updated_after=2022-01-01T00%3A00%3A00%2B00%3A00&with_labels_details=false>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=JQVdMSsGmvRpIUackVBvix60DKABN5xicpcpk3Db0sU-1747940818746-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-07-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-b",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"f6f6dc46c1f38bdaff124342f768c4ca\",\"version\":\"1\"}",
    "x-next-page": "3",
    "x-page": "2",
    "x-per-page": "20",
    "x-prev-page": "1",
    "x-request-id": "f6f6dc46c1f38bdaff124342f768c4ca",
    "x-runtime": "0.544492",
    "x-total": "200",
    "x-total-pages": "10"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&page=2&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/projects/meltano%2Fsdk/issues?order_by=updated_at&page=2&scope=all&sort=asc&updated_after=2022-01-01T00%3A00%3A00Z",
  "_decoded_content": [
    {
      "id": 103849546,
      "iid": 337,
      "project_id": 22672923,
      "title": "Update CODEOWNERS to align with new MR review process",
      "description": "Per https://gitlab.com/meltano/meta/-/issues/212 , @edgarrmondragon will join @aaronsteers as one of the two primary reviewer/approvers. Since the primary owner can't approve their own work, they'll use the secondary owner as default reviewers for their own MRs. @edgarrmondragon will require approval from @aaronsteers and vice-versa.",
      "state": "closed",
      "created_at": "2022-02-28T18:20:56.837Z",
      "updated_at": "2022-03-01T16:00:34.813Z",
      "closed_at": "2022-03-01T16:00:34.286Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "kind::Non-Product",
        "valuestream::Business Operation"
      ],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/337",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/337",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/337/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/337/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#337",
        "relative": "#337",
        "full": "meltano/sdk#337"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 103010323,
      "iid": 336,
      "project_id": 22672923,
      "title": "Support additional string formats in typing helper classes",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nSupport [additional string formats built into the JSON Schema spec](https://json-schema.org/understanding-json-schema/reference/string.html#built-in-formats).\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nA more comprehensive library of reusable typing classes for schemas.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\nThe SDK currently only lists `date` and `date-time` strings formats, but there's a handful of other formats that would be useful like `email`, `ipv4`, `uri`, etc.\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nThere aren't any real downsides to adding these :slight_smile:",
      "state": "closed",
      "created_at": "2022-02-24T18:14:20.044Z",
      "updated_at": "2022-03-02T16:51:54.308Z",
      "closed_at": "2022-03-02T16:50:26.935Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 5,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/336",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/336",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/336/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/336/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#336",
        "relative": "#336",
        "full": "meltano/sdk#336"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 102693710,
      "iid": 331,
      "project_id": 22672923,
      "title": "Release v0.4.4",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [x] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [ ] Post-release announcement steps:\n    1. [x] Post announcement to Meltano slack: `#announcements`\n    2. [x] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [x] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [x] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-02-18T15:13:53.798Z",
      "updated_at": "2022-03-04T01:31:35.008Z",
      "closed_at": "2022-03-04T01:31:34.984Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [],
      "milestone": {
        "id": 2286179,
        "iid": 205,
        "group_id": 2524164,
        "title": "March 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:51.307Z",
        "updated_at": "2022-04-01T16:51:00.402Z",
        "due_date": "2022-03-31",
        "start_date": "2022-03-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/205"
      },
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/331",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 21
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/331",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/331/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/331/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#331",
        "relative": "#331",
        "full": "meltano/sdk#331"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 101480605,
      "iid": 316,
      "project_id": 22672923,
      "title": "Deprecate Python 3.6",
      "description": "## Summary\n[//]: # (Concisely summarize the feature you are proposing.)\n\nPython 3.6 [has reached end of life](https://devguide.python.org/devcycle/#end-of-life-branches) last year on December 23rd, 2021.\n\n\n## Proposed benefits\n[//]: # (Concisely summarize the benefits this feature would bring to yourself and other users.)\n\nPython 3.6 compatibility can be removed throughout the codebase.\n\n## Proposal details\n[//]: # (In as much detail as you are able, describe the feature you'd like to build or would like to see built.)\n\n- Remove 3.6 from CI matrix\n- Remove dependency constraints for Python 3.6\n- Remove any compatibility hacks for 3.6 (e.g. those in `singer_sdk/helpers/_compat.py`)\n- Update any \"old\" Python syntax to >= 3.7 (via `pyupgrade`)\n\n## Best reasons not to build\n[//]: # (Will this negatively affect any existing functionality? Do you anticipate any breaking changes versus what may already be working today? Make the counter-argument to your proposal here.)\n\nIt's really not that bad to continue supporting it for a while.",
      "state": "closed",
      "created_at": "2022-01-28T16:53:10.568Z",
      "updated_at": "2022-03-08T20:14:33.476Z",
      "closed_at": "2022-02-17T19:30:47.280Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Deps",
        "kind::Tech Debt",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2252673,
        "iid": 193,
        "group_id": 2524164,
        "title": "Internal WIP",
        "description": "",
        "state": "active",
        "created_at": "2021-09-27T19:02:31.281Z",
        "updated_at": "2021-09-28T18:29:26.781Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/193"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/316",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/316",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/316/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/316/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#316",
        "relative": "#316",
        "full": "meltano/sdk#316"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 102871797,
      "iid": 333,
      "project_id": 22672923,
      "title": "website link in tutorial gives 404",
      "description": "<!---\nPlease read this!\n\nBefore opening a new issue, make sure to search for keywords in the issues\nfiltered by the \"regression\" or \"bug\" label and verify the issue you're about to submit isn't a duplicate.\n\nIf you are submitting an issue with a tap, please include:\n\n- account details\n- target details\n- entities selected  with meltano select (if you have selected any entities), as the bug may be related to a specific entity\n- the full elt command you are running\n- full output of the meltano elt command. Logs can get pretty long, so you can add the full log as a snippet in the Meltano project and add a link in the issue.\n--->\n\n### What is the current *bug* behavior?\n\nhttps://sdk.meltano.com/en/latest/dev_guide.html#building-a-new-tap has a paragraph with a link to further instructions.. but when you follow this link you're greeted with a 404\n\n```\nOnce you\u2019ve answered the cookiecutter prompts, follow the instructions in the generated README.md file to complete your new tap or target. You can also reference the Meltano Tutorial for a more detailed guide.\n```\n\nit is in this paragraph where it links to https://meltano.com/tutorials/create-a-custom-extractor.html , but this gives a 404 currently\n\n### What is the expected *correct* behavior?\n\nIt should redirect to the correct content\n\n\n### Steps to reproduce\n\nGoto https://sdk.meltano.com/en/latest/dev_guide.html#building-a-new-tap \n\ngoto section called \"Building a New Tap or Target\" after the cookiecutter instructions",
      "state": "closed",
      "created_at": "2022-02-19T11:07:37.223Z",
      "updated_at": "2022-03-29T10:43:16.139Z",
      "closed_at": "2022-03-29T10:43:16.102Z",
      "closed_by": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "labels": [
        "flow::Review",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2286179,
        "iid": 205,
        "group_id": 2524164,
        "title": "March 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:21:51.307Z",
        "updated_at": "2022-04-01T16:51:00.402Z",
        "due_date": "2022-03-31",
        "start_date": "2022-03-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/205"
      },
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 2680954,
        "username": "EMCP",
        "public_email": "",
        "name": "EMCP333",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/2680954/avatar.png",
        "web_url": "https://gitlab.com/EMCP"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 2,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/333",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 1,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/333",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/333/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/333/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#333",
        "relative": "#333",
        "full": "meltano/sdk#333"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 105928487,
      "iid": 357,
      "project_id": 22672923,
      "title": "Config defaults do not appear to be applied",
      "description": "While working on `tap-gitlab`, I found cases where it does not appear that config defaults are being applied.",
      "state": "closed",
      "created_at": "2022-04-02T06:56:59.711Z",
      "updated_at": "2022-04-03T17:47:25.815Z",
      "closed_at": "2022-04-03T17:47:25.803Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "kind::Bug"
      ],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/357",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/357",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/357/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/357/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#357",
        "relative": "#357",
        "full": "meltano/sdk#357"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 103974115,
      "iid": 341,
      "project_id": 22672923,
      "title": "Fix SQLAlchemy warning",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\n\nA warning is being raised by SQLAlchemy because we're using a deprecated method.\n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n\nRun core tests and notice the warnings being raised.\n\n```shell\npoetry run pytest tests/core/test_sqlite.py\n```\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\n\n9 Warnings are raised.\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n\nNo warnings should be raised.\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\nCI logs: https://gitlab.com/ReubenFrankel/sdk/-/jobs/2151755969#L202\n\n```console\n$ poetry run pytest tests/core/test_sqlite.py \n=================================================== test session starts ====================================================\nplatform darwin -- Python 3.9.9, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\nrootdir: /Users/edgarramirez/Code/sdk\nplugins: requests-mock-1.9.3\ncollected 9 items\n\ntests/core/test_sqlite.py .........                                                                                   [100%]\n\n===================================================== warnings summary =====================================================\ntests/core/test_sqlite.py::test_sync_sqlite_to_sqlite\ntests/core/test_sqlite.py::test_sync_sqlite_to_sqlite\ntests/core/test_sqlite.py::test_sync_sqlite_to_sqlite\ntests/core/test_sqlite.py::test_sqlite_column_addition\ntests/core/test_sqlite.py::test_sqlite_column_addition\ntests/core/test_sqlite.py::test_sqlite_column_morph\ntests/core/test_sqlite.py::test_sqlite_column_morph\ntests/core/test_sqlite.py::test_sqlite_column_no_morph\ntests/core/test_sqlite.py::test_sqlite_column_no_morph\n  /Users/edgarramirez/Code/sdk/singer_sdk/streams/sql.py:430: SADeprecationWarning: The Engine.has_table() method is\n  deprecated and will be removed in a future release.  Please refer to Inspector.has_table(). (deprecated since: 1.4)\n    return self._engine.has_table(full_table_name)\n\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\n============================================== 9 passed, 9 warnings in 2.69s ===============================================\n```\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\n\nReplace `self._engine.has_table(full_table_name)` with `sqlalchemy.inspect(self._engine).has_table(full_table_name)`.",
      "state": "closed",
      "created_at": "2022-03-02T15:58:15.160Z",
      "updated_at": "2022-04-03T20:09:20.267Z",
      "closed_at": "2022-04-03T20:09:20.222Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/341",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/341",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/341/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/341/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#341",
        "relative": "#341",
        "full": "meltano/sdk#341"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 97432401,
      "iid": 270,
      "project_id": 22672923,
      "title": "[Community-Contributed]: Add an Authenticator to handle Proxy OAuth token endpoints that expect specific request headers/body",
      "description": "## Summary\n\nI recently made a change to an SDK tap to allow us to use our Proxy OAuth server to refresh user\u2019s Google OAuth credentials, and this required specific headers and body to make the request.\n\nI'm not sure if this is just a Proxy OAuth use case, but token end points requiring specific (different to the general api requests) headers and bodies would be able to utilize this new authenticator.\n\n\n## Proposed benefits\n\nChances are anyone who uses Proxy OAuth will run into the issues of the Proxy endpoint requiring different than normal headers and body to make the request.\n\n\n\n\n## Proposal details\n\nAdd an Authenticator that handles auth_token_headers and auth_token_body, alongside the usual auth_headers and auth_bodies.\n\n\n## Best reasons not to build\n\nMore authenticator choices could cause confusion about which you should use when. (More or less solved by adding docs/examples I think?)\n\n---\n\nWould be great to hear if anyone else has run into something like this, or other ways to go about solving it?\n\nLike I mentioned, I\u2019m not sure if Proxy OAuth Authenticator is the correct name, or if there is something more general for other use cases as well?",
      "state": "closed",
      "created_at": "2021-11-16T15:47:24.343Z",
      "updated_at": "2022-04-04T20:55:57.304Z",
      "closed_at": "2022-04-04T20:55:57.243Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "Accepting Merge Requests",
        "Awaiting Action::Author",
        "Community-Contributed MR",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 8411379,
        "username": "DanielPDWalker",
        "public_email": "",
        "name": "Daniel Walker",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/c232815480c791c4f0718a1dc3eda341ddfbea94a010f83a013042b82da7f186?s=80&d=identicon",
        "web_url": "https://gitlab.com/DanielPDWalker"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 3,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/270",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/270",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/270/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/270/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#270",
        "relative": "#270",
        "full": "meltano/sdk#270"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 104049281,
      "iid": 343,
      "project_id": 22672923,
      "title": "Release v0.4.5",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [x] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [x] Post-release announcement steps:\n    1. [x] Post announcement to Meltano slack: `#announcements`\n    2. [x] Cross-post (share) to `#singer-tap-development`\n    3. Copy-paste to:\n       - [x] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [x] `dbt` slack: `#tools-meltano`\n    4. [x] ~~Blog post~~\n    5. [x] ~~Tweet the blog post~~\n\n----------------",
      "state": "closed",
      "created_at": "2022-03-03T16:25:07.747Z",
      "updated_at": "2022-04-08T17:58:46.000Z",
      "closed_at": "2022-04-08T17:58:45.993Z",
      "closed_by": {
        "id": 10324033,
        "username": "alex1126",
        "public_email": "",
        "name": "Alex Marple",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/94805cd4424fc8f74008c0a1b1f61a18da4a41ab04ae95064f7a28fa8dedc858?s=80&d=identicon",
        "web_url": "https://gitlab.com/alex1126"
      },
      "labels": [],
      "milestone": null,
      "assignees": [],
      "author": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/343",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 24
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/343",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/343/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/343/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#343",
        "relative": "#343",
        "full": "meltano/sdk#343"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 81443480,
      "iid": 55,
      "project_id": 22672923,
      "title": "Error: `TypeError: can't pickle property objects`",
      "description": "This error occurs when a jsonschema is constructed using helper classes, and an `ObjectType` class is not instantiated with it's subproperties.\n\n```\nTypeError: can't pickle property objects\n```\n\nExample which triggers this:\n\n```\n    schema = PropertiesList(\n        Property(\"active\", BooleanType),\n        Property(\"annotation_hotkeys\", ObjectType), # << This one needs to be instantiated\n        Property(\"annotators_can_create_tags\", BooleanType),\n        Property(\"annotators_can_instantiate_workflows\", BooleanType),\n    ).to_dict()\n```\n\nFrom slack: https://meltano.slack.com/archives/C01PKLU5D1R/p1616340560020700",
      "state": "closed",
      "created_at": "2021-03-22T18:03:38.925Z",
      "updated_at": "2022-04-18T14:58:35.096Z",
      "closed_at": "2022-04-18T14:58:35.045Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "flow::Triage",
        "kind::Bug"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/55",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/55",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/55/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/55/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#55",
        "relative": "#55",
        "full": "meltano/sdk#55"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 105783833,
      "iid": 356,
      "project_id": 22672923,
      "title": "SDK docs builds are failing",
      "description": "The error we're seeing:\n\n```\nTraceback (most recent call last):\n  File \"/home/docs/.pyenv/versions/3.8.6/lib/python3.8/runpy.py\", line 194, in _run_module_as_main\n    return _run_code(code, main_globals, None,\n  File \"/home/docs/.pyenv/versions/3.8.6/lib/python3.8/runpy.py\", line 87, in _run_code\n    exec(code, run_globals)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/meltano-sdk/envs/latest/lib/python3.8/site-packages/sphinx/__main__.py\", line 13, in <module>\n    from sphinx.cmd.build import main\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/meltano-sdk/envs/latest/lib/python3.8/site-packages/sphinx/cmd/build.py\", line 25, in <module>\n    from sphinx.application import Sphinx\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/meltano-sdk/envs/latest/lib/python3.8/site-packages/sphinx/application.py\", line 43, in <module>\n    from sphinx.registry import SphinxComponentRegistry\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/meltano-sdk/envs/latest/lib/python3.8/site-packages/sphinx/registry.py\", line 24, in <module>\n    from sphinx.builders import Builder\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/meltano-sdk/envs/latest/lib/python3.8/site-packages/sphinx/builders/__init__.py\", line 26, in <module>\n    from sphinx.util import import_object, logging, progress_message, rst, status_iterator\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/meltano-sdk/envs/latest/lib/python3.8/site-packages/sphinx/util/rst.py\", line 21, in <module>\n    from jinja2 import Environment, environmentfilter\nImportError: cannot import name 'environmentfilter' from 'jinja2' (/home/docs/checkouts/readthedocs.org/user_builds/meltano-sdk/envs/latest/lib/python3.8/site-packages/jinja2/__init__.py)\n```\n\nIssued in the Sphinx repo: https://github.com/sphinx-doc/sphinx/issues/10291\n\n/cc @aaronsteers",
      "state": "closed",
      "created_at": "2022-03-30T20:49:58.948Z",
      "updated_at": "2022-04-19T22:14:42.489Z",
      "closed_at": "2022-04-19T22:14:42.444Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Documentation",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351598,
        "iid": 208,
        "group_id": 2524164,
        "title": "April 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-11-29T21:38:06.797Z",
        "updated_at": "2022-05-02T14:53:27.097Z",
        "due_date": "2022-04-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/208"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/356",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/356",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/356/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/356/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#356",
        "relative": "#356",
        "full": "meltano/sdk#356"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 105702514,
      "iid": 353,
      "project_id": 22672923,
      "title": "Cookiecutter tap.py template not assigning SQLTap as parent class for the tap when initializing a SQL stream type project",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\nWhen you initialize a tap with a stream type of SQL using the Meltano SDK v0.4.4 the new tap class in the tap.py file does no have the parent as class of SQLTap it has the parent class of Tap instead.  I believe this happens because the tap.py template in keying off cookiecutter.source_name instead of the cookiecutter.stream_type \n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n```\ncookiecutter https://gitlab.com/meltano/sdk --directory=\"cookiecutter/tap-template\"\n\nsource_name [MySourceName]: test\nadmin_name [FirstName LastName]: Dan Norman\ntap_id [tap-test]:\nlibrary_name [tap_test]:\nSelect stream_type:\n1 - REST\n2 - GraphQL\n3 - SQL\n4 - Other\nChoose from 1, 2, 3, 4 [1]: 3\nSelect auth_method:\n1 - API Key\n2 - Bearer Token\n3 - Basic Auth\n4 - OAuth2\n5 - JWT\n6 - Custom or N/A\nChoose from 1, 2, 3, 4, 5, 6 [1]: 3\nSelect include_cicd_sample_template:\n1 - GitHub\n2 - None (Skip)\nChoose from 1, 2 [1]:\n```\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\nIn the tap.py file for the tap example above the class looks like this after initialization:\n\n`class Taptest(Tap):`\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\nI would expect to see the tap class to look like this:\n\n`class Taptest(SQLTap):`\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\nsdk/cookiecutter/tap-template/{{cookiecutter.tap_id}}/{{cookiecutter.library_name}}/tap.py\n\nline 31:\n\n`class Tap{{ cookiecutter.source_name }}({{ 'SQL' if cookiecutter.source_name == 'SQL' else '' }}Tap):`\n\nPropose changing line 31 to:\n\n`class Tap{{ cookiecutter.source_name }}({{ 'SQL' if cookiecutter.stream_type == 'SQL' else '' }}Tap):`",
      "state": "closed",
      "created_at": "2022-03-29T17:27:18.953Z",
      "updated_at": "2022-04-22T19:20:25.808Z",
      "closed_at": "2022-04-22T15:58:49.464Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 11232982,
        "username": "BuzzCutNorman",
        "public_email": "",
        "name": "Dan Norman",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/d0643a73d2d930c7ffa73eac21c983e4cbe0139b151b85906c9c3beed15f0905?s=80&d=identicon",
        "web_url": "https://gitlab.com/BuzzCutNorman"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/353",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/353",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/353/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/353/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#353",
        "relative": "#353",
        "full": "meltano/sdk#353"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 106355427,
      "iid": 359,
      "project_id": 22672923,
      "title": "Release v0.4.6",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [x] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [ ] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [ ] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [x] Post-release announcement steps:\n    1. [x] Post announcement to Meltano slack: `#announcements`\n    2. [x] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [x] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [x] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-04-08T17:30:37.811Z",
      "updated_at": "2022-04-25T15:05:02.110Z",
      "closed_at": "2022-04-25T15:05:02.093Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [],
      "milestone": null,
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 10324033,
        "username": "alex1126",
        "public_email": "",
        "name": "Alex Marple",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/94805cd4424fc8f74008c0a1b1f61a18da4a41ab04ae95064f7a28fa8dedc858?s=80&d=identicon",
        "web_url": "https://gitlab.com/alex1126"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 0,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/359",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 20
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/359",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/359/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/359/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#359",
        "relative": "#359",
        "full": "meltano/sdk#359"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 105705986,
      "iid": 354,
      "project_id": 22672923,
      "title": "Client.py for a tap of stream type SQL being overwritten during project initialization",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\nWhen you initialize a SQL project with Meltano SDK 0.4.4 the client.py file's contents does not match up with that of the template designated for it.  Thanks to ptd's troubleshoot this issue and let me know in slack that the file is being overwritten because the evolution for another client.py file is also true so it overwrites the correct client.py file. \n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n```\ncookiecutter https://gitlab.com/meltano/sdk --directory=\"cookiecutter/tap-template\"\n\nsource_name [MySourceName]: test\nadmin_name [FirstName LastName]: Dan Norman\ntap_id [tap-test]:\nlibrary_name [tap_test]:\nSelect stream_type:\n1 - REST\n2 - GraphQL\n3 - SQL\n4 - Other\nChoose from 1, 2, 3, 4 [1]: 3\nSelect auth_method:\n1 - API Key\n2 - Bearer Token\n3 - Basic Auth\n4 - OAuth2\n5 - JWT\n6 - Custom or N/A\nChoose from 1, 2, 3, 4, 5, 6 [1]: 3\nSelect include_cicd_sample_template:\n1 - GitHub\n2 - None (Skip)\nChoose from 1, 2 [1]:\n```\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\nWhen you run cookiecutter with the tap-template the clinet.py file's contents does not match the contents of the template on gitlab.  The file actually matches the client.py file designated for streams types that are not REST or GraphQL\n\n`{%if cookiecutter.stream_type not in ('REST', 'GraphQL')%}client.py{%endif%}`\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\nThe client.py file's contents should match up with the client.py designated for SQL stream type\n\n`{%if 'SQL' == cookiecutter.stream_type %}client.py{%endif%}`\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n```\nDEBUG cookiecutter.utils: Making sure path exists: /home/dannorman/development/tap-test/tap_test/tests\nDEBUG cookiecutter.utils: Created directory at: /home/dannorman/development/tap-test/tap_test/tests\nDEBUG cookiecutter.generate: Processing file {{cookiecutter.library_name}}/{%if 'SQL' == cookiecutter.stream_type %}client.py{%endif%}\nDEBUG cookiecutter.generate: Created file at /home/dannorman/development/tap-test/tap_test/client.py\nDEBUG cookiecutter.generate: Check {{cookiecutter.library_name}}/{%if 'SQL' == cookiecutter.stream_type %}client.py{%endif%} to see if it's a binary\nDEBUG cookiecutter.generate: Writing contents to file /home/dannorman/development/tap-test/tap_test/client.py\nDEBUG cookiecutter.generate: Processing file {{cookiecutter.library_name}}/{%if cookiecutter.auth_method in ('OAuth2', 'JWT')%}auth.py{%endif%}\nDEBUG cookiecutter.generate: The resulting file name is empty: /home/dannorman/development/tap-test/tap_test/\nDEBUG cookiecutter.generate: Processing file {{cookiecutter.library_name}}/{%if 'SQL' != cookiecutter.stream_type %}streams.py{%endif%}\nDEBUG cookiecutter.generate: The resulting file name is empty: /home/dannorman/development/tap-test/tap_test/\nDEBUG cookiecutter.generate: Processing file {{cookiecutter.library_name}}/{%if cookiecutter.stream_type not in ('REST', 'GraphQL')%}client.py{%endif%}\nDEBUG cookiecutter.generate: Created file at /home/dannorman/development/tap-test/tap_test/client.py\nDEBUG cookiecutter.generate: Check {{cookiecutter.library_name}}/{%if cookiecutter.stream_type not in ('REST', 'GraphQL')%}client.py{%endif%} to see if it's a binary\nDEBUG cookiecutter.generate: Writing contents to file /home/dannorman/development/tap-test/tap_test/client.py\n```\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\nI would propose changing the client.py evaluation for not in REST or GraphQL from:\n\n`{%if cookiecutter.stream_type not in ('REST', 'GraphQL')%}client.py{%endif%}`\n\nto the following:\n\n `{%if 'Other' == cookiecutter.stream_type %}client.py{%endif%}`\n\nMy reasoning is that there are 4 streams types REST, GraphQL, SQL, and Other.  REST, GraphQL and SQL all have designated client.py files which leaves only a stream type of Other without a designated client.py file.",
      "state": "closed",
      "created_at": "2022-03-29T18:54:20.624Z",
      "updated_at": "2022-04-26T02:48:36.059Z",
      "closed_at": "2022-04-26T02:48:36.005Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 11232982,
        "username": "BuzzCutNorman",
        "public_email": "",
        "name": "Dan Norman",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/d0643a73d2d930c7ffa73eac21c983e4cbe0139b151b85906c9c3beed15f0905?s=80&d=identicon",
        "web_url": "https://gitlab.com/BuzzCutNorman"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/354",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/354",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/354/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/354/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#354",
        "relative": "#354",
        "full": "meltano/sdk#354"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 96,
      "epic": {
        "id": 240357,
        "iid": 96,
        "title": "SDK Development (Parent Epic)",
        "url": "/groups/meltano/-/epics/96",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 103860297,
      "iid": 338,
      "project_id": 22672923,
      "title": "Use a stable poetry-core in cookiecutter templates and recommend it in the docs",
      "description": "- [ ] Update our cookiecutters' `pyproject.toml` to use the earliest stable version of the PEP 517 build system with  PEP 660 support (`poetry-core>=1.0.8`).\n\n- [ ] Update [this section of the docs](https://sdk.meltano.com/en/latest/python_tips.html?highlight=editable#if-you-already-know-about-virtual-environments) to clarify that editable installations are supported\n\n  > The biggest change is that -e (\u201ceditable mode\u201d) doesn\u2019t work how it used to with pip. Instead, just use the shell-script approach from the cookiecutter template. This script automatically changes into the poetry directory and executes the needed poetry run commands from that folder. (There\u2019s a stackoverflow link in the shell script with more context.)\n\nThis should close the loop on the work we started with #238+",
      "state": "closed",
      "created_at": "2022-02-28T23:43:55.870Z",
      "updated_at": "2022-04-27T23:46:18.286Z",
      "closed_at": "2022-04-04T10:20:48.607Z",
      "closed_by": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "labels": [
        "Accepting Merge Requests",
        "flow::Review",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": null,
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/338",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": 1,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/338",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/338/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/338/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#338",
        "relative": "#338",
        "full": "meltano/sdk#338"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 95442336,
      "iid": 238,
      "project_id": 22672923,
      "title": "Use and recommend new pip and poetry versions with support for editable installs",
      "description": "During development, Meltano plugin's `pip_url` lets users pass arguments for an editable installation (`-e path/to/package`). This is useful for iterating on the tap/target while testing with Meltano.\n\nAt the moment, plugins built with the SDK have to [hack their way around to accomplish the same thing](https://gitlab.com/meltano/sdk/-/blob/main/cookiecutter/tap-template/%7B%7Bcookiecutter.tap_id%7D%7D/%7B%7Bcookiecutter.tap_id%7D%7D.sh) because pip was not able to install packages that use `pyproject.toml` instead of `setup.py`.\n\nHowever, recently released [`pip` 21.3](https://pip.pypa.io/en/stable/news/#v21-3) has support for [PEP 660](https://www.python.org/dev/peps/pep-0660/). The only blocker is that the [PEP 517](https://www.python.org/dev/peps/pep-0517/) build backend needs to implement the `build_editable` hook.\n\nThe `poetry-core` build backend is PEP 517 compliant and has recently pushed the hook to `master` (see PR: https://github.com/python-poetry/poetry-core/pull/182). Once this feature is released and indirectly included in the main `poetry` package, we'll be able to guide users into upgrading their `pip` and `poetry` version so they can install their SDK-based plugins in editable mode without hacks.\n\ncc @aaronsteers",
      "state": "closed",
      "created_at": "2021-10-14T16:43:36.572Z",
      "updated_at": "2022-04-27T23:46:24.453Z",
      "closed_at": "2022-01-11T21:57:27.713Z",
      "closed_by": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "labels": [
        "flow::Blocked",
        "kind::Feature",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2363643,
        "iid": 214,
        "group_id": 2524164,
        "title": "Fri: Jan 14, 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-12-06T17:18:52.814Z",
        "updated_at": "2022-01-18T19:55:11.957Z",
        "due_date": "2022-01-14",
        "start_date": "2022-01-08",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/214"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 10,
      "merge_requests_count": 1,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/238",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/238",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/238/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/238/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#238",
        "relative": "#238",
        "full": "meltano/sdk#238"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 121,
      "epic": {
        "id": 337714,
        "iid": 121,
        "title": "Planning for our \"1.0\" SDK release (version 1.0)",
        "url": "/groups/meltano/-/epics/121",
        "group_id": 2524164,
        "human_readable_end_date": "Jun 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null
    },
    {
      "id": 107042212,
      "iid": 366,
      "project_id": 22672923,
      "title": "If Parent Stream added automatically Schema is empty",
      "description": "Not sure which version of the SDK started this, but the last released SDK version on pypi I just hit this while doing some testing. (We need to add some tests for this one, as it's a nasty regression I think?)\n\n1. Setup meltano.yml to select only a child stream (that has a parent stream)\n2. You'll notice the schema is ```  {\"type\": \"SCHEMA\", \"stream\": \"team\", \"schema\": {\"properties\": {}, \"type\": \"object\"}, \"key_properties\": [\"id\"]}     ``` for the parent stream. In this example I chose a child stream of `team.*` from `tap-clickup`\n\nHope this is enough to get a repro",
      "state": "closed",
      "created_at": "2022-04-22T16:49:26.750Z",
      "updated_at": "2022-04-28T21:01:25.731Z",
      "closed_at": "2022-04-28T21:01:25.677Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351599,
        "iid": 209,
        "group_id": 2524164,
        "title": "May 2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:38:23.665Z",
        "updated_at": "2021-11-29T21:38:23.665Z",
        "due_date": "2022-05-31",
        "start_date": "2022-05-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/209"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 4,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/366",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 2,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/366",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/366/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/366/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#366",
        "relative": "#366",
        "full": "meltano/sdk#366"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 106990009,
      "iid": 365,
      "project_id": 22672923,
      "title": "Release v0.4.7",
      "description": "[//]: # (NOTE: This Release template is for Admin-Use only. If you've reached this template in error, please select another template from the list.)\n\n## Evergreen Releases - Prep Steps:\n\nAn `Evergreen` release process means we are _always_ releasing. We open a new release ticket as soon as we've completed the prior release. (It's therefore the final step in this checklist.)\n\n## \"Evergreen Prep\" Checklist\n\n- [x] Open this Issue\n- [ ] Indicate the version to be released here in the issue's title `Release vX.Y.Z`\n    - If the release number changes (from minor to major or patch, for instance), update the version here and in the issue description.\n\n### Readiness Checklist:\n\n`Engineering` team, to get ready for the upcoming release:\n\n1. [x] Ensure any [already-merged commits](https://gitlab.com/meltano/sdk/-/commits/main) since the last release have [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) entries (excepting non-user-impacting commits, such as docs fixes).\n2. [x] Create a comment in the `#engineering-team` slack channel with pending-but-not-merged MRs, potentially shipping. (Aka, the \"burndown\" list.)\n    - Otherwise a comment that all known merge candidates are already merged.\n3. [x] Create or link to a summary of MRs merged and/or expected in the `#marketing` Slack channel, with an `@channel` mention.\n\n### Release Checklist\n\nRotating `assignee`, on the morning of the release:\n\n1. [x] Changelog updates and version bump:\n    1. [x] Create a new branch named `release/vX.Y.Z` and a corresponding MR with the `Release` MR template.\n    2. An automated pipeline (linked to the branch prefix `release/v*`) will\n    immediately and automatically bump the version and flush the changelog.\n        - [x] Check this box to confirm the automated changelog flush and version bump are correct.\n        - You _do not_ need to wait for the CI pipeline. (An identical CI pipeline is already included in the below.)\nfrom `main` branch.\n2. [x] [Cut a release tag](https://gitlab.com/meltano/sdk/-/tags/new) from your `release/vX.Y.Z` branch named `vX.Y.Z` with Message=`Release vX.Y.Z`\n    1. In response to new tag creation, these steps are performed automatically in Gitlab pipelines:\n        1. Abort if tag `vX.Y.Z` does not match output from `poetry version --short`\n        2. Test _everything_.\n        3. Publish to PyPi <!-- Meltano-only: and Docker -->.\n    2. Validate publish once the pipeline finishes. (While the process is running, you can continue with next steps, such as changelog grooming.)\n        1. [x] Check this box when the tag's [pipeline](https://gitlab.com/meltano/sdk/-/pipelines) has completed (eta 40-60 minutes).\n        2. [x] Check this box when [PyPi publish](https://pypi.org/project/singer-sdk/#history) is confirmed.\n        <!-- Meltano-only: 5. [ ] Check this box when [Docker publish]() is confirmed. -->\n3. Groom the changelog:\n    1. [x] Compare the [Changelog](https://gitlab.com/meltano/sdk/-/blob/main/CHANGELOG.md) against the `main` branch [commit history](https://gitlab.com/meltano/sdk/-/commits/main) and add any significant user-impacting updates (excluding docs and website updates, for instance).\n    2. [x] Review the Changelog for readability and typoes, committing fixes or updates if needed.\n    3. [x] Final changelog review:\n        - Open the Changelog in preview mode, mouse over each link and ensure tooltip descriptions match the resolved issue.\n        - Check contributor profile links to make sure they are correct.\n    4. [x] Merge the resulting MR to `main` with the merge commit message `Release vX.Y.Z`\n    5. [x] Check the [pending MRs](https://gitlab.com/meltano/sdk/-/merge_requests?sort=updated_desc) to make sure nothing is missing\n    6. [x] [Open the next `Release` issue](https://gitlab.com/meltano/sdk/-/issues/new?issue) using the `Release` template.\n\n### Announcements, Marketing, and Promotion\n\n`Marketing` or `Product` team:\n\n1. [ ] Post-release announcement steps:\n    1. [ ] Post announcement to Meltano slack: `#announcements`\n    2. [ ] Cross-post (share) to `#sdk`\n    3. Copy-paste to:\n       - [ ] `Singer` slack: `#meltano`, `#singer-sdk`\n       - [ ] `dbt` slack: `#tools-meltano`\n    4. [ ] Blog post\n    5. [ ] Tweet the blog post\n\n----------------",
      "state": "closed",
      "created_at": "2022-04-21T18:52:27.831Z",
      "updated_at": "2022-04-28T21:50:06.592Z",
      "closed_at": "2022-04-28T21:50:06.573Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [],
      "milestone": {
        "id": 2351598,
        "iid": 208,
        "group_id": 2524164,
        "title": "April 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-11-29T21:38:06.797Z",
        "updated_at": "2022-05-02T14:53:27.097Z",
        "due_date": "2022-04-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/208"
      },
      "assignees": [],
      "author": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/365",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 24,
        "completed_count": 16
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/365",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/365/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/365/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#365",
        "relative": "#365",
        "full": "meltano/sdk#365"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 105636359,
      "iid": 352,
      "project_id": 22672923,
      "title": "Setting property to `null` in stream map config fails to remove it",
      "description": "Really not a big deal for me, but I was messing around with Mappers trying to learn some things and the example https://sdk.meltano.com/en/latest/stream_maps.html?highlight=transform#:~:text=stream%20called%20%27customers%27-,%22email%22%3A%20null%2C,-//%20drop%20the%20PII \n\nDoesn't work for me (the field still exists in my record). I debated on putting this in the https://github.com/MeltanoLabs/meltano-map-transform  repo, but I'm pretty sure this is an SDK issue as other mappings work correctly like `.upper()`, and `.lower()`)\n\nReplication steps\n1. Clone https://github.com/MeltanoLabs/meltano-map-transform \n2. `poetry install`\n3. Create a file to test with I called mine out (see below)\n4. Create config.json (see example below)\n5. `cat out | poetry run meltano-map-transform --config config.json > out_mapped`\n6. I'd expect name to be null (or not exist) instead see out_mapped below\n\n\nFiles to create\n\n`out`\n```json\n{\"type\": \"SCHEMA\", \"stream\": \"space\", \"schema\": {\"properties\": {\"id\": {\"type\": [\"string\"]}, \"name\": {\"type\": [\"null\", \"string\"]}, \"private\": {\"type\": [\"null\", \"boolean\"]}, \"avatar\": {\"type\": [\"null\", \"string\"]}, \"statuses\": {\"items\": {\"properties\": {\"id\": {\"type\": [\"null\", \"string\"]}, \"status\": {\"type\": [\"null\", \"string\"]}, \"orderindex\": {\"type\": [\"null\", \"integer\", \"string\"]}, \"color\": {\"type\": [\"null\", \"string\"]}}, \"type\": [\"object\", \"null\"]}, \"type\": [\"array\", \"null\"]}, \"members\": {\"items\": {\"properties\": {\"user\": {\"properties\": {\"id\": {\"type\": [\"null\", \"integer\"]}, \"username\": {\"type\": [\"null\", \"string\"]}, \"email\": {\"type\": [\"null\", \"string\"]}, \"color\": {\"type\": [\"null\", \"string\"]}, \"profilePicture\": {\"type\": [\"null\", \"string\"]}, \"initials\": {\"type\": [\"null\", \"string\"]}, \"role\": {\"type\": [\"null\", \"integer\"]}, \"custom_role\": {\"type\": [\"null\", \"integer\"]}, \"last_active\": {\"type\": [\"null\", \"string\"]}, \"date_joined\": {\"type\": [\"null\", \"string\"]}, \"date_invited\": {\"type\": [\"null\", \"string\"]}}, \"type\": \"object\"}, \"invited_by\": {\"properties\": {\"id\": {\"type\": [\"null\", \"integer\"]}, \"username\": {\"type\": [\"null\", \"string\"]}, \"email\": {\"type\": [\"null\", \"string\"]}, \"color\": {\"type\": [\"null\", \"string\"]}, \"profilePicture\": {\"type\": [\"null\", \"string\"]}, \"initials\": {\"type\": [\"null\", \"string\"]}, \"role\": {\"type\": [\"null\", \"integer\"]}, \"custom_role\": {\"type\": [\"null\", \"integer\"]}, \"last_active\": {\"type\": [\"null\", \"string\"]}, \"date_joined\": {\"type\": [\"null\", \"string\"]}, \"date_invited\": {\"type\": [\"null\", \"string\"]}}, \"type\": [\"object\", \"null\"]}}, \"type\": [\"null\", \"object\"]}, \"type\": \"array\"}, \"multiple_assignees\": {\"type\": [\"null\", \"boolean\"]}, \"features\": {\"properties\": {\"due_dates\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"sprints\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"time_tracking\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"points\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"custom_items\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"time_estimates\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"check_unresolved\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"zoom\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"milestones\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"remap_dependencies\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"dependency_warning\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"multiple_assignees\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"emails\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}}, \"type\": \"object\"}, \"archived\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": \"object\"}, \"key_properties\": [\"id\"]}\n{\"type\": \"RECORD\", \"stream\": \"space\", \"record\": {\"id\": \"54078699\", \"name\": \"Archive me\", \"private\": false, \"statuses\": [{\"id\": \"p54078699_NRY41cPD\", \"status\": \"to do\", \"type\": \"open\", \"orderindex\": 0, \"color\": \"#d3d3d3\"}, {\"id\": \"p54078699_o8oSalOi\", \"status\": \"complete\", \"type\": \"closed\", \"orderindex\": 1, \"color\": \"#6bc950\"}], \"multiple_assignees\": true, \"features\": {\"due_dates\": {\"enabled\": true, \"start_date\": true, \"remap_due_dates\": true, \"remap_closed_due_date\": false}, \"sprints\": {\"enabled\": true}, \"time_tracking\": {\"enabled\": true, \"harvest\": false, \"rollup\": true}, \"points\": {\"enabled\": true}, \"custom_items\": {\"enabled\": false}, \"priorities\": {\"enabled\": true, \"priorities\": [{\"id\": \"1\", \"priority\": \"urgent\", \"color\": \"#f50000\", \"orderindex\": \"1\"}, {\"id\": \"2\", \"priority\": \"high\", \"color\": \"#ffcc00\", \"orderindex\": \"2\"}, {\"id\": \"3\", \"priority\": \"normal\", \"color\": \"#6fddff\", \"orderindex\": \"3\"}, {\"id\": \"4\", \"priority\": \"low\", \"color\": \"#d8d8d8\", \"orderindex\": \"4\"}]}, \"tags\": {\"enabled\": true}, \"time_estimates\": {\"enabled\": true, \"rollup\": true, \"per_assignee\": false}, \"check_unresolved\": {\"enabled\": true, \"subtasks\": null, \"checklists\": null, \"comments\": null}, \"zoom\": {\"enabled\": true}, \"milestones\": {\"enabled\": true}, \"custom_fields\": {\"enabled\": true}, \"remap_dependencies\": {\"enabled\": true}, \"dependency_warning\": {\"enabled\": true}, \"multiple_assignees\": {\"enabled\": true}, \"emails\": {\"enabled\": true}}, \"archived\": true}, \"time_extracted\": \"2022-03-28T17:45:19.467386Z\"}\n```\n\n`config.json`\n```json\n{\n    \"stream_maps\":  {\n        \"space\": {\n            \"name\": null\n        }\n    }\n}\n```\n\n\n`out_mapped`\n```json\n{\"type\": \"SCHEMA\", \"stream\": \"space\", \"schema\": {\"properties\": {\"id\": {\"type\": [\"string\"]}, \"name\": {\"type\": [\"null\", \"string\"]}, \"private\": {\"type\": [\"null\", \"boolean\"]}, \"avatar\": {\"type\": [\"null\", \"string\"]}, \"statuses\": {\"items\": {\"properties\": {\"id\": {\"type\": [\"null\", \"string\"]}, \"status\": {\"type\": [\"null\", \"string\"]}, \"orderindex\": {\"type\": [\"null\", \"integer\", \"string\"]}, \"color\": {\"type\": [\"null\", \"string\"]}}, \"type\": [\"object\", \"null\"]}, \"type\": [\"array\", \"null\"]}, \"members\": {\"items\": {\"properties\": {\"user\": {\"properties\": {\"id\": {\"type\": [\"null\", \"integer\"]}, \"username\": {\"type\": [\"null\", \"string\"]}, \"email\": {\"type\": [\"null\", \"string\"]}, \"color\": {\"type\": [\"null\", \"string\"]}, \"profilePicture\": {\"type\": [\"null\", \"string\"]}, \"initials\": {\"type\": [\"null\", \"string\"]}, \"role\": {\"type\": [\"null\", \"integer\"]}, \"custom_role\": {\"type\": [\"null\", \"integer\"]}, \"last_active\": {\"type\": [\"null\", \"string\"]}, \"date_joined\": {\"type\": [\"null\", \"string\"]}, \"date_invited\": {\"type\": [\"null\", \"string\"]}}, \"type\": \"object\"}, \"invited_by\": {\"properties\": {\"id\": {\"type\": [\"null\", \"integer\"]}, \"username\": {\"type\": [\"null\", \"string\"]}, \"email\": {\"type\": [\"null\", \"string\"]}, \"color\": {\"type\": [\"null\", \"string\"]}, \"profilePicture\": {\"type\": [\"null\", \"string\"]}, \"initials\": {\"type\": [\"null\", \"string\"]}, \"role\": {\"type\": [\"null\", \"integer\"]}, \"custom_role\": {\"type\": [\"null\", \"integer\"]}, \"last_active\": {\"type\": [\"null\", \"string\"]}, \"date_joined\": {\"type\": [\"null\", \"string\"]}, \"date_invited\": {\"type\": [\"null\", \"string\"]}}, \"type\": [\"object\", \"null\"]}}, \"type\": [\"null\", \"object\"]}, \"type\": \"array\"}, \"multiple_assignees\": {\"type\": [\"null\", \"boolean\"]}, \"features\": {\"properties\": {\"due_dates\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"sprints\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"time_tracking\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"points\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"custom_items\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"time_estimates\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"check_unresolved\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"zoom\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"milestones\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"remap_dependencies\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"dependency_warning\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"multiple_assignees\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}, \"emails\": {\"properties\": {\"enabled\": {\"type\": [\"boolean\", \"null\"]}, \"start_date\": {\"type\": [\"null\", \"boolean\"]}, \"remap_due_dates\": {\"type\": [\"null\", \"boolean\"]}, \"remap_closed_due_date\": {\"type\": [\"null\", \"boolean\"]}, \"harvest\": {\"type\": [\"null\", \"boolean\"]}, \"rollup\": {\"type\": [\"null\", \"boolean\"]}, \"per_assignee\": {\"type\": [\"null\", \"boolean\"]}, \"subtasks\": {\"type\": [\"null\", \"boolean\"]}, \"checklists\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": [\"object\", \"null\"]}}, \"type\": \"object\"}, \"archived\": {\"type\": [\"null\", \"boolean\"]}}, \"type\": \"object\"}, \"key_properties\": [\"id\"]}\n{\"type\": \"RECORD\", \"stream\": \"space\", \"record\": {\"id\": \"54078699\", \"name\": \"Archive me\", \"private\": false, \"statuses\": [{\"id\": \"p54078699_NRY41cPD\", \"status\": \"to do\", \"type\": \"open\", \"orderindex\": 0, \"color\": \"#d3d3d3\"}, {\"id\": \"p54078699_o8oSalOi\", \"status\": \"complete\", \"type\": \"closed\", \"orderindex\": 1, \"color\": \"#6bc950\"}], \"multiple_assignees\": true, \"features\": {\"due_dates\": {\"enabled\": true, \"start_date\": true, \"remap_due_dates\": true, \"remap_closed_due_date\": false}, \"sprints\": {\"enabled\": true}, \"time_tracking\": {\"enabled\": true, \"harvest\": false, \"rollup\": true}, \"points\": {\"enabled\": true}, \"custom_items\": {\"enabled\": false}, \"priorities\": {\"enabled\": true, \"priorities\": [{\"id\": \"1\", \"priority\": \"urgent\", \"color\": \"#f50000\", \"orderindex\": \"1\"}, {\"id\": \"2\", \"priority\": \"high\", \"color\": \"#ffcc00\", \"orderindex\": \"2\"}, {\"id\": \"3\", \"priority\": \"normal\", \"color\": \"#6fddff\", \"orderindex\": \"3\"}, {\"id\": \"4\", \"priority\": \"low\", \"color\": \"#d8d8d8\", \"orderindex\": \"4\"}]}, \"tags\": {\"enabled\": true}, \"time_estimates\": {\"enabled\": true, \"rollup\": true, \"per_assignee\": false}, \"check_unresolved\": {\"enabled\": true, \"subtasks\": null, \"checklists\": null, \"comments\": null}, \"zoom\": {\"enabled\": true}, \"milestones\": {\"enabled\": true}, \"custom_fields\": {\"enabled\": true}, \"remap_dependencies\": {\"enabled\": true}, \"dependency_warning\": {\"enabled\": true}, \"multiple_assignees\": {\"enabled\": true}, \"emails\": {\"enabled\": true}}, \"archived\": true}, \"time_extracted\": \"2022-03-28T18:15:07.229094Z\"}\n```",
      "state": "closed",
      "created_at": "2022-03-28T18:16:27.796Z",
      "updated_at": "2022-05-03T21:26:07.313Z",
      "closed_at": "2022-04-04T17:24:37.236Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "User Support",
        "flow::Review",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2351598,
        "iid": 208,
        "group_id": 2524164,
        "title": "April 2022",
        "description": "",
        "state": "closed",
        "created_at": "2021-11-29T21:38:06.797Z",
        "updated_at": "2022-05-02T14:53:27.097Z",
        "due_date": "2022-04-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/208"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 5562019,
        "username": "vischous",
        "public_email": "",
        "name": "Derek Visch",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/5562019/avatar.png",
        "web_url": "https://gitlab.com/vischous"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 8,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/352",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/352",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/352/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/352/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#352",
        "relative": "#352",
        "full": "meltano/sdk#352"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    },
    {
      "id": 107960476,
      "iid": 370,
      "project_id": 22672923,
      "title": "Setting stream map property to `null` does not remove it from SCHEMA message",
      "description": "## Summary\n[//]: # (Summarize the bug encountered concisely)\nThere was a partial fix for https://gitlab.com/meltano/sdk/-/issues/352 which removed the null property from RECORD messages, but we are still seeing the property show up in SCHEMA messages which can break downstream in the target. It's expected that the schema also gets transformed. \n\n## Steps to reproduce\n[//]: # (How one can reproduce the issue - this is very important)\n```\n\"stream_maps\": {\n  \"bounces\": {\n    \"INSERTTS\": null\n  }\n}\n```\n\n## What is the current bug behavior?\n[//]: # (What actually happens)\nResulting schema message: \n```\n{\"type\":\"SCHEMA\",\"stream\":\"bounces\",\"schema\":{\"properties\":{\"ACCTCODE\":{\"type\":[\"number\",\"null\"]},\"OYBACCTCODE\":{\"type\":[\"number\",\"null\"]},\"JOBCODE\":{\"type\":[\"number\",\"null\"]},\"BATCHCODE\":{\"type\":[\"number\",\"null\"]},\"SUBSCRIBERCODE\":{\"type\":[\"string\",\"null\"]},\"SUBSCRIBERKEY\":{\"type\":[\"string\",\"null\"]},\"EVENTDATE\":{\"type\":[\"string\",\"null\"]},\"BOUNCECATCODE\":{\"type\":[\"number\",\"null\"]},\"BOUNCECAT\":{\"type\":[\"string\",\"null\"]},\"BOUNCESUBCATCODE\":{\"type\":[\"number\",\"null\"]},\"BOUNCESUBCAT\":{\"type\":[\"string\",\"null\"]},\"BOUNCETYPECODE\":{\"type\":[\"number\",\"null\"]},\"BOUNCETYPE\":{\"type\":[\"string\",\"null\"]},\"SMTPMSG\":{\"type\":[\"string\",\"null\"]},\"SMTPCODE\":{\"type\":[\"number\",\"null\"]},\"SMTPBOUNCEREASON\":{\"type\":[\"string\",\"null\"]},\"SENT_UUID\":{\"type\":[\"string\",\"null\"]},\"APPLICATIONID\":{\"type\":[\"string\",\"null\"]},\"ACCOUNTNUMBER\":{\"type\":[\"string\",\"null\"]},\"LEADID\":{\"type\":[\"string\",\"null\"]},\"INSERTTS\":{\"format\":\"date-time\",\"type\":[\"string\",\"null\"]}},\"type\":\"object\"},\"key_properties\":[]}\n```\n\n## What is the expected correct behavior?\n[//]: # (What you should see instead)\n```\n{\"type\":\"SCHEMA\",\"stream\":\"bounces\",\"schema\":{\"properties\":{\"ACCTCODE\":{\"type\":[\"number\",\"null\"]},\"OYBACCTCODE\":{\"type\":[\"number\",\"null\"]},\"JOBCODE\":{\"type\":[\"number\",\"null\"]},\"BATCHCODE\":{\"type\":[\"number\",\"null\"]},\"SUBSCRIBERCODE\":{\"type\":[\"string\",\"null\"]},\"SUBSCRIBERKEY\":{\"type\":[\"string\",\"null\"]},\"EVENTDATE\":{\"type\":[\"string\",\"null\"]},\"BOUNCECATCODE\":{\"type\":[\"number\",\"null\"]},\"BOUNCECAT\":{\"type\":[\"string\",\"null\"]},\"BOUNCESUBCATCODE\":{\"type\":[\"number\",\"null\"]},\"BOUNCESUBCAT\":{\"type\":[\"string\",\"null\"]},\"BOUNCETYPECODE\":{\"type\":[\"number\",\"null\"]},\"BOUNCETYPE\":{\"type\":[\"string\",\"null\"]},\"SMTPMSG\":{\"type\":[\"string\",\"null\"]},\"SMTPCODE\":{\"type\":[\"number\",\"null\"]},\"SMTPBOUNCEREASON\":{\"type\":[\"string\",\"null\"]},\"SENT_UUID\":{\"type\":[\"string\",\"null\"]},\"APPLICATIONID\":{\"type\":[\"string\",\"null\"]},\"ACCOUNTNUMBER\":{\"type\":[\"string\",\"null\"]},\"LEADID\":{\"type\":[\"string\",\"null\"]}},\"type\":\"object\"},\"key_properties\":[]}\n```\n\n## Relevant logs and/or screenshots\n\n[//]: # (Paste any relevant logs.)\n[//]: # (Please use code blocks ``` to format console output, logs, and code, as it's very hard to read otherwise.)\n\n\n## Possible fixes\n[//]: # (If you can, link to the line of code that might be responsible for the problem)\nI was able to fix locally by changing this line that was previously removed: https://gitlab.com/meltano/sdk/-/commit/55b87d41867cf0e6a33ceb999f19d7450c25e53e\n\nThe property does need to stay in `stream_map` but must be removed from `transformed_schema` with `transformed_schema[\"properties\"].pop(prop_key, None)`\n\nI will try to open a MR in the next few days with this fix!",
      "state": "closed",
      "created_at": "2022-05-03T21:19:53.802Z",
      "updated_at": "2022-05-05T21:37:15.133Z",
      "closed_at": "2022-05-05T21:37:15.106Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Accepting Merge Requests",
        "kind::Bug",
        "valuestream::SDK"
      ],
      "milestone": {
        "id": 2136620,
        "iid": 176,
        "group_id": 2524164,
        "title": "Staging",
        "description": "",
        "state": "active",
        "created_at": "2021-07-07T19:00:49.676Z",
        "updated_at": "2021-07-07T19:00:49.676Z",
        "due_date": null,
        "start_date": null,
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/176"
      },
      "assignees": [],
      "author": {
        "id": 10548282,
        "username": "rwhitten577",
        "public_email": null,
        "name": "Ryan Whitten",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/f5c322dbb5a95ae58a716f5d9a01ea0da15eb17337906c74770675667212d0f5?s=80&d=identicon",
        "web_url": "https://gitlab.com/rwhitten577"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 3,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/sdk/-/issues/370",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/22672923/issues/370",
        "notes": "https://gitlab.com/api/v4/projects/22672923/issues/370/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/22672923/issues/370/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/22672923",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#370",
        "relative": "#370",
        "full": "meltano/sdk#370"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": null,
      "epic": null,
      "iteration": null,
      "health_status": null
    }
  ]
}
