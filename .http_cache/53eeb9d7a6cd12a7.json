{
  "cookies": {
    "_cfuvid": "9rfUoaKuP6afY4X9OYcESneVdArqeDP3Z3AsQTwBMcU-1747940863226-0.0.1.1-604800000"
  },
  "created_at": "2025-05-22T19:07:43.136690+00:00",
  "elapsed": 3.288474,
  "encoding": "utf-8",
  "headers": {
    "CF-Cache-Status": "MISS",
    "CF-Ray": "943e99077a28cdac-QRO",
    "Cache-Control": "max-age=0, private, must-revalidate",
    "Connection": "keep-alive",
    "Content-Encoding": "gzip",
    "Content-Type": "application/json",
    "Date": "Thu, 22 May 2025 19:07:43 GMT",
    "ETag": "W/\"9b0ef4753433dba0efe27126ac430aed\"",
    "Link": "<https://gitlab.com/api/v4/groups/2524164/epics/79/issues?epic_iid=79&id=2524164&page=2&per_page=20>; rel=\"next\", <https://gitlab.com/api/v4/groups/2524164/epics/79/issues?epic_iid=79&id=2524164&page=1&per_page=20>; rel=\"first\", <https://gitlab.com/api/v4/groups/2524164/epics/79/issues?epic_iid=79&id=2524164&page=2&per_page=20>; rel=\"last\"",
    "Server": "cloudflare",
    "Set-Cookie": "_cfuvid=9rfUoaKuP6afY4X9OYcESneVdArqeDP3Z3AsQTwBMcU-1747940863226-0.0.1.1-604800000; path=/; domain=.gitlab.com; HttpOnly; Secure; SameSite=None",
    "Strict-Transport-Security": "max-age=31536000",
    "Transfer-Encoding": "chunked",
    "Vary": "Origin, Accept-Encoding",
    "content-security-policy": "default-src 'none'",
    "gitlab-lb": "haproxy-main-19-lb-gprd",
    "gitlab-sv": "api-gke-us-east1-b",
    "nel": "{\"max_age\": 0}",
    "referrer-policy": "strict-origin-when-cross-origin",
    "x-content-type-options": "nosniff",
    "x-frame-options": "SAMEORIGIN",
    "x-gitlab-meta": "{\"correlation_id\":\"c01987ac7d73894b3f2a04eff5bc8827\",\"version\":\"1\"}",
    "x-next-page": "2",
    "x-page": "1",
    "x-per-page": "20",
    "x-prev-page": "",
    "x-request-id": "c01987ac7d73894b3f2a04eff5bc8827",
    "x-runtime": "2.603205",
    "x-total": "32",
    "x-total-pages": "2"
  },
  "reason": "OK",
  "request": {
    "body": "",
    "headers": {
      "Accept": "*/*",
      "Accept-Encoding": "gzip, deflate",
      "Connection": "keep-alive",
      "Private-Token": "REDACTED",
      "User-Agent": "sample-tap-gitlab/[could not be detected]"
    },
    "method": "GET",
    "url": "https://gitlab.com/api/v4/groups/2524164/epics/79/issues"
  },
  "status_code": 200,
  "url": "https://gitlab.com/api/v4/groups/2524164/epics/79/issues",
  "_decoded_content": [
    {
      "id": 96945003,
      "iid": 3048,
      "project_id": 7603319,
      "title": "Secrets Backend - Multi Tenant Support",
      "description": "### Problem to solve\n\nThis is based on a comment from https://gitlab.com/meltano/meltano/-/issues/2918#note_726141457.\n\nAs we start to think about supporting [secrets backends](https://gitlab.com/meltano/meltano/-/issues/2918) we should implement it in a way that makes the multi tenant deployment use case easier too. Its common for users to ask how they should implement a multi tenant application that uses meltano as the backend where they need to have multiple credentials and settings per plugin (i.e. client 1 tap-postgres, client 2 tap-postgres,...). We usually recommend injecting environment variables to a single generic plugin config vs appending a new inherited plugin config to the meltano.yml. That approach leaves it up to the app developer to manage credentials and settings. \n\n### Target audience\n\nUsers with multi tenant deployments.\n\n### Further details\n\n### Proposal\n\nIf we build the secrets backend with properly namespaced keys then we could start recommending that app developer run meltano CLI commands to store and retrieve environment variables. Something like (idk the ordering so this is just for illustration):\n\n`meltano --environment=prod config <plugin> set --secret <key> <value> <optional_job_id>`\n\nIn AWS Parameter store this could become a key like: \n\n`/meltano/prod/<plugin>/key>/<optional_job_id> = <value>`\n\n`/meltano/prod/tap-postgres/password/job_123 = admin_password_123`\n\nMy comment for retrieving them at runtime from here https://gitlab.com/meltano/meltano/-/issues/2918#note_726141457:\n\n> If the job_id isnt specified in an elt execution or theres no job_id specific secret then it just defaults to the generic `plugin_name`. Or we could use some inheritance there, take all generic secrets but job specific keys override generic.\n\n\n### What does success look like, and how can we measure that?\n\nThis would allow multi tenant users to not have to build a custom config/settings manager and not have to retrieve and inject the environment variables before execution.\n\nSuccess would be if multi tenant app developers decided to migrate from their custom config managers to meltano managed.\n\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references",
      "state": "closed",
      "created_at": "2021-11-08T14:54:51.276Z",
      "updated_at": "2022-05-30T09:53:37.937Z",
      "closed_at": "2022-05-30T09:53:37.915Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 8668050,
        "username": "pnadolny13",
        "public_email": "",
        "name": "Pat Nadolny",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/8668050/avatar.png",
        "web_url": "https://gitlab.com/pnadolny13"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3048",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3048",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3048/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3048/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3048",
        "relative": "#3048",
        "full": "meltano/meltano#3048"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 928612,
      "relative_position": 1073720037
    },
    {
      "id": 96111328,
      "iid": 3021,
      "project_id": 7603319,
      "title": "Add CLI support for environments",
      "description": "In !2355 we did not add support for managing environments with the command line. We should have them! Based on discussion in https://gitlab.com/meltano/meltano/-/merge_requests/2383#note_713553913\n\nAt a minimum:\n\n<details><summary>Old version</summary>\n\n* `meltano add <environment>`\n* `meltano remove <environment>`\n* `meltano config <environment> (list/set/unset/reset)`\n</details>\n\n```console\n$ meltano environment --help\nUsage: meltano environment [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --database-uri TEXT  System database URI\n  --help               Show this message and exit.\n\nCommands:\n  add    Add a new environment\n  list   Enumerate available environments\n  remove Remove an environment definition\n```",
      "state": "closed",
      "created_at": "2021-10-25T20:32:35.418Z",
      "updated_at": "2021-11-16T23:39:06.166Z",
      "closed_at": "2021-11-16T23:39:06.126Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Office Hours::Up Next",
        "flow::Doing",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286168,
        "iid": 196,
        "group_id": 2524164,
        "title": "Fri: Nov 19, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:19:00.146Z",
        "updated_at": "2021-11-29T16:16:54.736Z",
        "due_date": "2021-11-19",
        "start_date": "2021-11-13",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/196"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 2,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/3021",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/3021",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/3021/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/3021/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3021",
        "relative": "#3021",
        "full": "meltano/meltano#3021"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 901985,
      "relative_position": 1073720550
    },
    {
      "id": 93616199,
      "iid": 2934,
      "project_id": 7603319,
      "title": "Make Docker images available in AWS public ECR gallery",
      "description": "Using Docker has become pretty annoying if you use a code pipeline. You invariably will get \"toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading:\".\n\nSince we build stuff with Meltano, we get this quite a bit. Is it possible for Meltano to upload their images to the AWS ECR public registry please as well? See here: https://gallery.ecr.aws/",
      "state": "closed",
      "created_at": "2021-09-14T07:23:10.606Z",
      "updated_at": "2022-05-30T09:39:38.679Z",
      "closed_at": "2022-05-30T09:39:38.644Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 9725362,
        "username": "bdeboer",
        "public_email": "",
        "name": "Berend de Boer",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/9725362/avatar.png",
        "web_url": "https://gitlab.com/bdeboer"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2934",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 4,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2934",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2934/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2934/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2934",
        "relative": "#2934",
        "full": "meltano/meltano#2934"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 825433,
      "relative_position": 1073723628
    },
    {
      "id": 93275380,
      "iid": 2923,
      "project_id": 7603319,
      "title": "Meltano could provide simple cloud deployment options",
      "description": "### Problem to solve\n\nSome users are already reporting that they just schedule meltano run's via vanilla cronjobs, and while we have work underway to help folks do a full-blown deployment we don't have anything in between \"roll your own\" and \"deploy this k8s stack\". There should be an option to allow folks to deploy a scheduled meltano task with their cloud provider of choice, without us having to deploy an entire GKE/EKS cluster for them. All they need is:\n\n1. A means to allow them to schedule a task at a specified interval/schedule\n2. A short lived (~15m) compute resource that can be used to execute the task\n3. Somewhere to persist state (CloudSQL/RDS ?)\n\n\n### Target audience\nUsers that are just getting started OR don't have the desire/staffing to manage a full-blown deployment, and that have pipelines or tasks that can be completed relatively quick (<15m).\n\n\n### Further details\n\nMost providers have a concept of a short-lived compute resource ([GCP CloudRun](https://cloud.google.com/run/), AWS Fargate, [DO App Platform)](https://www.digitalocean.com/products/app-platform/) - typically a container that gets invoked to serve an API request or the like. They also have schedulers ([GCP Cloud Scheduler](https://cloud.google.com/scheduler)) or support time-based invocations directly (ala [Fargate](https://aws.amazon.com/about-aws/whats-new/2018/08/aws-fargate-now-supports-time-and-event-based-task-scheduling/)). \n\n- This would be great for shorter-lived one-off tasks or in deployment scenarios where a full Airflow + k8s setup isn't desired. \n- Making use of on-demand resources like Cloud Run/Scheduler also makes this very cost-effective, a consultancy may deploy these jobs backed by a more robust spot instance, but hobbyists could probably leverage free-tier components (a micro db instance would probably be their biggest cost). \n\n\n### Proposal\n\nWe could provide a thin wrapper to allow secure/authenticated invocation and execution of meltano pipelines via API (or an event-based trigger, but API-based might be easier and generic enough to work across more providers?), that would allow us to run task's using services likes GCP Cloud Run. \n\nThe missing piece then is a scheduler plugin that supports things like the GCP Cloud Scheduler or DO App Platforms scheduler and interacts with them directly via their API's. Creative use of service provider projects, schedule naming, and tagging (where supported by the provider) could let us create/delete/list task's on the fly without having to track/persist them. User's may inadvertently alter schedules outside of meltano, so I think we'll always want to reconcile with what the API's from the providers say is *actually* currently scheduled. \n\n### What does success look like, and how can we measure that?\n\nEventually, it would be great if users can run a command to have a meltano task runner automagically deployed to a service like GCP Cloud Run, and then use `meltano schedule` to manage scheduled tasks using a service like GCP Cloud Schedules.\n\nAs a first step/MVP we could just provide the API service wrapper and some good documentation and guides on how to manually set this up. The steps to do this manually aren't super involved, and the barrier to entry to do them hopefully is still low enough that even end users new to this should be able to deploy in this manner.\n\n### Regression test\n(Ensure the feature doesn't cause any regressions)\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n\n_Please note that this was taken from GitLab, to be changed accordingly_",
      "state": "closed",
      "created_at": "2021-09-07T16:18:49.605Z",
      "updated_at": "2022-05-30T09:38:14.247Z",
      "closed_at": "2022-05-30T09:38:14.225Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 3,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2923",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2923",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2923/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2923/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2923",
        "relative": "#2923",
        "full": "meltano/meltano#2923"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 825712,
      "relative_position": 1073723115
    },
    {
      "id": 93083491,
      "iid": 2919,
      "project_id": 7603319,
      "title": "Make the official Docker image multi-arch",
      "description": "### Problem to solve\n\nHave the official Meltano image support multiple architectures.\n\n### Target audience\n\nUsers interested in running the Docker image on different architectures, like ARM.\n\n### Further details\n\n> Docker images can support multiple architectures, which means that a single image may contain variants for different architectures, and sometimes for different operating systems, such as Windows.\n>\n> When running an image with multi-architecture support, `docker` automatically selects the image variant that matches your OS and architecture.\n>\n> Most of the Docker Official Images on Docker Hub provide a [variety of architectures](https://github.com/docker-library/official-images#architectures-other-than-amd64). For example, the `busybox` image supports `amd64`, `arm32v5`, `arm32v6`, `arm32v7`, `arm64v8`, `i386`, `ppc64le`, and `s390x`. When running this image on an `x86_64` / `amd64` machine, the `x86_64` variant is pulled and run.\n\n### Proposal\n\nChange our CI to leverage multi-arch build using `docker builx ...` experimental features.\n\n### What does success look like, and how can we measure that?\n\nMeltano images on DockerHub contain variants for architectures we would want to support and the right variant is pulled for the user's host arch.\n\n### Regression test\n\n- [ ] Write adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team\n\n### Links / references\n\n- Buildx docs: https://docs.docker.com/buildx/working-with-buildx/#build-multi-platform-images\n- Official guide for Docker Desktop: https://docs.docker.com/desktop/multi-arch/\n- Example GitLab CI workflow: https://github.com/oofnikj/nuttssh/blob/multiarch/.gitlab-ci.yml",
      "state": "closed",
      "created_at": "2021-09-03T14:44:05.517Z",
      "updated_at": "2022-05-30T09:37:44.401Z",
      "closed_at": "2022-05-30T09:37:44.383Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Docker",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2919",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2919",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2919/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2919/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2919",
        "relative": "#2919",
        "full": "meltano/meltano#2919"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805751,
      "relative_position": 1073725680
    },
    {
      "id": 93063385,
      "iid": 2918,
      "project_id": 7603319,
      "title": "Support Secrets Backends Natively",
      "description": "### Problem to solve\nMeltano should support multiple secrets backends so that secret config values can be managed in the same way that general config is.\n\nMeltano provides a convenient, centralised configuration management and injection layer for managing all the tools in the data science workflow. However this doesn't currently include secret config values such as passwords, tokens and keys. This sensitive data must currently be handled by the user outside of meltano, with secrets being injected at runtime using environment variables. This is both an inconvenience for regular users and a barrier to entry for people new to meltano.\n\n\n### Target audience\nAnyone deploying meltano in a production environment.\n\n\n### Proposal\nSomething like:\n\n```\n# Configure secret values just as you configure normal values\nmeltano config <plugin> set --secret <key> <value>\n```\n\nImplementation thoughts:\n\n- The secrets backend should be pluggable, to support all the different places secrets can be stored today (AWS Parameter Store, Hashicorp Vault, [git-crypt](https://github.com/AGWA/git-crypt) etc.).\n- Meltano should supply a default secrets backend, with either file-based encryption (git-crypt) or its database (with password hashing, ala Airflow).\n\n\n### What does success look like, and how can we measure that?\nUsers can manage _all_ config through meltano. Security best practices are built-in rather than left as an exercise to the user.",
      "state": "closed",
      "created_at": "2021-09-03T09:33:09.355Z",
      "updated_at": "2022-05-30T09:37:37.142Z",
      "closed_at": "2022-05-30T09:37:37.103Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Needs Refinement",
        "Needs Research Spike",
        "Roadmap",
        "Security",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 9,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2918",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2918",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2918/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2918/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2918",
        "relative": "#2918",
        "full": "meltano/meltano#2918"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 805752,
      "relative_position": 1073725167
    },
    {
      "id": 92846507,
      "iid": 2908,
      "project_id": 7603319,
      "title": "Support Deployment Plugins",
      "description": "For Meltano to truly be a 'one-stop-shop' for your data platform, it needs to be able to deploy the individual tools and services that make up that platform. To achieve this Meltano should support deployment plugins, being existing tools for deploying and managing running infrastructure (such as Helm, Terraform, Ansible, Salt, Cloudformation). For those just getting started, Meltano should aim to provide opinionated base config for common scenarios (e.g. containers on Kubernetes), and for power users of these deployment tools the config and internals should still be accessible and easily customisable via existing Meltano config routes.\n\nAs a rough guide, the CLI could look something like:\n\n```bash\n# First a user would add a deployment. This would install all the necessary tooling to actually deploy to this platform during `meltano install`. Meltano will use all of the context of installed plugins, orchestrators and config to create appropriate deployment artefacts.\nmeltano add deployment --platform kubernetes --environment prod\n\n# Users can optionally configure their deployment\nmeltano config deployment --environment prod set namespace \"team-data\"\n\n# Finally a new deployment can be executed \ud83d\ude80\nmeltano deploy --environment prod\n\n# Individual tools can also be invoked and used directly\nmeltano invoke helm list --all-namespaces --all\n```",
      "state": "closed",
      "created_at": "2021-08-31T08:07:24.001Z",
      "updated_at": "2022-05-30T09:36:23.199Z",
      "closed_at": "2022-05-30T09:36:23.178Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Discussion",
        "Needs Refinement",
        "Office Hours::To Discuss",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2351602,
        "iid": 211,
        "group_id": 2524164,
        "title": "Q3-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-11-29T21:39:41.523Z",
        "updated_at": "2021-11-29T21:39:41.523Z",
        "due_date": "2022-09-30",
        "start_date": "2022-07-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/211"
      },
      "assignees": [],
      "author": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2908",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 40,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2908",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2908/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2908/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2908",
        "relative": "#2908",
        "full": "meltano/meltano#2908"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 797197,
      "relative_position": 1073727219
    },
    {
      "id": 90776313,
      "iid": 2869,
      "project_id": 7603319,
      "title": "Introduce top-level \"Environments\" within `meltano.yml` config",
      "description": "## Background\n\nAs Meltano becomes the end-to-end tool for more parts of dataops pipelines, there's a need to create a top-level construct and understanding of the project's SQL data repository (Snowflake, Spark, Athena, etc.) and that repository's corresponding \"environments\" such as \"prod\", \"beta\", \"cicd\", and \"dev\". Some of these environments may be dynamically keyed and fully \"disposable\", such as \"cicd-<build_num>\", and \"dev-<person_id>\".\n\n## Today's Solutions\n\nToday there are two or three places where a user needs to specify their data platform information - for instance \"target-snowflake\" config, \"dbt profiles\", and the analyze config, and possibly a \"reverse-etl\" connector such as \"tap-snowflake\". There's not yet a meltano-native construct for reusing this config.\n\n## Proposed Solution\n\n### Environment config as a top-level construct\n\nWe propose adding a top-level `environments:` config element. This could be a combination of \"smart\" and \"passthrough\" settings, where \"smart\" settings are known and expected by meltano, and \"passthrough\" settings are anything that the target (or dbt profile) may require.\n\n### Environment Inheritance\n\nTo ease onboarding to support DRY principals - we should allow environments to inherit from each other. For instance, prod may be identical to dev except in the credentials and db name. Server name, and other connection-level parameters may be identical between these environments and we should allow the config to be reused - in the same way that the `inherits-from` construct supports this for plugins today.\n\n### Strawman Sample\n\nThis is only intended for conversation - the exact spec will evolve based on input:\n\n`meltano.yml`:\n\n```yaml\nproject_id: ...\nplugins: ...\nschedules: ...\nplugins:\n  extractors:\n  # this section unchanged - extractors referenced by name below in `sources`\n  - name: tap-github\n    namespace: tap_github\n    executable: tap-github\n    capabilities:\n    - state\n    - catalog\n    - discover\n    settings:\n    - name: searches\n      kind: array\n    - name: auth_token\n      kind: password\n    - name: start_date\n      value: '2010-01-01T00:00:00Z'\n  # ...\n\nenvironments:\n\n- name: prod\n  job_id_prefix: prod_             # will be appended with ${TAP_NAMESPACE} to make default job IDs\n\n  # The `destination` is the singular landing location (\"target\") for this environment\n  # Other environments inherit this destination and can customize either with `vars` or by overriding completely\n  default_loader: target-snowflake\n\n  enable_transforms: true  # or false if the target does not support transforms (e.g. target-jsonl or target-s3-csv)\n\n  # Here we list all the sources that `prod` should contain\n  # These reference names declared under `plugins->extractors`\n  # Other environments may inherit this list or override it\n  default_extractors:\n  - tap-github\n  - tap-zendesk\n  - tap-slack\n  - tap-github\n\n  config:\n    plugins:\n      loaders:\n      - name: target-snowflake\n        config:\n          db_name: \"${DB_NAME}\"                # References an environment-scoped env var\n          load_schema: \"${TAP_NAMESPACE}_raw\"  # Dynamic from the name of the currently-executing tap\n          account: \"${SNOWFLAKE_ACCOUNT}\"\n          user: \"${SNOWFLAKE_USER}\"\n          role: prod_loader_role\n          # ...\n\n  env:\n    # Env vars can be declared here when multiple plugins need to reference the same values\n    DB_NAME: \"Waffleshop_DB\"\n    SNOWFLAKE_ACCOUNT: waffleshop.snowflakecomputing.net\n    SNOWFLAKE_USER: prod_loader\n\n- name: beta\n  job_id_prefix: beta_                       # will be appended with ${TAP_NAMESPACE} to make default job IDs\n  inherits_from: prod\n\n  config:\n    plugins:\n      loaders:\n      - name: target-snowflake\n        config:\n          role: beta_loader_role\n\n  env:\n    DB_NAME: \"Waffleshop_Beta\"\n    SNOWFLAKE_USER: beta_loader\n\n# The following environments are \"disposable\", meaning they are intentionally keyed for temporarily use\n\n- name: user_dev\n  job_id_prefix: dev_${USER}_                # will be appended with ${TAP_NAMESPACE} to make default job IDs\n  inherits_from: beta\n\n  config:\n    plugins:\n      loaders:\n      - name: target-snowflake\n        config:\n          role: beta_loader_role\n          load_schema: \"${USER}dev_${TAP_NAMESPACE}_raw\"        # Dynamic based on the USER environment variable\n\n  env:\n    DB_NAME: \"Development\"\n    SNOWFLAKE_USER: \"${USER}\"\n\n- name: cicd\n  job_id_prefix: cicd_b${GITHUB_BUILD_NUM}_  # will be appended with ${TAP_NAMESPACE} to make default job IDs\n  inherits_from: beta\n  sources:\n  config:\n    plugins:\n      extractors:\n      # Overrides to make CICD run faster using a subset of data\n      - name: tap-github\n        config:\n          searches:\n          - {name: \"target-athena\", query: \"target-athena+fork:only\"}\n          \n      loaders:\n      - name: target-snowflake\n        config:\n          role: cicd_loader_role\n          load_schema: \"raw_b${GITHUB_BUILD_NUM}_${TAP_NAMESPACE}\" # Dynamic based on build number from Github CI pipeline\n```\n\nIn the simplest interations, all of the environment's config would be available to invoked plugins via a name prefix such as `$MELTANO_ENV_{VAR_NAME}`, such as `$MELTANO_ENV_SNOWFLAKE_USER`, `$MELTANO_ENV_DB_NAME`. Importantly, since we expect to be toggling the environment back and forth at runtime, the generated environment variables would not have the name of the environment contained within the variable name. However, we probably could still expose the environment name itself in something like `$MELTANO_ENV_NAME`, in case a plugin has native configuration which can branch based on that name.\n\n### Possibility for native understanding of needs of different plugin types\n\nThe above is a simple \"passthrough\" approach where these keywords might not be natively understood by Meltano. However, we may choose to create subprofiles (now or in a future iteration) where meltano could send slightly different config to a transformer versus what it would send to a loader.\n\n## Best reason not to build\n\nNone I can think of. It is one level of additional config to setup, so we may want to ensure it is optional. Especially for EL-only pipelines where there are no further steps, we would not want a user to _necessarily_ need to configure an environment if they are happy with simple tap->target configuration as they perform today.",
      "state": "closed",
      "created_at": "2021-07-24T17:25:42.516Z",
      "updated_at": "2021-12-15T18:28:31.278Z",
      "closed_at": "2021-10-27T20:07:15.305Z",
      "closed_by": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "labels": [
        "Discussion",
        "Marketing::Blog Feature",
        "Office Hours::Up Next",
        "flow::Review",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2241597,
        "iid": 192,
        "group_id": 2524164,
        "title": "Fri: Oct 29, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-09-20T18:58:47.263Z",
        "updated_at": "2021-11-01T17:41:24.211Z",
        "due_date": "2021-10-29",
        "start_date": "2021-10-23",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/192"
      },
      "assignees": [
        {
          "id": 1134865,
          "username": "edgarrmondragon",
          "public_email": "edgar@meltano.com",
          "name": "Edgar R. Mondrag\u00f3n",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
          "web_url": "https://gitlab.com/edgarrmondragon"
        }
      ],
      "author": {
        "id": 4809760,
        "username": "aaronsteers",
        "public_email": "aaronsteers@gmail.com",
        "name": "AJ Steers",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/a2595480c83e2879745276d7beca618e489d7df97677ed44888fd6f0f50efb29?s=80&d=identicon",
        "web_url": "https://gitlab.com/aaronsteers"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1134865,
        "username": "edgarrmondragon",
        "public_email": "edgar@meltano.com",
        "name": "Edgar R. Mondrag\u00f3n",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1134865/avatar.png",
        "web_url": "https://gitlab.com/edgarrmondragon"
      },
      "user_notes_count": 28,
      "merge_requests_count": 1,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2869",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 12,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2869",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2869/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2869/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2869",
        "relative": "#2869",
        "full": "meltano/meltano#2869"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 725395,
      "relative_position": 1073727732
    },
    {
      "id": 87892634,
      "iid": 2772,
      "project_id": 7603319,
      "title": "Emit structured (JSON) logs",
      "description": "All of my meltano logs end up in datadog. If the logs were formatted as json, it would automatically break up each log message into its various components. This is possible to do with a custom regex as well, but not quite as convenient.",
      "state": "closed",
      "created_at": "2021-05-28T21:21:07.292Z",
      "updated_at": "2021-12-15T18:17:31.559Z",
      "closed_at": "2021-11-19T19:30:17.678Z",
      "closed_by": {
        "id": 22132,
        "username": "pandemicsyn",
        "public_email": "",
        "name": "Florian",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/4233db8f5d3b6e2b9871c627d6fdc49a3714d39122a09a8e71d08405b191b4b2?s=80&d=identicon",
        "web_url": "https://gitlab.com/pandemicsyn"
      },
      "labels": [
        "Accepting Merge Requests",
        "CLI",
        "flow::Review",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286168,
        "iid": 196,
        "group_id": 2524164,
        "title": "Fri: Nov 19, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:19:00.146Z",
        "updated_at": "2021-11-29T16:16:54.736Z",
        "due_date": "2021-11-19",
        "start_date": "2021-11-13",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/196"
      },
      "assignees": [],
      "author": {
        "id": 649593,
        "username": "deanmorin",
        "public_email": "",
        "name": "Dean Morin",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/e404fe3b1a81bdca718ac3778b07f87c95037d396df58d26bdb9dbb7cc5d3623?s=80&d=identicon",
        "web_url": "https://gitlab.com/deanmorin"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 12,
      "merge_requests_count": 1,
      "upvotes": 2,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2772",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2772",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2772/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2772/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2772",
        "relative": "#2772",
        "full": "meltano/meltano#2772"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 829356,
      "relative_position": 1073722602
    },
    {
      "id": 81423833,
      "iid": 2666,
      "project_id": 7603319,
      "title": "Explore RDBMS-free option for Meltano",
      "description": "@aaronsteers proposed this during our vision discussion. This could be an option for running Meltano w/o a backing database. This would need more validation before we took it further.",
      "state": "closed",
      "created_at": "2021-03-22T15:40:25.635Z",
      "updated_at": "2022-05-30T07:05:18.995Z",
      "closed_at": "2022-05-30T07:05:18.974Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Product Vision"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2666",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2666",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2666/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2666/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2666",
        "relative": "#2666",
        "full": "meltano/meltano#2666"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 500330,
      "relative_position": 1073730297
    },
    {
      "id": 80943145,
      "iid": 2646,
      "project_id": 7603319,
      "title": "Add new meltano config settings",
      "description": "add new `meltano config <plugin> add <key> <value>` and `meltano config <plugin> remove <key> <value>` commands for array settings like this `_select`\n\nbased on https://gitlab.com/meltano/meltano/-/issues/2638#note_528335663",
      "state": "closed",
      "created_at": "2021-03-15T15:14:37.910Z",
      "updated_at": "2022-05-30T07:02:57.891Z",
      "closed_at": "2022-05-30T07:02:57.847Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "CLI",
        "Configuration"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 1,
      "merge_requests_count": 0,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2646",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2646",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2646/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2646/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2646",
        "relative": "#2646",
        "full": "meltano/meltano#2646"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 485447,
      "relative_position": 1073730810
    },
    {
      "id": 79899419,
      "iid": 4,
      "project_id": 24722673,
      "title": "Dogfood Meltano",
      "description": "* Data Sources:\n  * Slack\n  * GitLab\n  * Twitter?\n  * Google Analytics\n  * Zendesk\n  * Intercom\n* Warehouse: ??\n* Infra: k8s?\n\n\n* Signup with app.singerly.co as first and then standup more formally.",
      "state": "closed",
      "created_at": "2021-02-26T18:24:42.001Z",
      "updated_at": "2021-05-23T23:53:20.369Z",
      "closed_at": "2021-05-23T23:53:20.340Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "flow::Triage"
      ],
      "milestone": {
        "id": 2005522,
        "iid": 163,
        "group_id": 2524164,
        "title": "Fri: May 28, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-04-19T21:45:56.311Z",
        "updated_at": "2021-06-01T19:13:06.514Z",
        "due_date": "2021-05-29",
        "start_date": "2021-05-22",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/163"
      },
      "assignees": [
        {
          "id": 1942272,
          "username": "tayloramurphy",
          "public_email": "",
          "name": "Taylor A Murphy",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
          "web_url": "https://gitlab.com/tayloramurphy"
        }
      ],
      "author": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "user_notes_count": 9,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meta/-/issues/4",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/24722673/issues/4",
        "notes": "https://gitlab.com/api/v4/projects/24722673/issues/4/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/24722673/issues/4/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/24722673",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#4",
        "relative": "#4",
        "full": "meltano/meta#4"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 521408,
      "relative_position": 1073729784
    },
    {
      "id": 76109014,
      "iid": 2481,
      "project_id": 7603319,
      "title": "Environment Variable Substitution doesn't work with array values",
      "description": "### What is the current *bug* behavior?\nEnvironment variables can't be used in the `meltano.yml` file for arrays.\n\n\n\n### What is the expected *correct* behavior?\nThe yaml parser should traverse arrays to substitute environment variables. It would also be nice to add custom yaml variable support to the parser. (e.g. `custom_var: var` -> `database: '{{ custom_var }}'`)\n\n\n\n### Steps to reproduce\n- In a `meltano.yml` file try to use an environement variable in an array.\n\n\n### Relevant logs and/or screenshots\n```\nplugins:\n  extractors:\n  - name: tap-mysql\n    variant: transferwise\n    pip_url: pipelinewise-tap-mysql\n    config:\n      host: host\n      user: root\n      database: ${DB_NAME}\n    select:\n    - ${DB_NAME}-users.id\n    - ${DB_NAME}-users.email\n    metadata:\n      ${DB_NAME}-users:\n        replication-method: FULL_TABLE\n```\n`database: ${DB_NAME}` works because it's an object. But it doesn't work in the select because it's an array.\n\n### Possible fixes\nNot sure, sorry.\n\n\n\n### Further regression test\n_Ensure we automatically catch similar issues in the future_\n\n- [ ] Write additional adequate test cases and submit test results\n- [ ] Test results should be reviewed by a person from the team",
      "state": "closed",
      "created_at": "2020-12-16T00:40:22.011Z",
      "updated_at": "2022-05-30T06:42:42.163Z",
      "closed_at": "2022-05-30T06:42:42.144Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "Configuration",
        "Needs Refinement",
        "kind::Bug",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286180,
        "iid": 206,
        "group_id": 2524164,
        "title": "Q2-2022",
        "description": "",
        "state": "active",
        "created_at": "2021-10-18T15:22:10.509Z",
        "updated_at": "2022-01-24T17:51:23.679Z",
        "due_date": "2022-06-30",
        "start_date": "2022-04-01",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/206"
      },
      "assignees": [],
      "author": {
        "id": 7811051,
        "username": "cooley1",
        "public_email": "",
        "name": "Matthew Cooley",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/226570abef94aaacafac194e9b0c11edb5eaefa7b50fdb673c99fe10a2ff0f8f?s=80&d=identicon",
        "web_url": "https://gitlab.com/cooley1"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 4,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2481",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 2,
        "completed_count": 0
      },
      "weight": 8,
      "blocking_issues_count": 0,
      "has_tasks": false,
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2481",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2481/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2481/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2481",
        "relative": "#2481",
        "full": "meltano/meltano#2481"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 836215,
      "relative_position": 1073721576
    },
    {
      "id": 54102788,
      "iid": 2149,
      "project_id": 7603319,
      "title": "Create Helm chart to deploy Meltano to Kubernetes",
      "description": "The Helm chart should ideally run the Meltano schedule via Kubernetes orchestration without Airflow if possible.\n\nMinimum Goal:\nThe minimum goal will to be to provide a way to run a single `meltano elt` pipeline on a schedule with a Kubernetes job.\n\nIdeal Outcome:\nThe ideal outcome would be to support both running a project specific docker image and the default Meltano docker image in both readonly, as well as read-write mode to support the broadest possible user base. Each scheduled pipeline created using `meltano schedule` and available through `meltano schedule list --format=json` would result in its own scheduled `meltano elt` job.",
      "state": "closed",
      "created_at": "2020-07-08T14:16:00.817Z",
      "updated_at": "2021-12-17T22:45:19.964Z",
      "closed_at": "2021-12-17T22:42:45.251Z",
      "closed_by": {
        "id": 1942272,
        "username": "tayloramurphy",
        "public_email": "",
        "name": "Taylor A Murphy",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/1942272/avatar.png",
        "web_url": "https://gitlab.com/tayloramurphy"
      },
      "labels": [
        "flow::Doing",
        "kind::Feature",
        "valuestream::Meltano"
      ],
      "milestone": {
        "id": 2286172,
        "iid": 200,
        "group_id": 2524164,
        "title": "Fri: Dec 17, 2021",
        "description": "",
        "state": "closed",
        "created_at": "2021-10-18T15:20:21.743Z",
        "updated_at": "2022-01-04T16:10:50.410Z",
        "due_date": "2021-12-17",
        "start_date": "2021-12-11",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/200"
      },
      "assignees": [
        {
          "id": 7646034,
          "username": "kgpayne",
          "public_email": "",
          "name": "Ken Payne",
          "state": "active",
          "locked": false,
          "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
          "web_url": "https://gitlab.com/kgpayne"
        }
      ],
      "author": {
        "id": 6382744,
        "username": "vfnevin",
        "public_email": "",
        "name": "Nevin Morgan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/d96c494017867192a7d912cf2d6894b36714db9acd665fc04db0fe50f583a561?s=80&d=identicon",
        "web_url": "https://gitlab.com/vfnevin"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 7646034,
        "username": "kgpayne",
        "public_email": "",
        "name": "Ken Payne",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/7646034/avatar.png",
        "web_url": "https://gitlab.com/kgpayne"
      },
      "user_notes_count": 16,
      "merge_requests_count": 0,
      "upvotes": 1,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2149",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": 12,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2149",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2149/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2149/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2149",
        "relative": "#2149",
        "full": "meltano/meltano#2149"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 165402,
      "relative_position": 1073731323
    },
    {
      "id": 51528299,
      "iid": 2118,
      "project_id": 7603319,
      "title": "Document how to use an existing Airflow installation to orchestrate Meltano",
      "description": "Or Barda [asked on Slack](https://meltano.slack.com/archives/CFG3C3C66/p1593340568356000):\n\n> Hi guys, is there a way to use already running AirFlow in Meltano as the orchestrator?\n\nI responded:\n\n>>>\nAbsolutely! Using Meltano's \"built-in\"  Airflow orchestrator really just means installing it into a Meltano-managed Python venv inside `.meltano`, and invoking it through `meltano invoke` so that some default Meltano-compatible configuration can be dynamically applied at invocation time: https://gitlab.com/meltano/meltano/blob/master/src/meltano/core/bundle/discovery.yml#L840-855\n\nThat config points Airflow to `$MELTANO_PROJECT_ROOT/orchestrate/dags` to look for dags, which is where you'll find https://gitlab.com/meltano/files-airflow/-/blob/master/bundle/orchestrate/dags/meltano.py (since `meltano add orchestrator airflow` also addd the Airflow file bundle from that repo).\n\nThat DAG should work with any Airflow installation as long as the `MELTANO_PROJECT_ROOT` env var is set to point at the Meltano project directory, and as long as Meltano itself is installed and `meltano install` has been run inside the project.\n\nThat setup assumes you'll use `meltano schedule` to schedule your `meltano elt` pipelines, since it iterates over the result of `meltano schedule list --format=json` to create DAGs for each, but you can also create your own DAGs for any pipeline you fancy using `BashOperator` + `meltano elt`, or `DockerOperator` + `docker run <your project image> elt ...`  (see https://meltano.com/#containerization)\n>>>",
      "state": "closed",
      "created_at": "2020-06-29T15:17:07.636Z",
      "updated_at": "2020-12-17T15:45:44.319Z",
      "closed_at": "2020-07-01T16:17:26.995Z",
      "closed_by": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "labels": [
        "Accepting Merge Requests",
        "Documentation",
        "flow::Review"
      ],
      "milestone": {
        "id": 1321883,
        "iid": 113,
        "group_id": 2524164,
        "title": "Fri: Jul 3, 2020",
        "description": "",
        "state": "closed",
        "created_at": "2020-06-11T23:02:21.785Z",
        "updated_at": "2020-07-03T23:27:31.074Z",
        "due_date": "2020-07-04",
        "start_date": "2020-06-27",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/113"
      },
      "assignees": [
        {
          "id": 87854,
          "username": "DouweM",
          "public_email": "",
          "name": "Douwe Maan",
          "state": "active",
          "locked": false,
          "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
          "web_url": "https://gitlab.com/DouweM"
        }
      ],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2118",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2118",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2118/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2118/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2118",
        "relative": "#2118",
        "full": "meltano/meltano#2118"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 157320,
      "relative_position": 1073731823
    },
    {
      "id": 50094093,
      "iid": 2111,
      "project_id": 7603319,
      "title": "Add support for `<ENV>_FILE` config env vars to support Docker Secrets",
      "description": "Per https://docs.docker.com/engine/swarm/secrets/#build-support-for-docker-secrets-into-your-images:\n\n> If you develop a container that can be deployed as a service and requires sensitive data, such as a credential, as an environment variable, consider adapting your image to take advantage of Docker secrets. One way to do this is to ensure that each parameter you pass to the image when creating the container can also be read from a file.",
      "state": "closed",
      "created_at": "2020-06-25T20:10:14.971Z",
      "updated_at": "2022-05-30T05:56:51.886Z",
      "closed_at": "2022-05-30T05:56:51.866Z",
      "closed_by": {
        "id": 11629953,
        "username": "MeltyBot",
        "public_email": "",
        "name": "Melty Bot",
        "state": "active",
        "locked": false,
        "avatar_url": "https://gitlab.com/uploads/-/system/user/avatar/11629953/avatar.png",
        "web_url": "https://gitlab.com/MeltyBot"
      },
      "labels": [
        "Accepting Merge Requests",
        "flow::Doing"
      ],
      "milestone": {
        "id": 797629,
        "iid": 42,
        "group_id": 2524164,
        "title": "Backlog",
        "description": "As a start, I think it would be good to prioritize based on:\r\n- urgency of getting feedback\r\n- relative implementation difficulty\r\n- symbiotic relationships between issues",
        "state": "active",
        "created_at": "2019-02-21T14:50:28.741Z",
        "updated_at": "2019-02-21T14:50:28.741Z",
        "due_date": null,
        "start_date": "2019-02-25",
        "expired": false,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/42"
      },
      "assignees": [],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": null,
      "user_notes_count": 7,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2111",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2111",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2111/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2111/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2111",
        "relative": "#2111",
        "full": "meltano/meltano#2111"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 154759,
      "relative_position": 1073741604
    },
    {
      "id": 35148539,
      "iid": 2077,
      "project_id": 7603319,
      "title": "DBT inside \"meltano elt\" inside Airflow inside \"meltano invoke airflow\" can fail because it inherits Meltano venv through `PYTHONPATH`",
      "description": "Addressing https://gitlab.com/meltano/meltano/-/issues/2060 would fix this too, since we would no longer be injecting the Meltano venv into Airflow's venv through the `PYTHONPATH` variable. For the moment, we can work around it by resetting `PYTHONPATH`.",
      "state": "closed",
      "created_at": "2020-05-29T02:23:23.190Z",
      "updated_at": "2020-05-29T02:46:23.694Z",
      "closed_at": "2020-05-29T02:46:23.647Z",
      "closed_by": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "labels": [
        "flow::Review",
        "kind::Bug"
      ],
      "milestone": {
        "id": 1267575,
        "iid": 108,
        "group_id": 2524164,
        "title": "Fri: May 29, 2020",
        "description": "",
        "state": "closed",
        "created_at": "2020-05-04T15:09:29.592Z",
        "updated_at": "2020-05-29T23:47:48.216Z",
        "due_date": "2020-05-30",
        "start_date": "2020-05-23",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/108"
      },
      "assignees": [
        {
          "id": 87854,
          "username": "DouweM",
          "public_email": "",
          "name": "Douwe Maan",
          "state": "active",
          "locked": false,
          "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
          "web_url": "https://gitlab.com/DouweM"
        }
      ],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2077",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2077",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2077/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2077/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2077",
        "relative": "#2077",
        "full": "meltano/meltano#2077"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 130493,
      "relative_position": 1073733323
    },
    {
      "id": 35147887,
      "iid": 2076,
      "project_id": 7603319,
      "title": "Airflow looks for DAGs in plugins dir instead of dags dir",
      "description": "Introduced by https://gitlab.com/meltano/meltano/commit/3603cd558613c5ae2a511f9860e0b599d12faf63, part of https://gitlab.com/meltano/meltano/-/merge_requests/1664. Released in v1.34.0 and v1.34.1.\n\n```sh\nmeltano --log-level=debug invoke airflow version\n```\n\nPrints, among other things:\n\n```\n[2020-05-28 20:51:45,540|D|MainThread|root] Env: {... 'AIRFLOW__CORE__DAGS_FOLDER': '/Users/douwemaan/Desktop/meltano-projects/demo-project/orchestrate/plugins', ...}\n```\n\nThis is caused by this snippet of [`discovery.yml`](https://gitlab.com/meltano/meltano/blob/master/src/meltano/core/bundle/discovery.yml):\n\n```yaml\n      - name: core.dags_folder\n        value: $MELTANO_PROJECT_ROOT/orchestrate/dags\n        env: AIRFLOW__CORE__DAGS_FOLDER\n      - name: core.plugins_folder\n        value: $MELTANO_PROJECT_ROOT/orchestrate/plugins\n        env: AIRFLOW__CORE__DAGS_FOLDER\n```\n\nThe duplicate `env` values results in the `AIRFLOW__CORE__DAGS_FOLDER` variable first being set to the value of `core.dags_folder` (correct), and then being overridden with the value of `core.plugins_folder` (incorrect).",
      "state": "closed",
      "created_at": "2020-05-29T01:56:33.748Z",
      "updated_at": "2020-05-29T02:25:05.977Z",
      "closed_at": "2020-05-29T02:25:05.910Z",
      "closed_by": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "labels": [
        "flow::Review",
        "kind::Bug"
      ],
      "milestone": {
        "id": 1267575,
        "iid": 108,
        "group_id": 2524164,
        "title": "Fri: May 29, 2020",
        "description": "",
        "state": "closed",
        "created_at": "2020-05-04T15:09:29.592Z",
        "updated_at": "2020-05-29T23:47:48.216Z",
        "due_date": "2020-05-30",
        "start_date": "2020-05-23",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/108"
      },
      "assignees": [
        {
          "id": 87854,
          "username": "DouweM",
          "public_email": "",
          "name": "Douwe Maan",
          "state": "active",
          "locked": false,
          "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
          "web_url": "https://gitlab.com/DouweM"
        }
      ],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2076",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "0 of 0 checklist items completed",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2076",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2076/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2076/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2076",
        "relative": "#2076",
        "full": "meltano/meltano#2076"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 130466,
      "relative_position": 1073733823
    },
    {
      "id": 35146346,
      "iid": 2075,
      "project_id": 7603319,
      "title": "Airflow complains that metadata DB is not initialized when `AIRFLOW__CORE__SQL_ALCHEMY_CONN` is overridden at runtime",
      "description": "",
      "state": "closed",
      "created_at": "2020-05-29T00:34:21.805Z",
      "updated_at": "2020-05-29T03:05:36.014Z",
      "closed_at": "2020-05-29T03:05:35.935Z",
      "closed_by": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "labels": [
        "flow::Doing"
      ],
      "milestone": {
        "id": 1267575,
        "iid": 108,
        "group_id": 2524164,
        "title": "Fri: May 29, 2020",
        "description": "",
        "state": "closed",
        "created_at": "2020-05-04T15:09:29.592Z",
        "updated_at": "2020-05-29T23:47:48.216Z",
        "due_date": "2020-05-30",
        "start_date": "2020-05-23",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/108"
      },
      "assignees": [
        {
          "id": 87854,
          "username": "DouweM",
          "public_email": "",
          "name": "Douwe Maan",
          "state": "active",
          "locked": false,
          "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
          "web_url": "https://gitlab.com/DouweM"
        }
      ],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "user_notes_count": 0,
      "merge_requests_count": 1,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/meltano/-/issues/2075",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/7603319/issues/2075",
        "notes": "https://gitlab.com/api/v4/projects/7603319/issues/2075/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/7603319/issues/2075/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/7603319",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#2075",
        "relative": "#2075",
        "full": "meltano/meltano#2075"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 130415,
      "relative_position": 1073734323
    },
    {
      "id": 35143642,
      "iid": 3,
      "project_id": 18983530,
      "title": "Add Dockerfile",
      "description": "",
      "state": "closed",
      "created_at": "2020-05-28T22:22:27.780Z",
      "updated_at": "2020-06-25T19:30:16.935Z",
      "closed_at": "2020-06-25T19:30:16.786Z",
      "closed_by": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "labels": [
        "flow::Review"
      ],
      "milestone": {
        "id": 1321882,
        "iid": 112,
        "group_id": 2524164,
        "title": "Fri: Jun 26, 2020",
        "description": "",
        "state": "closed",
        "created_at": "2020-06-11T23:02:05.458Z",
        "updated_at": "2020-06-26T23:00:10.339Z",
        "due_date": "2020-06-27",
        "start_date": "2020-06-20",
        "expired": true,
        "web_url": "https://gitlab.com/groups/meltano/-/milestones/112"
      },
      "assignees": [
        {
          "id": 87854,
          "username": "DouweM",
          "public_email": "",
          "name": "Douwe Maan",
          "state": "active",
          "locked": false,
          "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
          "web_url": "https://gitlab.com/DouweM"
        }
      ],
      "author": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "type": "ISSUE",
      "assignee": {
        "id": 87854,
        "username": "DouweM",
        "public_email": "",
        "name": "Douwe Maan",
        "state": "active",
        "locked": false,
        "avatar_url": "https://secure.gravatar.com/avatar/bbb752c75ae2744bddf1640d75edf9b6f7d4e5f4fbba4a4f0910961e6f0519b9?s=80&d=identicon",
        "web_url": "https://gitlab.com/DouweM"
      },
      "user_notes_count": 0,
      "merge_requests_count": 2,
      "upvotes": 0,
      "downvotes": 0,
      "due_date": null,
      "confidential": false,
      "discussion_locked": null,
      "issue_type": "issue",
      "web_url": "https://gitlab.com/meltano/demo-project/-/issues/3",
      "time_stats": {
        "time_estimate": 0,
        "total_time_spent": 0,
        "human_time_estimate": null,
        "human_total_time_spent": null
      },
      "task_completion_status": {
        "count": 0,
        "completed_count": 0
      },
      "weight": null,
      "blocking_issues_count": 0,
      "has_tasks": true,
      "task_status": "",
      "_links": {
        "self": "https://gitlab.com/api/v4/projects/18983530/issues/3",
        "notes": "https://gitlab.com/api/v4/projects/18983530/issues/3/notes",
        "award_emoji": "https://gitlab.com/api/v4/projects/18983530/issues/3/award_emoji",
        "project": "https://gitlab.com/api/v4/projects/18983530",
        "closed_as_duplicate_of": null
      },
      "references": {
        "short": "#3",
        "relative": "#3",
        "full": "meltano/demo-project#3"
      },
      "severity": "UNKNOWN",
      "moved_to_id": null,
      "imported": false,
      "imported_from": "none",
      "service_desk_reply_to": null,
      "epic_iid": 79,
      "epic": {
        "id": 53029,
        "iid": 79,
        "title": "Running pipelines in production",
        "url": "/groups/meltano/-/epics/79",
        "group_id": 2524164,
        "human_readable_end_date": "Sep 30, 2022",
        "human_readable_timestamp": "<strong>Past due</strong>"
      },
      "iteration": null,
      "health_status": null,
      "epic_issue_id": 130304,
      "relative_position": 1073738448
    }
  ]
}
