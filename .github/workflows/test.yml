name: Test

on:
  pull_request: {}
  push:
    branches: [main]
  workflow_dispatch:
    inputs: {}

jobs:
  tests:
    name: Test on ${{ matrix.python-version }} (${{ matrix.tox-env }}${{ matrix.external && ', external' || '' }}) / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        include:
        - { tox-env: py, python-version: "3.7", os: "ubuntu-latest" }
        - { tox-env: py, python-version: "3.8", os: "ubuntu-latest" }
        - { tox-env: py, python-version: "3.9", os: "ubuntu-latest" }
        - { tox-env: py, python-version: "3.10", os: "ubuntu-latest" }
        - { tox-env: py, python-version: "3.10", os: "ubuntu-latest", external: true }
        - { tox-env: lint, python-version: "3.8", os: "ubuntu-latest" }

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3.0.2

    - name: Install Poetry
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        pipx install poetry
        poetry --version

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.1.2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
        cache: 'poetry'

    - name: Upgrade pip
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        pip install pip
        pip --version

    - name: Install Dependencies
      run: |
        poetry env use "${{ matrix.python-version }}"
        poetry install

    - name: Run tox
      run: |
        poetry run tox -e ${{ matrix.tox-env }} -- ${{ matrix.external && ' -m "external"' || '' }}
